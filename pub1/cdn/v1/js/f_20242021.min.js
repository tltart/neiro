!function (t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.io = e() : t.io = e()
}
(this, function () {
    return function (t) {
        function e(r) {
            if (n[r]) return n[r].exports;
            var o = n[r] = {exports: {}, id: r, loaded: !1};
            return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports
        }

        var n = {};
        return e.m = t, e.c = n, e.p = "", e(0)
    }([function (t, e, n) {
        "use strict";

        function r(t, e) {
            "object" === ("undefined" == typeof t ? "undefined" : o(t)) && (e = t, t = void 0), e = e || {};
            var n, r = i(t), s = r.source, u = r.id, h = r.path, f = p[u] && h in p[u].nsps,
                l = e.forceNew || e["force new connection"] || !1 === e.multiplex || f;
            return l ? (c("ignoring socket cache for %s", s), n = a(s, e)) : (p[u] || (c("new io instance for %s", s), p[u] = a(s, e)), n = p[u]), r.query && !e.query && (e.query = r.query), n.socket(r.path, e)
        }

        var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
            return typeof t
        } : function (t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        }, i = n(1), s = n(7), a = n(12), c = n(3)("socket.io-client");
        t.exports = e = r;
        var p = e.managers = {};
        e.protocol = s.protocol, e.connect = r, e.Manager = n(12), e.Socket = n(36)
    }, function (t, e, n) {
        "use strict";

        function r(t, e) {
            var n = t;
            e = e || "undefined" != typeof location && location, null == t && (t = e.protocol + "//" + e.host), "string" == typeof t && ("/" === t.charAt(0) && (t = "/" === t.charAt(1) ? e.protocol + t : e.host + t), /^(https?|wss?):\/\//.test(t) || (i("protocol-less url %s", t), t = "undefined" != typeof e ? e.protocol + "//" + t : "https://" + t), i("parse %s", t), n = o(t)), n.port || (/^(http|ws)$/.test(n.protocol) ? n.port = "80" : /^(http|ws)s$/.test(n.protocol) && (n.port = "443")), n.path = n.path || "/";
            var r = n.host.indexOf(":") !== -1, s = r ? "[" + n.host + "]" : n.host;
            return n.id = n.protocol + "://" + s + ":" + n.port, n.href = n.protocol + "://" + s + (e && e.port === n.port ? "" : ":" + n.port), n
        }

        var o = n(2), i = n(3)("socket.io-client:url");
        t.exports = r
    }, function (t, e) {
        var n = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
            r = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
        t.exports = function (t) {
            var e = t, o = t.indexOf("["), i = t.indexOf("]");
            o != -1 && i != -1 && (t = t.substring(0, o) + t.substring(o, i).replace(/:/g, ";") + t.substring(i, t.length));
            for (var s = n.exec(t || ""), a = {}, c = 14; c--;) a[r[c]] = s[c] || "";
            return o != -1 && i != -1 && (a.source = e, a.host = a.host.substring(1, a.host.length - 1).replace(/;/g, ":"), a.authority = a.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), a.ipv6uri = !0), a
        }
    }, function (t, e, n) {
        (function (r) {
            function o() {
                return !("undefined" == typeof window || !window.process || "renderer" !== window.process.type) || ("undefined" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) && ("undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
            }

            function i(t) {
                var n = this.useColors;
                if (t[0] = (n ? "%c" : "") + this.namespace + (n ? " %c" : " ") + t[0] + (n ? "%c " : " ") + "+" + e.humanize(this.diff), n) {
                    var r = "color: " + this.color;
                    t.splice(1, 0, r, "color: inherit");
                    var o = 0, i = 0;
                    t[0].replace(/%[a-zA-Z%]/g, function (t) {
                        "%%" !== t && (o++, "%c" === t && (i = o))
                    }), t.splice(i, 0, r)
                }
            }

            function s() {
                return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments)
            }

            function a(t) {
                try {
                    null == t ? e.storage.removeItem("debug") : e.storage.debug = t
                } catch (n) {
                }
            }

            function c() {
                var t;
                try {
                    t = e.storage.debug
                } catch (n) {
                }
                return !t && "undefined" != typeof r && "env" in r && (t = r.env.DEBUG), t
            }

            function p() {
                try {
                    return window.localStorage
                } catch (t) {
                }
            }

            e = t.exports = n(5), e.log = s, e.formatArgs = i, e.save = a, e.load = c, e.useColors = o, e.storage = "undefined" != typeof chrome && "undefined" != typeof chrome.storage ? chrome.storage.local : p(), e.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], e.formatters.j = function (t) {
                try {
                    return JSON.stringify(t)
                } catch (e) {
                    return "[UnexpectedJSONParseError]: " + e.message
                }
            }, e.enable(c())
        }).call(e, n(4))
    }, function (t, e) {
        function n() {
            throw new Error("setTimeout has not been defined")
        }

        function r() {
            throw new Error("clearTimeout has not been defined")
        }

        function o(t) {
            if (u === setTimeout) return setTimeout(t, 0);
            if ((u === n || !u) && setTimeout) return u = setTimeout, setTimeout(t, 0);
            try {
                return u(t, 0)
            } catch (e) {
                try {
                    return u.call(null, t, 0)
                } catch (e) {
                    return u.call(this, t, 0)
                }
            }
        }

        function i(t) {
            if (h === clearTimeout) return clearTimeout(t);
            if ((h === r || !h) && clearTimeout) return h = clearTimeout, clearTimeout(t);
            try {
                return h(t)
            } catch (e) {
                try {
                    return h.call(null, t)
                } catch (e) {
                    return h.call(this, t)
                }
            }
        }

        function s() {
            y && l && (y = !1, l.length ? d = l.concat(d) : m = -1, d.length && a())
        }

        function a() {
            if (!y) {
                var t = o(s);
                y = !0;
                for (var e = d.length; e;) {
                    for (l = d, d = []; ++m < e;) l && l[m].run();
                    m = -1, e = d.length
                }
                l = null, y = !1, i(t)
            }
        }

        function c(t, e) {
            this.fun = t, this.array = e
        }

        function p() {
        }

        var u, h, f = t.exports = {};
        !function () {
            try {
                u = "function" == typeof setTimeout ? setTimeout : n
            } catch (t) {
                u = n
            }
            try {
                h = "function" == typeof clearTimeout ? clearTimeout : r
            } catch (t) {
                h = r
            }
        }();
        var l, d = [], y = !1, m = -1;
        f.nextTick = function (t) {
            var e = new Array(arguments.length - 1);
            if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
            d.push(new c(t, e)), 1 !== d.length || y || o(a)
        }, c.prototype.run = function () {
            this.fun.apply(null, this.array)
        }, f.title = "browser", f.browser = !0, f.env = {}, f.argv = [], f.version = "", f.versions = {}, f.on = p, f.addListener = p, f.once = p, f.off = p, f.removeListener = p, f.removeAllListeners = p, f.emit = p, f.prependListener = p, f.prependOnceListener = p, f.listeners = function (t) {
            return []
        }, f.binding = function (t) {
            throw new Error("process.binding is not supported")
        }, f.cwd = function () {
            return "/"
        }, f.chdir = function (t) {
            throw new Error("process.chdir is not supported")
        }, f.umask = function () {
            return 0
        }
    }, function (t, e, n) {
        function r(t) {
            var n, r = 0;
            for (n in t) r = (r << 5) - r + t.charCodeAt(n), r |= 0;
            return e.colors[Math.abs(r) % e.colors.length]
        }

        function o(t) {
            function n() {
                if (n.enabled) {
                    var t = n, r = +new Date, i = r - (o || r);
                    t.diff = i, t.prev = o, t.curr = r, o = r;
                    for (var s = new Array(arguments.length), a = 0; a < s.length; a++) s[a] = arguments[a];
                    s[0] = e.coerce(s[0]), "string" != typeof s[0] && s.unshift("%O");
                    var c = 0;
                    s[0] = s[0].replace(/%([a-zA-Z%])/g, function (n, r) {
                        if ("%%" === n) return n;
                        c++;
                        var o = e.formatters[r];
                        if ("function" == typeof o) {
                            var i = s[c];
                            n = o.call(t, i), s.splice(c, 1), c--
                        }
                        return n
                    }), e.formatArgs.call(t, s);
                    var p = n.log || e.log || console.log.bind(console);
                    p.apply(t, s)
                }
            }

            var o;
            return n.namespace = t, n.enabled = e.enabled(t), n.useColors = e.useColors(), n.color = r(t), n.destroy = i, "function" == typeof e.init && e.init(n), e.instances.push(n), n
        }

        function i() {
            var t = e.instances.indexOf(this);
            return t !== -1 && (e.instances.splice(t, 1), !0)
        }

        function s(t) {
            e.save(t), e.names = [], e.skips = [];
            var n, r = ("string" == typeof t ? t : "").split(/[\s,]+/), o = r.length;
            for (n = 0; n < o; n++) r[n] && (t = r[n].replace(/\*/g, ".*?"), "-" === t[0] ? e.skips.push(new RegExp("^" + t.substr(1) + "$")) : e.names.push(new RegExp("^" + t + "$")));
            for (n = 0; n < e.instances.length; n++) {
                var i = e.instances[n];
                i.enabled = e.enabled(i.namespace)
            }
        }

        function a() {
            e.enable("")
        }

        function c(t) {
            if ("*" === t[t.length - 1]) return !0;
            var n, r;
            for (n = 0, r = e.skips.length; n < r; n++) if (e.skips[n].test(t)) return !1;
            for (n = 0, r = e.names.length; n < r; n++) if (e.names[n].test(t)) return !0;
            return !1
        }

        function p(t) {
            return t instanceof Error ? t.stack || t.message : t
        }

        e = t.exports = o.debug = o["default"] = o, e.coerce = p, e.disable = a, e.enable = s, e.enabled = c, e.humanize = n(6), e.instances = [], e.names = [], e.skips = [], e.formatters = {}
    }, function (t, e) {
        function n(t) {
            if (t = String(t), !(t.length > 100)) {
                var e = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t);
                if (e) {
                    var n = parseFloat(e[1]), r = (e[2] || "ms").toLowerCase();
                    switch (r) {
                        case"years":
                        case"year":
                        case"yrs":
                        case"yr":
                        case"y":
                            return n * u;
                        case"days":
                        case"day":
                        case"d":
                            return n * p;
                        case"hours":
                        case"hour":
                        case"hrs":
                        case"hr":
                        case"h":
                            return n * c;
                        case"minutes":
                        case"minute":
                        case"mins":
                        case"min":
                        case"m":
                            return n * a;
                        case"seconds":
                        case"second":
                        case"secs":
                        case"sec":
                        case"s":
                            return n * s;
                        case"milliseconds":
                        case"millisecond":
                        case"msecs":
                        case"msec":
                        case"ms":
                            return n;
                        default:
                            return
                    }
                }
            }
        }

        function r(t) {
            return t >= p ? Math.round(t / p) + "d" : t >= c ? Math.round(t / c) + "h" : t >= a ? Math.round(t / a) + "m" : t >= s ? Math.round(t / s) + "s" : t + "ms"
        }

        function o(t) {
            return i(t, p, "day") || i(t, c, "hour") || i(t, a, "minute") || i(t, s, "second") || t + " ms"
        }

        function i(t, e, n) {
            if (!(t < e)) return t < 1.5 * e ? Math.floor(t / e) + " " + n : Math.ceil(t / e) + " " + n + "s"
        }

        var s = 1e3, a = 60 * s, c = 60 * a, p = 24 * c, u = 365.25 * p;
        t.exports = function (t, e) {
            e = e || {};
            var i = typeof t;
            if ("string" === i && t.length > 0) return n(t);
            if ("number" === i && isNaN(t) === !1) return e["long"] ? o(t) : r(t);
            throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t))
        }
    }, function (t, e, n) {
        function r() {
        }

        function o(t) {
            var n = "" + t.type;
            if (e.BINARY_EVENT !== t.type && e.BINARY_ACK !== t.type || (n += t.attachments + "-"), t.nsp && "/" !== t.nsp && (n += t.nsp + ","), null != t.id && (n += t.id), null != t.data) {
                var r = i(t.data);
                if (r === !1) return g;
                n += r
            }
            return f("encoded %j as %s", t, n), n
        }

        function i(t) {
            try {
                return JSON.stringify(t)
            } catch (e) {
                return !1
            }
        }

        function s(t, e) {
            function n(t) {
                var n = d.deconstructPacket(t), r = o(n.packet), i = n.buffers;
                i.unshift(r), e(i)
            }

            d.removeBlobs(t, n)
        }

        function a() {
            this.reconstructor = null
        }

        function c(t) {
            var n = 0, r = {type: Number(t.charAt(0))};
            if (null == e.types[r.type]) return h("unknown packet type " + r.type);
            if (e.BINARY_EVENT === r.type || e.BINARY_ACK === r.type) {
                for (var o = ""; "-" !== t.charAt(++n) && (o += t.charAt(n), n != t.length);) ;
                if (o != Number(o) || "-" !== t.charAt(n)) throw new Error("Illegal attachments");
                r.attachments = Number(o)
            }
            if ("/" === t.charAt(n + 1)) for (r.nsp = ""; ++n;) {
                var i = t.charAt(n);
                if ("," === i) break;
                if (r.nsp += i, n === t.length) break
            } else r.nsp = "/";
            var s = t.charAt(n + 1);
            if ("" !== s && Number(s) == s) {
                for (r.id = ""; ++n;) {
                    var i = t.charAt(n);
                    if (null == i || Number(i) != i) {
                        --n;
                        break
                    }
                    if (r.id += t.charAt(n), n === t.length) break
                }
                r.id = Number(r.id)
            }
            if (t.charAt(++n)) {
                var a = p(t.substr(n)), c = a !== !1 && (r.type === e.ERROR || y(a));
                if (!c) return h("invalid payload");
                r.data = a
            }
            return f("decoded %s as %j", t, r), r
        }

        function p(t) {
            try {
                return JSON.parse(t)
            } catch (e) {
                return !1
            }
        }

        function u(t) {
            this.reconPack = t, this.buffers = []
        }

        function h(t) {
            return {type: e.ERROR, data: "parser error: " + t}
        }

        var f = n(3)("socket.io-parser"), l = n(8), d = n(9), y = n(10), m = n(11);
        e.protocol = 4, e.types = ["CONNECT", "DISCONNECT", "EVENT", "ACK", "ERROR", "BINARY_EVENT", "BINARY_ACK"], e.CONNECT = 0, e.DISCONNECT = 1, e.EVENT = 2, e.ACK = 3, e.ERROR = 4, e.BINARY_EVENT = 5, e.BINARY_ACK = 6, e.Encoder = r, e.Decoder = a;
        var g = e.ERROR + '"encode error"';
        r.prototype.encode = function (t, n) {
            if (f("encoding packet %j", t), e.BINARY_EVENT === t.type || e.BINARY_ACK === t.type) s(t, n); else {
                var r = o(t);
                n([r])
            }
        }, l(a.prototype), a.prototype.add = function (t) {
            var n;
            if ("string" == typeof t) n = c(t), e.BINARY_EVENT === n.type || e.BINARY_ACK === n.type ? (this.reconstructor = new u(n), 0 === this.reconstructor.reconPack.attachments && this.emit("decoded", n)) : this.emit("decoded", n); else {
                if (!m(t) && !t.base64) throw new Error("Unknown type: " + t);
                if (!this.reconstructor) throw new Error("got binary data when not reconstructing a packet");
                n = this.reconstructor.takeBinaryData(t), n && (this.reconstructor = null, this.emit("decoded", n))
            }
        }, a.prototype.destroy = function () {
            this.reconstructor && this.reconstructor.finishedReconstruction()
        }, u.prototype.takeBinaryData = function (t) {
            if (this.buffers.push(t), this.buffers.length === this.reconPack.attachments) {
                var e = d.reconstructPacket(this.reconPack, this.buffers);
                return this.finishedReconstruction(), e
            }
            return null
        }, u.prototype.finishedReconstruction = function () {
            this.reconPack = null, this.buffers = []
        }
    }, function (t, e, n) {
        function r(t) {
            if (t) return o(t)
        }

        function o(t) {
            for (var e in r.prototype) t[e] = r.prototype[e];
            return t
        }

        t.exports = r, r.prototype.on = r.prototype.addEventListener = function (t, e) {
            return this._callbacks = this._callbacks || {}, (this._callbacks["$" + t] = this._callbacks["$" + t] || []).push(e), this
        }, r.prototype.once = function (t, e) {
            function n() {
                this.off(t, n), e.apply(this, arguments)
            }

            return n.fn = e, this.on(t, n), this
        }, r.prototype.off = r.prototype.removeListener = r.prototype.removeAllListeners = r.prototype.removeEventListener = function (t, e) {
            if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
            var n = this._callbacks["$" + t];
            if (!n) return this;
            if (1 == arguments.length) return delete this._callbacks["$" + t], this;
            for (var r, o = 0; o < n.length; o++) if (r = n[o], r === e || r.fn === e) {
                n.splice(o, 1);
                break
            }
            return this
        }, r.prototype.emit = function (t) {
            this._callbacks = this._callbacks || {};
            var e = [].slice.call(arguments, 1), n = this._callbacks["$" + t];
            if (n) {
                n = n.slice(0);
                for (var r = 0, o = n.length; r < o; ++r) n[r].apply(this, e)
            }
            return this
        }, r.prototype.listeners = function (t) {
            return this._callbacks = this._callbacks || {}, this._callbacks["$" + t] || []
        }, r.prototype.hasListeners = function (t) {
            return !!this.listeners(t).length
        }
    }, function (t, e, n) {
        function r(t, e) {
            if (!t) return t;
            if (s(t)) {
                var n = {_placeholder: !0, num: e.length};
                return e.push(t), n
            }
            if (i(t)) {
                for (var o = new Array(t.length), a = 0; a < t.length; a++) o[a] = r(t[a], e);
                return o
            }
            if ("object" == typeof t && !(t instanceof Date)) {
                var o = {};
                for (var c in t) o[c] = r(t[c], e);
                return o
            }
            return t
        }

        function o(t, e) {
            if (!t) return t;
            if (t && t._placeholder) return e[t.num];
            if (i(t)) for (var n = 0; n < t.length; n++) t[n] = o(t[n], e); else if ("object" == typeof t) for (var r in t) t[r] = o(t[r], e);
            return t
        }

        var i = n(10), s = n(11), a = Object.prototype.toString,
            c = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === a.call(Blob),
            p = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === a.call(File);
        e.deconstructPacket = function (t) {
            var e = [], n = t.data, o = t;
            return o.data = r(n, e), o.attachments = e.length, {packet: o, buffers: e}
        }, e.reconstructPacket = function (t, e) {
            return t.data = o(t.data, e), t.attachments = void 0, t
        }, e.removeBlobs = function (t, e) {
            function n(t, a, u) {
                if (!t) return t;
                if (c && t instanceof Blob || p && t instanceof File) {
                    r++;
                    var h = new FileReader;
                    h.onload = function () {
                        u ? u[a] = this.result : o = this.result, --r || e(o)
                    }, h.readAsArrayBuffer(t)
                } else if (i(t)) for (var f = 0; f < t.length; f++) n(t[f], f, t); else if ("object" == typeof t && !s(t)) for (var l in t) n(t[l], l, t)
            }

            var r = 0, o = t;
            n(o), r || e(o)
        }
    }, function (t, e) {
        var n = {}.toString;
        t.exports = Array.isArray || function (t) {
            return "[object Array]" == n.call(t)
        }
    }, function (t, e) {
        function n(t) {
            return r && Buffer.isBuffer(t) || o && (t instanceof ArrayBuffer || i(t))
        }

        t.exports = n;
        var r = "function" == typeof Buffer && "function" == typeof Buffer.isBuffer,
            o = "function" == typeof ArrayBuffer, i = function (t) {
                return "function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : t.buffer instanceof ArrayBuffer
            }
    }, function (t, e, n) {
        "use strict";

        function r(t, e) {
            if (!(this instanceof r)) return new r(t, e);
            t && "object" === ("undefined" == typeof t ? "undefined" : o(t)) && (e = t, t = void 0), e = e || {}, e.path = e.path || "/socket.io", this.nsps = {}, this.subs = [], this.opts = e, this.reconnection(e.reconnection !== !1), this.reconnectionAttempts(e.reconnectionAttempts || 1 / 0), this.reconnectionDelay(e.reconnectionDelay || 1e3), this.reconnectionDelayMax(e.reconnectionDelayMax || 5e3), this.randomizationFactor(e.randomizationFactor || .5), this.backoff = new l({
                min: this.reconnectionDelay(),
                max: this.reconnectionDelayMax(),
                jitter: this.randomizationFactor()
            }), this.timeout(null == e.timeout ? 2e4 : e.timeout), this.readyState = "closed", this.uri = t, this.connecting = [], this.lastPing = null, this.encoding = !1, this.packetBuffer = [];
            var n = e.parser || c;
            this.encoder = new n.Encoder, this.decoder = new n.Decoder, this.autoConnect = e.autoConnect !== !1, this.autoConnect && this.open()
        }

        var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
                return typeof t
            } : function (t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }, i = n(13), s = n(36), a = n(8), c = n(7), p = n(38), u = n(39), h = n(3)("socket.io-client:manager"),
            f = n(35), l = n(40), d = Object.prototype.hasOwnProperty;
        t.exports = r, r.prototype.emitAll = function () {
            this.emit.apply(this, arguments);
            for (var t in this.nsps) d.call(this.nsps, t) && this.nsps[t].emit.apply(this.nsps[t], arguments)
        }, r.prototype.updateSocketIds = function () {
            for (var t in this.nsps) d.call(this.nsps, t) && (this.nsps[t].id = this.generateId(t))
        }, r.prototype.generateId = function (t) {
            return ("/" === t ? "" : t + "#") + this.engine.id
        }, a(r.prototype), r.prototype.reconnection = function (t) {
            return arguments.length ? (this._reconnection = !!t, this) : this._reconnection
        }, r.prototype.reconnectionAttempts = function (t) {
            return arguments.length ? (this._reconnectionAttempts = t, this) : this._reconnectionAttempts
        }, r.prototype.reconnectionDelay = function (t) {
            return arguments.length ? (this._reconnectionDelay = t, this.backoff && this.backoff.setMin(t), this) : this._reconnectionDelay
        }, r.prototype.randomizationFactor = function (t) {
            return arguments.length ? (this._randomizationFactor = t, this.backoff && this.backoff.setJitter(t), this) : this._randomizationFactor
        }, r.prototype.reconnectionDelayMax = function (t) {
            return arguments.length ? (this._reconnectionDelayMax = t, this.backoff && this.backoff.setMax(t), this) : this._reconnectionDelayMax
        }, r.prototype.timeout = function (t) {
            return arguments.length ? (this._timeout = t, this) : this._timeout
        }, r.prototype.maybeReconnectOnOpen = function () {
            !this.reconnecting && this._reconnection && 0 === this.backoff.attempts && this.reconnect()
        }, r.prototype.open = r.prototype.connect = function (t, e) {
            if (h("readyState %s", this.readyState), ~this.readyState.indexOf("open")) return this;
            h("opening %s", this.uri), this.engine = i(this.uri, this.opts);
            var n = this.engine, r = this;
            this.readyState = "opening", this.skipReconnect = !1;
            var o = p(n, "open", function () {
                r.onopen(), t && t()
            }), s = p(n, "error", function (e) {
                if (h("connect_error"), r.cleanup(), r.readyState = "closed", r.emitAll("connect_error", e), t) {
                    var n = new Error("Connection error");
                    n.data = e, t(n)
                } else r.maybeReconnectOnOpen()
            });
            if (!1 !== this._timeout) {
                var a = this._timeout;
                h("connect attempt will timeout after %d", a);
                var c = setTimeout(function () {
                    h("connect attempt timed out after %d", a), o.destroy(), n.close(), n.emit("error", "timeout"), r.emitAll("connect_timeout", a)
                }, a);
                this.subs.push({
                    destroy: function () {
                        clearTimeout(c)
                    }
                })
            }
            return this.subs.push(o), this.subs.push(s), this
        }, r.prototype.onopen = function () {
            h("open"), this.cleanup(), this.readyState = "open", this.emit("open");
            var t = this.engine;
            this.subs.push(p(t, "data", u(this, "ondata"))), this.subs.push(p(t, "ping", u(this, "onping"))), this.subs.push(p(t, "pong", u(this, "onpong"))), this.subs.push(p(t, "error", u(this, "onerror"))), this.subs.push(p(t, "close", u(this, "onclose"))), this.subs.push(p(this.decoder, "decoded", u(this, "ondecoded")))
        }, r.prototype.onping = function () {
            this.lastPing = new Date, this.emitAll("ping")
        }, r.prototype.onpong = function () {
            this.emitAll("pong", new Date - this.lastPing)
        }, r.prototype.ondata = function (t) {
            this.decoder.add(t)
        }, r.prototype.ondecoded = function (t) {
            this.emit("packet", t)
        }, r.prototype.onerror = function (t) {
            h("error", t), this.emitAll("error", t)
        }, r.prototype.socket = function (t, e) {
            function n() {
                ~f(o.connecting, r) || o.connecting.push(r)
            }

            var r = this.nsps[t];
            if (!r) {
                r = new s(this, t, e), this.nsps[t] = r;
                var o = this;
                r.on("connecting", n), r.on("connect", function () {
                    r.id = o.generateId(t)
                }), this.autoConnect && n()
            }
            return r
        }, r.prototype.destroy = function (t) {
            var e = f(this.connecting, t);
            ~e && this.connecting.splice(e, 1), this.connecting.length || this.close()
        }, r.prototype.packet = function (t) {
            h("writing packet %j", t);
            var e = this;
            t.query && 0 === t.type && (t.nsp += "?" + t.query), e.encoding ? e.packetBuffer.push(t) : (e.encoding = !0, this.encoder.encode(t, function (n) {
                for (var r = 0; r < n.length; r++) e.engine.write(n[r], t.options);
                e.encoding = !1, e.processPacketQueue()
            }))
        }, r.prototype.processPacketQueue = function () {
            if (this.packetBuffer.length > 0 && !this.encoding) {
                var t = this.packetBuffer.shift();
                this.packet(t)
            }
        }, r.prototype.cleanup = function () {
            h("cleanup");
            for (var t = this.subs.length, e = 0; e < t; e++) {
                var n = this.subs.shift();
                n.destroy()
            }
            this.packetBuffer = [], this.encoding = !1, this.lastPing = null, this.decoder.destroy()
        }, r.prototype.close = r.prototype.disconnect = function () {
            h("disconnect"), this.skipReconnect = !0, this.reconnecting = !1, "opening" === this.readyState && this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.engine && this.engine.close()
        }, r.prototype.onclose = function (t) {
            h("onclose"), this.cleanup(), this.backoff.reset(), this.readyState = "closed", this.emit("close", t), this._reconnection && !this.skipReconnect && this.reconnect()
        }, r.prototype.reconnect = function () {
            if (this.reconnecting || this.skipReconnect) return this;
            var t = this;
            if (this.backoff.attempts >= this._reconnectionAttempts) h("reconnect failed"), this.backoff.reset(), this.emitAll("reconnect_failed"), this.reconnecting = !1; else {
                var e = this.backoff.duration();
                h("will wait %dms before reconnect attempt", e), this.reconnecting = !0;
                var n = setTimeout(function () {
                    t.skipReconnect || (h("attempting reconnect"), t.emitAll("reconnect_attempt", t.backoff.attempts), t.emitAll("reconnecting", t.backoff.attempts), t.skipReconnect || t.open(function (e) {
                        e ? (h("reconnect attempt error"), t.reconnecting = !1, t.reconnect(), t.emitAll("reconnect_error", e.data)) : (h("reconnect success"), t.onreconnect())
                    }))
                }, e);
                this.subs.push({
                    destroy: function () {
                        clearTimeout(n)
                    }
                })
            }
        }, r.prototype.onreconnect = function () {
            var t = this.backoff.attempts;
            this.reconnecting = !1, this.backoff.reset(), this.updateSocketIds(), this.emitAll("reconnect", t)
        }
    }, function (t, e, n) {
        t.exports = n(14), t.exports.parser = n(21)
    }, function (t, e, n) {
        function r(t, e) {
            return this instanceof r ? (e = e || {}, t && "object" == typeof t && (e = t, t = null), t ? (t = u(t), e.hostname = t.host, e.secure = "https" === t.protocol || "wss" === t.protocol, e.port = t.port, t.query && (e.query = t.query)) : e.host && (e.hostname = u(e.host).host), this.secure = null != e.secure ? e.secure : "undefined" != typeof location && "https:" === location.protocol, e.hostname && !e.port && (e.port = this.secure ? "443" : "80"), this.agent = e.agent || !1, this.hostname = e.hostname || ("undefined" != typeof location ? location.hostname : "localhost"), this.port = e.port || ("undefined" != typeof location && location.port ? location.port : this.secure ? 443 : 80), this.query = e.query || {}, "string" == typeof this.query && (this.query = h.decode(this.query)), this.upgrade = !1 !== e.upgrade, this.path = (e.path || "/engine.io").replace(/\/$/, "") + "/", this.forceJSONP = !!e.forceJSONP, this.jsonp = !1 !== e.jsonp, this.forceBase64 = !!e.forceBase64, this.enablesXDR = !!e.enablesXDR, this.timestampParam = e.timestampParam || "t", this.timestampRequests = e.timestampRequests, this.transports = e.transports || ["polling", "websocket"], this.transportOptions = e.transportOptions || {}, this.readyState = "", this.writeBuffer = [], this.prevBufferLen = 0, this.policyPort = e.policyPort || 843, this.rememberUpgrade = e.rememberUpgrade || !1, this.binaryType = null, this.onlyBinaryUpgrades = e.onlyBinaryUpgrades, this.perMessageDeflate = !1 !== e.perMessageDeflate && (e.perMessageDeflate || {}), !0 === this.perMessageDeflate && (this.perMessageDeflate = {}), this.perMessageDeflate && null == this.perMessageDeflate.threshold && (this.perMessageDeflate.threshold = 1024), this.pfx = e.pfx || null, this.key = e.key || null, this.passphrase = e.passphrase || null, this.cert = e.cert || null, this.ca = e.ca || null, this.ciphers = e.ciphers || null, this.rejectUnauthorized = void 0 === e.rejectUnauthorized || e.rejectUnauthorized, this.forceNode = !!e.forceNode, this.isReactNative = "undefined" != typeof navigator && "string" == typeof navigator.product && "reactnative" === navigator.product.toLowerCase(), ("undefined" == typeof self || this.isReactNative) && (e.extraHeaders && Object.keys(e.extraHeaders).length > 0 && (this.extraHeaders = e.extraHeaders), e.localAddress && (this.localAddress = e.localAddress)), this.id = null, this.upgrades = null, this.pingInterval = null, this.pingTimeout = null, this.pingIntervalTimer = null, this.pingTimeoutTimer = null, void this.open()) : new r(t, e)
        }

        function o(t) {
            var e = {};
            for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
            return e
        }

        var i = n(15), s = n(8), a = n(3)("engine.io-client:socket"), c = n(35), p = n(21), u = n(2), h = n(29);
        t.exports = r, r.priorWebsocketSuccess = !1, s(r.prototype), r.protocol = p.protocol, r.Socket = r, r.Transport = n(20), r.transports = n(15), r.parser = n(21), r.prototype.createTransport = function (t) {
            a('creating transport "%s"', t);
            var e = o(this.query);
            e.EIO = p.protocol, e.transport = t;
            var n = this.transportOptions[t] || {};
            this.id && (e.sid = this.id);
            var r = new i[t]({
                query: e,
                socket: this,
                agent: n.agent || this.agent,
                hostname: n.hostname || this.hostname,
                port: n.port || this.port,
                secure: n.secure || this.secure,
                path: n.path || this.path,
                forceJSONP: n.forceJSONP || this.forceJSONP,
                jsonp: n.jsonp || this.jsonp,
                forceBase64: n.forceBase64 || this.forceBase64,
                enablesXDR: n.enablesXDR || this.enablesXDR,
                timestampRequests: n.timestampRequests || this.timestampRequests,
                timestampParam: n.timestampParam || this.timestampParam,
                policyPort: n.policyPort || this.policyPort,
                pfx: n.pfx || this.pfx,
                key: n.key || this.key,
                passphrase: n.passphrase || this.passphrase,
                cert: n.cert || this.cert,
                ca: n.ca || this.ca,
                ciphers: n.ciphers || this.ciphers,
                rejectUnauthorized: n.rejectUnauthorized || this.rejectUnauthorized,
                perMessageDeflate: n.perMessageDeflate || this.perMessageDeflate,
                extraHeaders: n.extraHeaders || this.extraHeaders,
                forceNode: n.forceNode || this.forceNode,
                localAddress: n.localAddress || this.localAddress,
                requestTimeout: n.requestTimeout || this.requestTimeout,
                protocols: n.protocols || void 0,
                isReactNative: this.isReactNative
            });
            return r
        }, r.prototype.open = function () {
            var t;
            if (this.rememberUpgrade && r.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1) t = "websocket"; else {
                if (0 === this.transports.length) {
                    var e = this;
                    return void setTimeout(function () {
                        e.emit("error", "No transports available")
                    }, 0)
                }
                t = this.transports[0]
            }
            this.readyState = "opening";
            try {
                t = this.createTransport(t)
            } catch (n) {
                return this.transports.shift(), void this.open()
            }
            t.open(), this.setTransport(t)
        }, r.prototype.setTransport = function (t) {
            a("setting transport %s", t.name);
            var e = this;
            this.transport && (a("clearing existing transport %s", this.transport.name), this.transport.removeAllListeners()), this.transport = t, t.on("drain", function () {
                e.onDrain()
            }).on("packet", function (t) {
                e.onPacket(t)
            }).on("error", function (t) {
                e.onError(t)
            }).on("close", function () {
                e.onClose("transport close")
            })
        }, r.prototype.probe = function (t) {
            function e() {
                if (f.onlyBinaryUpgrades) {
                    var e = !this.supportsBinary && f.transport.supportsBinary;
                    h = h || e
                }
                h || (a('probe transport "%s" opened', t), u.send([{
                    type: "ping",
                    data: "probe"
                }]), u.once("packet", function (e) {
                    if (!h) if ("pong" === e.type && "probe" === e.data) {
                        if (a('probe transport "%s" pong', t), f.upgrading = !0, f.emit("upgrading", u), !u) return;
                        r.priorWebsocketSuccess = "websocket" === u.name, a('pausing current transport "%s"', f.transport.name), f.transport.pause(function () {
                            h || "closed" !== f.readyState && (a("changing transport and sending upgrade packet"), p(), f.setTransport(u), u.send([{type: "upgrade"}]), f.emit("upgrade", u), u = null, f.upgrading = !1, f.flush())
                        })
                    } else {
                        a('probe transport "%s" failed', t);
                        var n = new Error("probe error");
                        n.transport = u.name, f.emit("upgradeError", n)
                    }
                }))
            }

            function n() {
                h || (h = !0, p(), u.close(), u = null)
            }

            function o(e) {
                var r = new Error("probe error: " + e);
                r.transport = u.name, n(), a('probe transport "%s" failed because of error: %s', t, e), f.emit("upgradeError", r)
            }

            function i() {
                o("transport closed")
            }

            function s() {
                o("socket closed")
            }

            function c(t) {
                u && t.name !== u.name && (a('"%s" works - aborting "%s"', t.name, u.name), n())
            }

            function p() {
                u.removeListener("open", e), u.removeListener("error", o), u.removeListener("close", i), f.removeListener("close", s), f.removeListener("upgrading", c)
            }

            a('probing transport "%s"', t);
            var u = this.createTransport(t, {probe: 1}), h = !1, f = this;
            r.priorWebsocketSuccess = !1, u.once("open", e), u.once("error", o), u.once("close", i), this.once("close", s), this.once("upgrading", c), u.open()
        }, r.prototype.onOpen = function () {
            if (a("socket open"), this.readyState = "open", r.priorWebsocketSuccess = "websocket" === this.transport.name, this.emit("open"), this.flush(), "open" === this.readyState && this.upgrade && this.transport.pause) {
                a("starting upgrade probes");
                for (var t = 0, e = this.upgrades.length; t < e; t++) this.probe(this.upgrades[t])
            }
        }, r.prototype.onPacket = function (t) {
            if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) switch (a('socket receive: type "%s", data "%s"', t.type, t.data), this.emit("packet", t), this.emit("heartbeat"), t.type) {
                case"open":
                    this.onHandshake(JSON.parse(t.data));
                    break;
                case"pong":
                    this.setPing(), this.emit("pong");
                    break;
                case"error":
                    var e = new Error("server error");
                    e.code = t.data, this.onError(e);
                    break;
                case"message":
                    this.emit("data", t.data), this.emit("message", t.data)
            } else a('packet received with socket readyState "%s"', this.readyState)
        }, r.prototype.onHandshake = function (t) {
            this.emit("handshake", t), this.id = t.sid, this.transport.query.sid = t.sid, this.upgrades = this.filterUpgrades(t.upgrades), this.pingInterval = t.pingInterval, this.pingTimeout = t.pingTimeout, this.onOpen(), "closed" !== this.readyState && (this.setPing(), this.removeListener("heartbeat", this.onHeartbeat), this.on("heartbeat", this.onHeartbeat))
        }, r.prototype.onHeartbeat = function (t) {
            clearTimeout(this.pingTimeoutTimer);
            var e = this;
            e.pingTimeoutTimer = setTimeout(function () {
                "closed" !== e.readyState && e.onClose("ping timeout")
            }, t || e.pingInterval + e.pingTimeout)
        }, r.prototype.setPing = function () {
            var t = this;
            clearTimeout(t.pingIntervalTimer), t.pingIntervalTimer = setTimeout(function () {
                a("writing ping packet - expecting pong within %sms", t.pingTimeout), t.ping(), t.onHeartbeat(t.pingTimeout)
            }, t.pingInterval)
        }, r.prototype.ping = function () {
            var t = this;
            this.sendPacket("ping", function () {
                t.emit("ping")
            })
        }, r.prototype.onDrain = function () {
            this.writeBuffer.splice(0, this.prevBufferLen), this.prevBufferLen = 0, 0 === this.writeBuffer.length ? this.emit("drain") : this.flush()
        }, r.prototype.flush = function () {
            "closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length && (a("flushing %d packets in socket", this.writeBuffer.length), this.transport.send(this.writeBuffer), this.prevBufferLen = this.writeBuffer.length, this.emit("flush"))
        }, r.prototype.write = r.prototype.send = function (t, e, n) {
            return this.sendPacket("message", t, e, n), this
        }, r.prototype.sendPacket = function (t, e, n, r) {
            if ("function" == typeof e && (r = e, e = void 0), "function" == typeof n && (r = n, n = null), "closing" !== this.readyState && "closed" !== this.readyState) {
                n = n || {}, n.compress = !1 !== n.compress;
                var o = {type: t, data: e, options: n};
                this.emit("packetCreate", o), this.writeBuffer.push(o), r && this.once("flush", r), this.flush()
            }
        }, r.prototype.close = function () {
            function t() {
                r.onClose("forced close"), a("socket closing - telling transport to close"), r.transport.close()
            }

            function e() {
                r.removeListener("upgrade", e), r.removeListener("upgradeError", e), t()
            }

            function n() {
                r.once("upgrade", e), r.once("upgradeError", e)
            }

            if ("opening" === this.readyState || "open" === this.readyState) {
                this.readyState = "closing";
                var r = this;
                this.writeBuffer.length ? this.once("drain", function () {
                    this.upgrading ? n() : t()
                }) : this.upgrading ? n() : t()
            }
            return this
        }, r.prototype.onError = function (t) {
            a("socket error %j", t), r.priorWebsocketSuccess = !1, this.emit("error", t), this.onClose("transport error", t)
        }, r.prototype.onClose = function (t, e) {
            if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
                a('socket close with reason: "%s"', t);
                var n = this;
                clearTimeout(this.pingIntervalTimer), clearTimeout(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), this.readyState = "closed", this.id = null, this.emit("close", t, e), n.writeBuffer = [], n.prevBufferLen = 0
            }
        }, r.prototype.filterUpgrades = function (t) {
            for (var e = [], n = 0, r = t.length; n < r; n++) ~c(this.transports, t[n]) && e.push(t[n]);
            return e
        }
    }, function (t, e, n) {
        function r(t) {
            var e, n = !1, r = !1, a = !1 !== t.jsonp;
            if ("undefined" != typeof location) {
                var c = "https:" === location.protocol, p = location.port;
                p || (p = c ? 443 : 80), n = t.hostname !== location.hostname || p !== t.port, r = t.secure !== c
            }
            if (t.xdomain = n, t.xscheme = r, e = new o(t), "open" in e && !t.forceJSONP) return new i(t);
            if (!a) throw new Error("JSONP disabled");
            return new s(t)
        }

        var o = n(16), i = n(18), s = n(32), a = n(33);
        e.polling = r, e.websocket = a
    }, function (t, e, n) {
        var r = n(17);
        t.exports = function (t) {
            var e = t.xdomain, n = t.xscheme, o = t.enablesXDR;
            try {
                if ("undefined" != typeof XMLHttpRequest && (!e || r)) return new XMLHttpRequest
            } catch (i) {
            }
            try {
                if ("undefined" != typeof XDomainRequest && !n && o) return new XDomainRequest
            } catch (i) {
            }
            if (!e) try {
                return new (self[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")
            } catch (i) {
            }
        }
    }, function (t, e) {
        try {
            t.exports = "undefined" != typeof XMLHttpRequest && "withCredentials" in new XMLHttpRequest
        } catch (n) {
            t.exports = !1
        }
    }, function (t, e, n) {
        function r() {
        }

        function o(t) {
            if (c.call(this, t), this.requestTimeout = t.requestTimeout, this.extraHeaders = t.extraHeaders, "undefined" != typeof location) {
                var e = "https:" === location.protocol, n = location.port;
                n || (n = e ? 443 : 80), this.xd = "undefined" != typeof location && t.hostname !== location.hostname || n !== t.port, this.xs = t.secure !== e
            }
        }

        function i(t) {
            this.method = t.method || "GET", this.uri = t.uri, this.xd = !!t.xd, this.xs = !!t.xs, this.async = !1 !== t.async, this.data = void 0 !== t.data ? t.data : null, this.agent = t.agent, this.isBinary = t.isBinary, this.supportsBinary = t.supportsBinary, this.enablesXDR = t.enablesXDR, this.requestTimeout = t.requestTimeout, this.pfx = t.pfx, this.key = t.key, this.passphrase = t.passphrase, this.cert = t.cert, this.ca = t.ca, this.ciphers = t.ciphers, this.rejectUnauthorized = t.rejectUnauthorized, this.extraHeaders = t.extraHeaders, this.create()
        }

        function s() {
            for (var t in i.requests) i.requests.hasOwnProperty(t) && i.requests[t].abort()
        }

        var a = n(16), c = n(19), p = n(8), u = n(30), h = n(3)("engine.io-client:polling-xhr");
        if (t.exports = o, t.exports.Request = i, u(o, c), o.prototype.supportsBinary = !0, o.prototype.request = function (t) {
            return t = t || {}, t.uri = this.uri(), t.xd = this.xd, t.xs = this.xs, t.agent = this.agent || !1, t.supportsBinary = this.supportsBinary, t.enablesXDR = this.enablesXDR, t.pfx = this.pfx, t.key = this.key, t.passphrase = this.passphrase, t.cert = this.cert, t.ca = this.ca, t.ciphers = this.ciphers, t.rejectUnauthorized = this.rejectUnauthorized, t.requestTimeout = this.requestTimeout, t.extraHeaders = this.extraHeaders, new i(t)
        }, o.prototype.doWrite = function (t, e) {
            var n = "string" != typeof t && void 0 !== t, r = this.request({method: "POST", data: t, isBinary: n}),
                o = this;
            r.on("success", e), r.on("error", function (t) {
                o.onError("xhr post error", t)
            }), this.sendXhr = r
        }, o.prototype.doPoll = function () {
            h("xhr poll");
            var t = this.request(), e = this;
            t.on("data", function (t) {
                e.onData(t)
            }), t.on("error", function (t) {
                e.onError("xhr poll error", t)
            }), this.pollXhr = t
        }, p(i.prototype), i.prototype.create = function () {
            var t = {agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR};
            t.pfx = this.pfx, t.key = this.key, t.passphrase = this.passphrase, t.cert = this.cert, t.ca = this.ca, t.ciphers = this.ciphers, t.rejectUnauthorized = this.rejectUnauthorized;
            var e = this.xhr = new a(t), n = this;
            try {
                h("xhr open %s: %s", this.method, this.uri), e.open(this.method, this.uri, this.async);
                try {
                    if (this.extraHeaders) {
                        e.setDisableHeaderCheck && e.setDisableHeaderCheck(!0);
                        for (var r in this.extraHeaders) this.extraHeaders.hasOwnProperty(r) && e.setRequestHeader(r, this.extraHeaders[r])
                    }
                } catch (o) {
                }
                if ("POST" === this.method) try {
                    this.isBinary ? e.setRequestHeader("Content-type", "application/octet-stream") : e.setRequestHeader("Content-type", "text/plain;charset=UTF-8")
                } catch (o) {
                }
                try {
                    e.setRequestHeader("Accept", "*/*")
                } catch (o) {
                }
                "withCredentials" in e && (e.withCredentials = !0), this.requestTimeout && (e.timeout = this.requestTimeout), this.hasXDR() ? (e.onload = function () {
                    n.onLoad()
                }, e.onerror = function () {
                    n.onError(e.responseText)
                }) : e.onreadystatechange = function () {
                    if (2 === e.readyState) try {
                        var t = e.getResponseHeader("Content-Type");
                        n.supportsBinary && "application/octet-stream" === t && (e.responseType = "arraybuffer")
                    } catch (r) {
                    }
                    4 === e.readyState && (200 === e.status || 1223 === e.status ? n.onLoad() : setTimeout(function () {
                        n.onError(e.status)
                    }, 0))
                }, h("xhr data %s", this.data), e.send(this.data)
            } catch (o) {
                return void setTimeout(function () {
                    n.onError(o)
                }, 0)
            }
            "undefined" != typeof document && (this.index = i.requestsCount++, i.requests[this.index] = this)
        }, i.prototype.onSuccess = function () {
            this.emit("success"), this.cleanup()
        }, i.prototype.onData = function (t) {
            this.emit("data", t), this.onSuccess()
        }, i.prototype.onError = function (t) {
            this.emit("error", t), this.cleanup(!0)
        }, i.prototype.cleanup = function (t) {
            if ("undefined" != typeof this.xhr && null !== this.xhr) {
                if (this.hasXDR() ? this.xhr.onload = this.xhr.onerror = r : this.xhr.onreadystatechange = r, t) try {
                    this.xhr.abort()
                } catch (e) {
                }
                "undefined" != typeof document && delete i.requests[this.index], this.xhr = null
            }
        }, i.prototype.onLoad = function () {
            var t;
            try {
                var e;
                try {
                    e = this.xhr.getResponseHeader("Content-Type")
                } catch (n) {
                }
                t = "application/octet-stream" === e ? this.xhr.response || this.xhr.responseText : this.xhr.responseText
            } catch (n) {
                this.onError(n)
            }
            null != t && this.onData(t)
        }, i.prototype.hasXDR = function () {
            return "undefined" != typeof XDomainRequest && !this.xs && this.enablesXDR
        }, i.prototype.abort = function () {
            this.cleanup()
        }, i.requestsCount = 0, i.requests = {}, "undefined" != typeof document) if ("function" == typeof attachEvent) attachEvent("onunload", s); else if ("function" == typeof addEventListener) {
            var f = "onpagehide" in self ? "pagehide" : "unload";
            addEventListener(f, s, !1)
        }
    }, function (t, e, n) {
        function r(t) {
            var e = t && t.forceBase64;
            u && !e || (this.supportsBinary = !1), o.call(this, t)
        }

        var o = n(20), i = n(29), s = n(21), a = n(30), c = n(31), p = n(3)("engine.io-client:polling");
        t.exports = r;
        var u = function () {
            var t = n(16), e = new t({xdomain: !1});
            return null != e.responseType
        }();
        a(r, o), r.prototype.name = "polling", r.prototype.doOpen = function () {
            this.poll()
        }, r.prototype.pause = function (t) {
            function e() {
                p("paused"), n.readyState = "paused", t()
            }

            var n = this;
            if (this.readyState = "pausing", this.polling || !this.writable) {
                var r = 0;
                this.polling && (p("we are currently polling - waiting to pause"), r++, this.once("pollComplete", function () {
                    p("pre-pause polling complete"), --r || e()
                })), this.writable || (p("we are currently writing - waiting to pause"), r++, this.once("drain", function () {
                    p("pre-pause writing complete"), --r || e()
                }))
            } else e()
        }, r.prototype.poll = function () {
            p("polling"), this.polling = !0, this.doPoll(), this.emit("poll")
        }, r.prototype.onData = function (t) {
            var e = this;
            p("polling got data %s", t);
            var n = function (t, n, r) {
                return "opening" === e.readyState && e.onOpen(), "close" === t.type ? (e.onClose(), !1) : void e.onPacket(t)
            };
            s.decodePayload(t, this.socket.binaryType, n), "closed" !== this.readyState && (this.polling = !1, this.emit("pollComplete"), "open" === this.readyState ? this.poll() : p('ignoring poll - transport state "%s"', this.readyState))
        }, r.prototype.doClose = function () {
            function t() {
                p("writing close packet"), e.write([{type: "close"}])
            }

            var e = this;
            "open" === this.readyState ? (p("transport open - closing"), t()) : (p("transport not open - deferring close"), this.once("open", t))
        }, r.prototype.write = function (t) {
            var e = this;
            this.writable = !1;
            var n = function () {
                e.writable = !0, e.emit("drain")
            };
            s.encodePayload(t, this.supportsBinary, function (t) {
                e.doWrite(t, n)
            })
        }, r.prototype.uri = function () {
            var t = this.query || {}, e = this.secure ? "https" : "http", n = "";
            !1 !== this.timestampRequests && (t[this.timestampParam] = c()), this.supportsBinary || t.sid || (t.b64 = 1), t = i.encode(t), this.port && ("https" === e && 443 !== Number(this.port) || "http" === e && 80 !== Number(this.port)) && (n = ":" + this.port), t.length && (t = "?" + t);
            var r = this.hostname.indexOf(":") !== -1;
            return e + "://" + (r ? "[" + this.hostname + "]" : this.hostname) + n + this.path + t
        }
    }, function (t, e, n) {
        function r(t) {
            this.path = t.path, this.hostname = t.hostname, this.port = t.port, this.secure = t.secure, this.query = t.query, this.timestampParam = t.timestampParam, this.timestampRequests = t.timestampRequests, this.readyState = "", this.agent = t.agent || !1, this.socket = t.socket, this.enablesXDR = t.enablesXDR, this.pfx = t.pfx, this.key = t.key, this.passphrase = t.passphrase, this.cert = t.cert, this.ca = t.ca, this.ciphers = t.ciphers, this.rejectUnauthorized = t.rejectUnauthorized, this.forceNode = t.forceNode, this.isReactNative = t.isReactNative, this.extraHeaders = t.extraHeaders, this.localAddress = t.localAddress
        }

        var o = n(21), i = n(8);
        t.exports = r, i(r.prototype), r.prototype.onError = function (t, e) {
            var n = new Error(t);
            return n.type = "TransportError", n.description = e, this.emit("error", n), this
        }, r.prototype.open = function () {
            return "closed" !== this.readyState && "" !== this.readyState || (this.readyState = "opening", this.doOpen()), this
        }, r.prototype.close = function () {
            return "opening" !== this.readyState && "open" !== this.readyState || (this.doClose(), this.onClose()), this
        }, r.prototype.send = function (t) {
            if ("open" !== this.readyState) throw new Error("Transport not open");
            this.write(t)
        }, r.prototype.onOpen = function () {
            this.readyState = "open", this.writable = !0, this.emit("open")
        }, r.prototype.onData = function (t) {
            var e = o.decodePacket(t, this.socket.binaryType);
            this.onPacket(e)
        }, r.prototype.onPacket = function (t) {
            this.emit("packet", t)
        }, r.prototype.onClose = function () {
            this.readyState = "closed", this.emit("close")
        }
    }, function (t, e, n) {
        function r(t, n) {
            var r = "b" + e.packets[t.type] + t.data.data;
            return n(r)
        }

        function o(t, n, r) {
            if (!n) return e.encodeBase64Packet(t, r);
            var o = t.data, i = new Uint8Array(o), s = new Uint8Array(1 + o.byteLength);
            s[0] = v[t.type];
            for (var a = 0; a < i.length; a++) s[a + 1] = i[a];
            return r(s.buffer)
        }

        function i(t, n, r) {
            if (!n) return e.encodeBase64Packet(t, r);
            var o = new FileReader;
            return o.onload = function () {
                e.encodePacket({type: t.type, data: o.result}, n, !0, r)
            }, o.readAsArrayBuffer(t.data)
        }

        function s(t, n, r) {
            if (!n) return e.encodeBase64Packet(t, r);
            if (g) return i(t, n, r);
            var o = new Uint8Array(1);
            o[0] = v[t.type];
            var s = new k([o.buffer, t.data]);
            return r(s)
        }

        function a(t) {
            try {
                t = d.decode(t, {strict: !1})
            } catch (e) {
                return !1
            }
            return t
        }

        function c(t, e, n) {
            for (var r = new Array(t.length), o = l(t.length, n), i = function (t, n, o) {
                e(n, function (e, n) {
                    r[t] = n, o(e, r)
                })
            }, s = 0; s < t.length; s++) i(s, t[s], o)
        }

        var p, u = n(22), h = n(23), f = n(24), l = n(25), d = n(26);
        "undefined" != typeof ArrayBuffer && (p = n(27));
        var y = "undefined" != typeof navigator && /Android/i.test(navigator.userAgent),
            m = "undefined" != typeof navigator && /PhantomJS/i.test(navigator.userAgent), g = y || m;
        e.protocol = 3;
        var v = e.packets = {open: 0, close: 1, ping: 2, pong: 3, message: 4, upgrade: 5, noop: 6}, b = u(v),
            w = {type: "error", data: "parser error"}, k = n(28);
        e.encodePacket = function (t, e, n, i) {
            "function" == typeof e && (i = e, e = !1), "function" == typeof n && (i = n, n = null);
            var a = void 0 === t.data ? void 0 : t.data.buffer || t.data;
            if ("undefined" != typeof ArrayBuffer && a instanceof ArrayBuffer) return o(t, e, i);
            if ("undefined" != typeof k && a instanceof k) return s(t, e, i);
            if (a && a.base64) return r(t, i);
            var c = v[t.type];
            return void 0 !== t.data && (c += n ? d.encode(String(t.data), {strict: !1}) : String(t.data)), i("" + c)
        }, e.encodeBase64Packet = function (t, n) {
            var r = "b" + e.packets[t.type];
            if ("undefined" != typeof k && t.data instanceof k) {
                var o = new FileReader;
                return o.onload = function () {
                    var t = o.result.split(",")[1];
                    n(r + t)
                }, o.readAsDataURL(t.data)
            }
            var i;
            try {
                i = String.fromCharCode.apply(null, new Uint8Array(t.data))
            } catch (s) {
                for (var a = new Uint8Array(t.data), c = new Array(a.length), p = 0; p < a.length; p++) c[p] = a[p];
                i = String.fromCharCode.apply(null, c)
            }
            return r += btoa(i), n(r)
        }, e.decodePacket = function (t, n, r) {
            if (void 0 === t) return w;
            if ("string" == typeof t) {
                if ("b" === t.charAt(0)) return e.decodeBase64Packet(t.substr(1), n);
                if (r && (t = a(t), t === !1)) return w;
                var o = t.charAt(0);
                return Number(o) == o && b[o] ? t.length > 1 ? {type: b[o], data: t.substring(1)} : {type: b[o]} : w
            }
            var i = new Uint8Array(t), o = i[0], s = f(t, 1);
            return k && "blob" === n && (s = new k([s])), {type: b[o], data: s}
        }, e.decodeBase64Packet = function (t, e) {
            var n = b[t.charAt(0)];
            if (!p) return {type: n, data: {base64: !0, data: t.substr(1)}};
            var r = p.decode(t.substr(1));
            return "blob" === e && k && (r = new k([r])), {type: n, data: r}
        }, e.encodePayload = function (t, n, r) {
            function o(t) {
                return t.length + ":" + t
            }

            function i(t, r) {
                e.encodePacket(t, !!s && n, !1, function (t) {
                    r(null, o(t))
                })
            }

            "function" == typeof n && (r = n, n = null);
            var s = h(t);
            return n && s ? k && !g ? e.encodePayloadAsBlob(t, r) : e.encodePayloadAsArrayBuffer(t, r) : t.length ? void c(t, i, function (t, e) {
                return r(e.join(""))
            }) : r("0:")
        }, e.decodePayload = function (t, n, r) {
            if ("string" != typeof t) return e.decodePayloadAsBinary(t, n, r);
            "function" == typeof n && (r = n, n = null);
            var o;
            if ("" === t) return r(w, 0, 1);
            for (var i, s, a = "", c = 0, p = t.length; c < p; c++) {
                var u = t.charAt(c);
                if (":" === u) {
                    if ("" === a || a != (i = Number(a))) return r(w, 0, 1);
                    if (s = t.substr(c + 1, i), a != s.length) return r(w, 0, 1);
                    if (s.length) {
                        if (o = e.decodePacket(s, n, !1), w.type === o.type && w.data === o.data) return r(w, 0, 1);
                        var h = r(o, c + i, p);
                        if (!1 === h) return
                    }
                    c += i, a = ""
                } else a += u
            }
            return "" !== a ? r(w, 0, 1) : void 0
        }, e.encodePayloadAsArrayBuffer = function (t, n) {
            function r(t, n) {
                e.encodePacket(t, !0, !0, function (t) {
                    return n(null, t)
                })
            }

            return t.length ? void c(t, r, function (t, e) {
                var r = e.reduce(function (t, e) {
                    var n;
                    return n = "string" == typeof e ? e.length : e.byteLength, t + n.toString().length + n + 2
                }, 0), o = new Uint8Array(r), i = 0;
                return e.forEach(function (t) {
                    var e = "string" == typeof t, n = t;
                    if (e) {
                        for (var r = new Uint8Array(t.length), s = 0; s < t.length; s++) r[s] = t.charCodeAt(s);
                        n = r.buffer
                    }
                    e ? o[i++] = 0 : o[i++] = 1;
                    for (var a = n.byteLength.toString(), s = 0; s < a.length; s++) o[i++] = parseInt(a[s]);
                    o[i++] = 255;
                    for (var r = new Uint8Array(n), s = 0; s < r.length; s++) o[i++] = r[s]
                }), n(o.buffer)
            }) : n(new ArrayBuffer(0))
        }, e.encodePayloadAsBlob = function (t, n) {
            function r(t, n) {
                e.encodePacket(t, !0, !0, function (t) {
                    var e = new Uint8Array(1);
                    if (e[0] = 1, "string" == typeof t) {
                        for (var r = new Uint8Array(t.length), o = 0; o < t.length; o++) r[o] = t.charCodeAt(o);
                        t = r.buffer, e[0] = 0
                    }
                    for (var i = t instanceof ArrayBuffer ? t.byteLength : t.size, s = i.toString(), a = new Uint8Array(s.length + 1), o = 0; o < s.length; o++) a[o] = parseInt(s[o]);
                    if (a[s.length] = 255, k) {
                        var c = new k([e.buffer, a.buffer, t]);
                        n(null, c)
                    }
                })
            }

            c(t, r, function (t, e) {
                return n(new k(e))
            })
        }, e.decodePayloadAsBinary = function (t, n, r) {
            "function" == typeof n && (r = n, n = null);
            for (var o = t, i = []; o.byteLength > 0;) {
                for (var s = new Uint8Array(o), a = 0 === s[0], c = "", p = 1; 255 !== s[p]; p++) {
                    if (c.length > 310) return r(w, 0, 1);
                    c += s[p]
                }
                o = f(o, 2 + c.length), c = parseInt(c);
                var u = f(o, 0, c);
                if (a) try {
                    u = String.fromCharCode.apply(null, new Uint8Array(u))
                } catch (h) {
                    var l = new Uint8Array(u);
                    u = "";
                    for (var p = 0; p < l.length; p++) u += String.fromCharCode(l[p])
                }
                i.push(u), o = f(o, c)
            }
            var d = i.length;
            i.forEach(function (t, o) {
                r(e.decodePacket(t, n, !0), o, d)
            })
        }
    }, function (t, e) {
        t.exports = Object.keys || function (t) {
            var e = [], n = Object.prototype.hasOwnProperty;
            for (var r in t) n.call(t, r) && e.push(r);
            return e
        }
    }, function (t, e, n) {
        function r(t) {
            if (!t || "object" != typeof t) return !1;
            if (o(t)) {
                for (var e = 0, n = t.length; e < n; e++) if (r(t[e])) return !0;
                return !1
            }
            if ("function" == typeof Buffer && Buffer.isBuffer && Buffer.isBuffer(t) || "function" == typeof ArrayBuffer && t instanceof ArrayBuffer || s && t instanceof Blob || a && t instanceof File) return !0;
            if (t.toJSON && "function" == typeof t.toJSON && 1 === arguments.length) return r(t.toJSON(), !0);
            for (var i in t) if (Object.prototype.hasOwnProperty.call(t, i) && r(t[i])) return !0;
            return !1
        }

        var o = n(10), i = Object.prototype.toString,
            s = "function" == typeof Blob || "undefined" != typeof Blob && "[object BlobConstructor]" === i.call(Blob),
            a = "function" == typeof File || "undefined" != typeof File && "[object FileConstructor]" === i.call(File);
        t.exports = r
    }, function (t, e) {
        t.exports = function (t, e, n) {
            var r = t.byteLength;
            if (e = e || 0, n = n || r, t.slice) return t.slice(e, n);
            if (e < 0 && (e += r), n < 0 && (n += r), n > r && (n = r), e >= r || e >= n || 0 === r) return new ArrayBuffer(0);
            for (var o = new Uint8Array(t), i = new Uint8Array(n - e), s = e, a = 0; s < n; s++, a++) i[a] = o[s];
            return i.buffer
        }
    }, function (t, e) {
        function n(t, e, n) {
            function o(t, r) {
                if (o.count <= 0) throw new Error("after called too many times");
                --o.count, t ? (i = !0, e(t), e = n) : 0 !== o.count || i || e(null, r)
            }

            var i = !1;
            return n = n || r, o.count = t, 0 === t ? e() : o
        }

        function r() {
        }

        t.exports = n
    }, function (t, e) {
        function n(t) {
            for (var e, n, r = [], o = 0, i = t.length; o < i;) e = t.charCodeAt(o++), e >= 55296 && e <= 56319 && o < i ? (n = t.charCodeAt(o++), 56320 == (64512 & n) ? r.push(((1023 & e) << 10) + (1023 & n) + 65536) : (r.push(e), o--)) : r.push(e);
            return r
        }

        function r(t) {
            for (var e, n = t.length, r = -1, o = ""; ++r < n;) e = t[r], e > 65535 && (e -= 65536, o += d(e >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), o += d(e);
            return o
        }

        function o(t, e) {
            if (t >= 55296 && t <= 57343) {
                if (e) throw Error("Lone surrogate U+" + t.toString(16).toUpperCase() + " is not a scalar value");
                return !1
            }
            return !0
        }

        function i(t, e) {
            return d(t >> e & 63 | 128)
        }

        function s(t, e) {
            if (0 == (4294967168 & t)) return d(t);
            var n = "";
            return 0 == (4294965248 & t) ? n = d(t >> 6 & 31 | 192) : 0 == (4294901760 & t) ? (o(t, e) || (t = 65533), n = d(t >> 12 & 15 | 224), n += i(t, 6)) : 0 == (4292870144 & t) && (n = d(t >> 18 & 7 | 240), n += i(t, 12), n += i(t, 6)), n += d(63 & t | 128)
        }

        function a(t, e) {
            e = e || {};
            for (var r, o = !1 !== e.strict, i = n(t), a = i.length, c = -1, p = ""; ++c < a;) r = i[c], p += s(r, o);
            return p
        }

        function c() {
            if (l >= f) throw Error("Invalid byte index");
            var t = 255 & h[l];
            if (l++, 128 == (192 & t)) return 63 & t;
            throw Error("Invalid continuation byte")
        }

        function p(t) {
            var e, n, r, i, s;
            if (l > f) throw Error("Invalid byte index");
            if (l == f) return !1;
            if (e = 255 & h[l], l++, 0 == (128 & e)) return e;
            if (192 == (224 & e)) {
                if (n = c(), s = (31 & e) << 6 | n, s >= 128) return s;
                throw Error("Invalid continuation byte")
            }
            if (224 == (240 & e)) {
                if (n = c(), r = c(), s = (15 & e) << 12 | n << 6 | r, s >= 2048) return o(s, t) ? s : 65533;
                throw Error("Invalid continuation byte")
            }
            if (240 == (248 & e) && (n = c(), r = c(), i = c(), s = (7 & e) << 18 | n << 12 | r << 6 | i, s >= 65536 && s <= 1114111)) return s;
            throw Error("Invalid UTF-8 detected")
        }

        function u(t, e) {
            e = e || {};
            var o = !1 !== e.strict;
            h = n(t), f = h.length, l = 0;
            for (var i, s = []; (i = p(o)) !== !1;) s.push(i);
            return r(s)
        }/*! https://mths.be/utf8js v2.1.2 by @mathias */
        var h, f, l, d = String.fromCharCode;
        t.exports = {version: "2.1.2", encode: a, decode: u}
    }, function (t, e) {
        !function () {
            "use strict";
            for (var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = new Uint8Array(256), r = 0; r < t.length; r++) n[t.charCodeAt(r)] = r;
            e.encode = function (e) {
                var n, r = new Uint8Array(e), o = r.length, i = "";
                for (n = 0; n < o; n += 3) i += t[r[n] >> 2], i += t[(3 & r[n]) << 4 | r[n + 1] >> 4], i += t[(15 & r[n + 1]) << 2 | r[n + 2] >> 6], i += t[63 & r[n + 2]];
                return o % 3 === 2 ? i = i.substring(0, i.length - 1) + "=" : o % 3 === 1 && (i = i.substring(0, i.length - 2) + "=="), i
            }, e.decode = function (t) {
                var e, r, o, i, s, a = .75 * t.length, c = t.length, p = 0;
                "=" === t[t.length - 1] && (a--, "=" === t[t.length - 2] && a--);
                var u = new ArrayBuffer(a), h = new Uint8Array(u);
                for (e = 0; e < c; e += 4) r = n[t.charCodeAt(e)], o = n[t.charCodeAt(e + 1)], i = n[t.charCodeAt(e + 2)], s = n[t.charCodeAt(e + 3)], h[p++] = r << 2 | o >> 4, h[p++] = (15 & o) << 4 | i >> 2, h[p++] = (3 & i) << 6 | 63 & s;
                return u
            }
        }()
    }, function (t, e) {
        function n(t) {
            return t.map(function (t) {
                if (t.buffer instanceof ArrayBuffer) {
                    var e = t.buffer;
                    if (t.byteLength !== e.byteLength) {
                        var n = new Uint8Array(t.byteLength);
                        n.set(new Uint8Array(e, t.byteOffset, t.byteLength)), e = n.buffer
                    }
                    return e
                }
                return t
            })
        }

        function r(t, e) {
            e = e || {};
            var r = new i;
            return n(t).forEach(function (t) {
                r.append(t)
            }), e.type ? r.getBlob(e.type) : r.getBlob()
        }

        function o(t, e) {
            return new Blob(n(t), e || {})
        }

        var i = "undefined" != typeof i ? i : "undefined" != typeof WebKitBlobBuilder ? WebKitBlobBuilder : "undefined" != typeof MSBlobBuilder ? MSBlobBuilder : "undefined" != typeof MozBlobBuilder && MozBlobBuilder,
            s = function () {
                try {
                    var t = new Blob(["hi"]);
                    return 2 === t.size
                } catch (e) {
                    return !1
                }
            }(), a = s && function () {
                try {
                    var t = new Blob([new Uint8Array([1, 2])]);
                    return 2 === t.size
                } catch (e) {
                    return !1
                }
            }(), c = i && i.prototype.append && i.prototype.getBlob;
        "undefined" != typeof Blob && (r.prototype = Blob.prototype, o.prototype = Blob.prototype), t.exports = function () {
            return s ? a ? Blob : o : c ? r : void 0
        }()
    }, function (t, e) {
        e.encode = function (t) {
            var e = "";
            for (var n in t) t.hasOwnProperty(n) && (e.length && (e += "&"), e += encodeURIComponent(n) + "=" + encodeURIComponent(t[n]));
            return e
        }, e.decode = function (t) {
            for (var e = {}, n = t.split("&"), r = 0, o = n.length; r < o; r++) {
                var i = n[r].split("=");
                e[decodeURIComponent(i[0])] = decodeURIComponent(i[1])
            }
            return e
        }
    }, function (t, e) {
        t.exports = function (t, e) {
            var n = function () {
            };
            n.prototype = e.prototype, t.prototype = new n, t.prototype.constructor = t
        }
    }, function (t, e) {
        "use strict";

        function n(t) {
            var e = "";
            do e = s[t % a] + e, t = Math.floor(t / a); while (t > 0);
            return e
        }

        function r(t) {
            var e = 0;
            for (u = 0; u < t.length; u++) e = e * a + c[t.charAt(u)];
            return e
        }

        function o() {
            var t = n(+new Date);
            return t !== i ? (p = 0, i = t) : t + "." + n(p++)
        }

        for (var i, s = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), a = 64, c = {}, p = 0, u = 0; u < a; u++) c[s[u]] = u;
        o.encode = n, o.decode = r, t.exports = o
    }, function (t, e, n) {
        (function (e) {
            function r() {
            }

            function o() {
                return "undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof e ? e : {}
            }

            function i(t) {
                if (s.call(this, t), this.query = this.query || {}, !c) {
                    var e = o();
                    c = e.___eio = e.___eio || []
                }
                this.index = c.length;
                var n = this;
                c.push(function (t) {
                    n.onData(t)
                }), this.query.j = this.index, "function" == typeof addEventListener && addEventListener("beforeunload", function () {
                    n.script && (n.script.onerror = r)
                }, !1)
            }

            var s = n(19), a = n(30);
            t.exports = i;
            var c, p = /\n/g, u = /\\n/g;
            a(i, s), i.prototype.supportsBinary = !1, i.prototype.doClose = function () {
                this.script && (this.script.parentNode.removeChild(this.script), this.script = null), this.form && (this.form.parentNode.removeChild(this.form), this.form = null, this.iframe = null), s.prototype.doClose.call(this)
            }, i.prototype.doPoll = function () {
                var t = this, e = document.createElement("script");
                this.script && (this.script.parentNode.removeChild(this.script), this.script = null), e.async = !0, e.src = this.uri(), e.onerror = function (e) {
                    t.onError("jsonp poll error", e)
                };
                var n = document.getElementsByTagName("script")[0];
                n ? n.parentNode.insertBefore(e, n) : (document.head || document.body).appendChild(e), this.script = e;
                var r = "undefined" != typeof navigator && /gecko/i.test(navigator.userAgent);
                r && setTimeout(function () {
                    var t = document.createElement("iframe");
                    document.body.appendChild(t), document.body.removeChild(t)
                }, 100)
            }, i.prototype.doWrite = function (t, e) {
                function n() {
                    r(), e()
                }

                function r() {
                    if (o.iframe) try {
                        o.form.removeChild(o.iframe)
                    } catch (t) {
                        o.onError("jsonp polling iframe removal error", t)
                    }
                    try {
                        var e = '<iframe src="javascript:0" name="' + o.iframeId + '">';
                        i = document.createElement(e)
                    } catch (t) {
                        i = document.createElement("iframe"), i.name = o.iframeId, i.src = "javascript:0"
                    }
                    i.id = o.iframeId, o.form.appendChild(i), o.iframe = i
                }

                var o = this;
                if (!this.form) {
                    var i, s = document.createElement("form"), a = document.createElement("textarea"),
                        c = this.iframeId = "eio_iframe_" + this.index;
                    s.className = "socketio", s.style.position = "absolute", s.style.top = "-1000px", s.style.left = "-1000px", s.target = c, s.method = "POST", s.setAttribute("accept-charset", "utf-8"), a.name = "d", s.appendChild(a), document.body.appendChild(s), this.form = s, this.area = a
                }
                this.form.action = this.uri(), r(), t = t.replace(u, "\\\n"), this.area.value = t.replace(p, "\\n");
                try {
                    this.form.submit()
                } catch (h) {
                }
                this.iframe.attachEvent ? this.iframe.onreadystatechange = function () {
                    "complete" === o.iframe.readyState && n()
                } : this.iframe.onload = n
            }
        }).call(e, function () {
            return this
        }())
    }, function (t, e, n) {
        function r(t) {
            var e = t && t.forceBase64;
            e && (this.supportsBinary = !1), this.perMessageDeflate = t.perMessageDeflate, this.usingBrowserWebSocket = o && !t.forceNode, this.protocols = t.protocols, this.usingBrowserWebSocket || (l = i), s.call(this, t)
        }

        var o, i, s = n(20), a = n(21), c = n(29), p = n(30), u = n(31), h = n(3)("engine.io-client:websocket");
        if ("undefined" == typeof self) try {
            i = n(34)
        } catch (f) {
        } else o = self.WebSocket || self.MozWebSocket;
        var l = o || i;
        t.exports = r, p(r, s), r.prototype.name = "websocket", r.prototype.supportsBinary = !0, r.prototype.doOpen = function () {
            if (this.check()) {
                var t = this.uri(), e = this.protocols,
                    n = {agent: this.agent, perMessageDeflate: this.perMessageDeflate};
                n.pfx = this.pfx, n.key = this.key, n.passphrase = this.passphrase, n.cert = this.cert, n.ca = this.ca, n.ciphers = this.ciphers, n.rejectUnauthorized = this.rejectUnauthorized, this.extraHeaders && (n.headers = this.extraHeaders), this.localAddress && (n.localAddress = this.localAddress);
                try {
                    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? e ? new l(t, e) : new l(t) : new l(t, e, n)
                } catch (r) {
                    return this.emit("error", r)
                }
                void 0 === this.ws.binaryType && (this.supportsBinary = !1), this.ws.supports && this.ws.supports.binary ? (this.supportsBinary = !0, this.ws.binaryType = "nodebuffer") : this.ws.binaryType = "arraybuffer", this.addEventListeners()
            }
        }, r.prototype.addEventListeners = function () {
            var t = this;
            this.ws.onopen = function () {
                t.onOpen()
            }, this.ws.onclose = function () {
                t.onClose()
            }, this.ws.onmessage = function (e) {
                t.onData(e.data)
            }, this.ws.onerror = function (e) {
                t.onError("websocket error", e)
            }
        }, r.prototype.write = function (t) {
            function e() {
                n.emit("flush"), setTimeout(function () {
                    n.writable = !0, n.emit("drain")
                }, 0)
            }

            var n = this;
            this.writable = !1;
            for (var r = t.length, o = 0, i = r; o < i; o++) !function (t) {
                a.encodePacket(t, n.supportsBinary, function (o) {
                    if (!n.usingBrowserWebSocket) {
                        var i = {};
                        if (t.options && (i.compress = t.options.compress), n.perMessageDeflate) {
                            var s = "string" == typeof o ? Buffer.byteLength(o) : o.length;
                            s < n.perMessageDeflate.threshold && (i.compress = !1)
                        }
                    }
                    try {
                        n.usingBrowserWebSocket ? n.ws.send(o) : n.ws.send(o, i)
                    } catch (a) {
                        h("websocket closed before onclose event")
                    }
                    --r || e()
                })
            }(t[o])
        }, r.prototype.onClose = function () {
            s.prototype.onClose.call(this)
        }, r.prototype.doClose = function () {
            "undefined" != typeof this.ws && this.ws.close()
        }, r.prototype.uri = function () {
            var t = this.query || {}, e = this.secure ? "wss" : "ws", n = "";
            this.port && ("wss" === e && 443 !== Number(this.port) || "ws" === e && 80 !== Number(this.port)) && (n = ":" + this.port), this.timestampRequests && (t[this.timestampParam] = u()), this.supportsBinary || (t.b64 = 1), t = c.encode(t), t.length && (t = "?" + t);
            var r = this.hostname.indexOf(":") !== -1;
            return e + "://" + (r ? "[" + this.hostname + "]" : this.hostname) + n + this.path + t
        }, r.prototype.check = function () {
            return !(!l || "__initialize" in l && this.name === r.prototype.name)
        }
    }, function (t, e) {
    }, function (t, e) {
        var n = [].indexOf;
        t.exports = function (t, e) {
            if (n) return t.indexOf(e);
            for (var r = 0; r < t.length; ++r) if (t[r] === e) return r;
            return -1
        }
    }, function (t, e, n) {
        "use strict";

        function r(t, e, n) {
            this.io = t, this.nsp = e, this.json = this, this.ids = 0, this.acks = {}, this.receiveBuffer = [], this.sendBuffer = [], this.connected = !1, this.disconnected = !0, this.flags = {}, n && n.query && (this.query = n.query), this.io.autoConnect && this.open()
        }

        var o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
                return typeof t
            } : function (t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }, i = n(7), s = n(8), a = n(37), c = n(38), p = n(39), u = n(3)("socket.io-client:socket"), h = n(29),
            f = n(23);
        t.exports = e = r;
        var l = {
            connect: 1,
            connect_error: 1,
            connect_timeout: 1,
            connecting: 1,
            disconnect: 1,
            error: 1,
            reconnect: 1,
            reconnect_attempt: 1,
            reconnect_failed: 1,
            reconnect_error: 1,
            reconnecting: 1,
            ping: 1,
            pong: 1
        }, d = s.prototype.emit;
        s(r.prototype), r.prototype.subEvents = function () {
            if (!this.subs) {
                var t = this.io;
                this.subs = [c(t, "open", p(this, "onopen")), c(t, "packet", p(this, "onpacket")), c(t, "close", p(this, "onclose"))]
            }
        }, r.prototype.open = r.prototype.connect = function () {
            return this.connected ? this : (this.subEvents(), this.io.open(), "open" === this.io.readyState && this.onopen(), this.emit("connecting"), this)
        }, r.prototype.send = function () {
            var t = a(arguments);
            return t.unshift("message"), this.emit.apply(this, t), this
        }, r.prototype.emit = function (t) {
            if (l.hasOwnProperty(t)) return d.apply(this, arguments), this;
            var e = a(arguments), n = {
                type: (void 0 !== this.flags.binary ? this.flags.binary : f(e)) ? i.BINARY_EVENT : i.EVENT,
                data: e
            };
            return n.options = {}, n.options.compress = !this.flags || !1 !== this.flags.compress, "function" == typeof e[e.length - 1] && (u("emitting packet with ack id %d", this.ids), this.acks[this.ids] = e.pop(), n.id = this.ids++), this.connected ? this.packet(n) : this.sendBuffer.push(n), this.flags = {}, this
        }, r.prototype.packet = function (t) {
            t.nsp = this.nsp, this.io.packet(t)
        }, r.prototype.onopen = function () {
            if (u("transport is open - connecting"), "/" !== this.nsp) if (this.query) {
                var t = "object" === o(this.query) ? h.encode(this.query) : this.query;
                u("sending connect packet with query %s", t), this.packet({type: i.CONNECT, query: t})
            } else this.packet({type: i.CONNECT})
        }, r.prototype.onclose = function (t) {
            u("close (%s)", t), this.connected = !1, this.disconnected = !0, delete this.id, this.emit("disconnect", t)
        }, r.prototype.onpacket = function (t) {
            var e = t.nsp === this.nsp, n = t.type === i.ERROR && "/" === t.nsp;
            if (e || n) switch (t.type) {
                case i.CONNECT:
                    this.onconnect();
                    break;
                case i.EVENT:
                    this.onevent(t);
                    break;
                case i.BINARY_EVENT:
                    this.onevent(t);
                    break;
                case i.ACK:
                    this.onack(t);
                    break;
                case i.BINARY_ACK:
                    this.onack(t);
                    break;
                case i.DISCONNECT:
                    this.ondisconnect();
                    break;
                case i.ERROR:
                    this.emit("error", t.data)
            }
        }, r.prototype.onevent = function (t) {
            var e = t.data || [];
            u("emitting event %j", e), null != t.id && (u("attaching ack callback to event"), e.push(this.ack(t.id))), this.connected ? d.apply(this, e) : this.receiveBuffer.push(e)
        }, r.prototype.ack = function (t) {
            var e = this, n = !1;
            return function () {
                if (!n) {
                    n = !0;
                    var r = a(arguments);
                    u("sending ack %j", r), e.packet({type: f(r) ? i.BINARY_ACK : i.ACK, id: t, data: r})
                }
            }
        }, r.prototype.onack = function (t) {
            var e = this.acks[t.id];
            "function" == typeof e ? (u("calling ack %s with %j", t.id, t.data), e.apply(this, t.data), delete this.acks[t.id]) : u("bad ack %s", t.id)
        }, r.prototype.onconnect = function () {
            this.connected = !0, this.disconnected = !1, this.emit("connect"), this.emitBuffered()
        }, r.prototype.emitBuffered = function () {
            var t;
            for (t = 0; t < this.receiveBuffer.length; t++) d.apply(this, this.receiveBuffer[t]);
            for (this.receiveBuffer = [], t = 0; t < this.sendBuffer.length; t++) this.packet(this.sendBuffer[t]);
            this.sendBuffer = []
        }, r.prototype.ondisconnect = function () {
            u("server disconnect (%s)", this.nsp), this.destroy(), this.onclose("io server disconnect")
        }, r.prototype.destroy = function () {
            if (this.subs) {
                for (var t = 0; t < this.subs.length; t++) this.subs[t].destroy();
                this.subs = null
            }
            this.io.destroy(this)
        }, r.prototype.close = r.prototype.disconnect = function () {
            return this.connected && (u("performing disconnect (%s)", this.nsp), this.packet({type: i.DISCONNECT})), this.destroy(), this.connected && this.onclose("io client disconnect"), this
        }, r.prototype.compress = function (t) {
            return this.flags.compress = t, this
        }, r.prototype.binary = function (t) {
            return this.flags.binary = t, this
        }
    }, function (t, e) {
        function n(t, e) {
            var n = [];
            e = e || 0;
            for (var r = e || 0; r < t.length; r++) n[r - e] = t[r];
            return n
        }

        t.exports = n
    }, function (t, e) {
        "use strict";

        function n(t, e, n) {
            return t.on(e, n), {
                destroy: function () {
                    t.removeListener(e, n)
                }
            }
        }

        t.exports = n
    }, function (t, e) {
        var n = [].slice;
        t.exports = function (t, e) {
            if ("string" == typeof e && (e = t[e]), "function" != typeof e) throw new Error("bind() requires a function");
            var r = n.call(arguments, 2);
            return function () {
                return e.apply(t, r.concat(n.call(arguments)))
            }
        }
    }, function (t, e) {
        function n(t) {
            t = t || {}, this.ms = t.min || 100, this.max = t.max || 1e4, this.factor = t.factor || 2, this.jitter = t.jitter > 0 && t.jitter <= 1 ? t.jitter : 0, this.attempts = 0
        }

        t.exports = n, n.prototype.duration = function () {
            var t = this.ms * Math.pow(this.factor, this.attempts++);
            if (this.jitter) {
                var e = Math.random(), n = Math.floor(e * this.jitter * t);
                t = 0 == (1 & Math.floor(10 * e)) ? t - n : t + n
            }
            return 0 | Math.min(t, this.max)
        }, n.prototype.reset = function () {
            this.attempts = 0
        }, n.prototype.setMin = function (t) {
            this.ms = t
        }, n.prototype.setMax = function (t) {
            this.max = t
        }, n.prototype.setJitter = function (t) {
            this.jitter = t
        }
    }])
});
(function (name, context, definition) {
    'use strict'
    if (typeof window !== 'undefined' && typeof define === 'function' && define.amd) {
        define(definition)
    } else if (typeof module !== 'undefined' && module.exports) {
        module.exports = definition()
    } else if (context.exports) {
        context.exports = definition()
    } else {
        context[name] = definition()
    }
})
('Fingerprint2', this, function () {
    'use strict'

    // detect if object is array
    // only implement if no native implementation is available
    if (typeof Array.isArray === 'undefined') {
        Array.isArray = function (obj) {
            return Object.prototype.toString.call(obj) === '[object Array]'
        }
    }
    ;

    /// MurmurHash3 related functions

    //
    // Given two 64bit ints (as an array of two 32bit ints) returns the two
    // added together as a 64bit int (as an array of two 32bit ints).
    //
    var x64Add = function (m, n) {
        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff]
        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff]
        var o = [0, 0, 0, 0]
        o[3] += m[3] + n[3]
        o[2] += o[3] >>> 16
        o[3] &= 0xffff
        o[2] += m[2] + n[2]
        o[1] += o[2] >>> 16
        o[2] &= 0xffff
        o[1] += m[1] + n[1]
        o[0] += o[1] >>> 16
        o[1] &= 0xffff
        o[0] += m[0] + n[0]
        o[0] &= 0xffff
        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]]
    }

    //
    // Given two 64bit ints (as an array of two 32bit ints) returns the two
    // multiplied together as a 64bit int (as an array of two 32bit ints).
    //
    var x64Multiply = function (m, n) {
        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff]
        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff]
        var o = [0, 0, 0, 0]
        o[3] += m[3] * n[3]
        o[2] += o[3] >>> 16
        o[3] &= 0xffff
        o[2] += m[2] * n[3]
        o[1] += o[2] >>> 16
        o[2] &= 0xffff
        o[2] += m[3] * n[2]
        o[1] += o[2] >>> 16
        o[2] &= 0xffff
        o[1] += m[1] * n[3]
        o[0] += o[1] >>> 16
        o[1] &= 0xffff
        o[1] += m[2] * n[2]
        o[0] += o[1] >>> 16
        o[1] &= 0xffff
        o[1] += m[3] * n[1]
        o[0] += o[1] >>> 16
        o[1] &= 0xffff
        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0])
        o[0] &= 0xffff
        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]]
    }
    //
    // Given a 64bit int (as an array of two 32bit ints) and an int
    // representing a number of bit positions, returns the 64bit int (as an
    // array of two 32bit ints) rotated left by that number of positions.
    //
    var x64Rotl = function (m, n) {
        n %= 64
        if (n === 32) {
            return [m[1], m[0]]
        } else if (n < 32) {
            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))]
        } else {
            n -= 32
            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))]
        }
    }
    //
    // Given a 64bit int (as an array of two 32bit ints) and an int
    // representing a number of bit positions, returns the 64bit int (as an
    // array of two 32bit ints) shifted left by that number of positions.
    //
    var x64LeftShift = function (m, n) {
        n %= 64
        if (n === 0) {
            return m
        } else if (n < 32) {
            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n]
        } else {
            return [m[1] << (n - 32), 0]
        }
    }
    //
    // Given two 64bit ints (as an array of two 32bit ints) returns the two
    // xored together as a 64bit int (as an array of two 32bit ints).
    //
    var x64Xor = function (m, n) {
        return [m[0] ^ n[0], m[1] ^ n[1]]
    }
    //
    // Given a block, returns murmurHash3's final x64 mix of that block.
    // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the
    // only place where we need to right shift 64bit ints.)
    //
    var x64Fmix = function (h) {
        h = x64Xor(h, [0, h[0] >>> 1])
        h = x64Multiply(h, [0xff51afd7, 0xed558ccd])
        h = x64Xor(h, [0, h[0] >>> 1])
        h = x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53])
        h = x64Xor(h, [0, h[0] >>> 1])
        return h
    }

    //
    // Given a string and an optional seed as an int, returns a 128 bit
    // hash using the x64 flavor of MurmurHash3, as an unsigned hex.
    //
    var x64hash128 = function (key, seed) {
        key = key || ''
        seed = seed || 0
        var remainder = key.length % 16
        var bytes = key.length - remainder
        var h1 = [0, seed]
        var h2 = [0, seed]
        var k1 = [0, 0]
        var k2 = [0, 0]
        var c1 = [0x87c37b91, 0x114253d5]
        var c2 = [0x4cf5ad43, 0x2745937f]
        for (var i = 0; i < bytes; i = i + 16) {
            k1 = [((key.charCodeAt(i + 4) & 0xff)) | ((key.charCodeAt(i + 5) & 0xff) << 8) | ((key.charCodeAt(i + 6) & 0xff) << 16) | ((key.charCodeAt(i + 7) & 0xff) << 24), ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) & 0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24)]
            k2 = [((key.charCodeAt(i + 12) & 0xff)) | ((key.charCodeAt(i + 13) & 0xff) << 8) | ((key.charCodeAt(i + 14) & 0xff) << 16) | ((key.charCodeAt(i + 15) & 0xff) << 24), ((key.charCodeAt(i + 8) & 0xff)) | ((key.charCodeAt(i + 9) & 0xff) << 8) | ((key.charCodeAt(i + 10) & 0xff) << 16) | ((key.charCodeAt(i + 11) & 0xff) << 24)]
            k1 = x64Multiply(k1, c1)
            k1 = x64Rotl(k1, 31)
            k1 = x64Multiply(k1, c2)
            h1 = x64Xor(h1, k1)
            h1 = x64Rotl(h1, 27)
            h1 = x64Add(h1, h2)
            h1 = x64Add(x64Multiply(h1, [0, 5]), [0, 0x52dce729])
            k2 = x64Multiply(k2, c2)
            k2 = x64Rotl(k2, 33)
            k2 = x64Multiply(k2, c1)
            h2 = x64Xor(h2, k2)
            h2 = x64Rotl(h2, 31)
            h2 = x64Add(h2, h1)
            h2 = x64Add(x64Multiply(h2, [0, 5]), [0, 0x38495ab5])
        }
        k1 = [0, 0]
        k2 = [0, 0]
        switch (remainder) {
            case 15:
                k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 14)], 48))
            // fallthrough
            case 14:
                k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 13)], 40))
            // fallthrough
            case 13:
                k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 12)], 32))
            // fallthrough
            case 12:
                k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 11)], 24))
            // fallthrough
            case 11:
                k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 10)], 16))
            // fallthrough
            case 10:
                k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 9)], 8))
            // fallthrough
            case 9:
                k2 = x64Xor(k2, [0, key.charCodeAt(i + 8)])
                k2 = x64Multiply(k2, c2)
                k2 = x64Rotl(k2, 33)
                k2 = x64Multiply(k2, c1)
                h2 = x64Xor(h2, k2)
            // fallthrough
            case 8:
                k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 7)], 56))
            // fallthrough
            case 7:
                k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 6)], 48))
            // fallthrough
            case 6:
                k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 5)], 40))
            // fallthrough
            case 5:
                k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 4)], 32))
            // fallthrough
            case 4:
                k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 3)], 24))
            // fallthrough
            case 3:
                k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 2)], 16))
            // fallthrough
            case 2:
                k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 1)], 8))
            // fallthrough
            case 1:
                k1 = x64Xor(k1, [0, key.charCodeAt(i)])
                k1 = x64Multiply(k1, c1)
                k1 = x64Rotl(k1, 31)
                k1 = x64Multiply(k1, c2)
                h1 = x64Xor(h1, k1)
            // fallthrough
        }
        h1 = x64Xor(h1, [0, key.length])
        h2 = x64Xor(h2, [0, key.length])
        h1 = x64Add(h1, h2)
        h2 = x64Add(h2, h1)
        h1 = x64Fmix(h1)
        h2 = x64Fmix(h2)
        h1 = x64Add(h1, h2)
        h2 = x64Add(h2, h1)
        return ('00000000' + (h1[0] >>> 0).toString(16)).slice(-8) + ('00000000' + (h1[1] >>> 0).toString(16)).slice(-8) + ('00000000' + (h2[0] >>> 0).toString(16)).slice(-8) + ('00000000' + (h2[1] >>> 0).toString(16)).slice(-8)
    }

    var defaultOptions = {
        preprocessor: null,
        audio: {
            timeout: 1000,
            // On iOS 11, audio context can only be used in response to user interaction.
            // We require users to explicitly enable audio fingerprinting on iOS 11.
            // See https://stackoverflow.com/questions/46363048/onaudioprocess-not-called-on-ios11#46534088
            excludeIOS11: true
        },
        fonts: {
            swfContainerId: 'fingerprintjs2',
            swfPath: 'flash/compiled/FontList.swf',
            userDefinedFonts: [],
            extendedJsFonts: false
        },
        screen: {
            // To ensure consistent fingerprints when users rotate their mobile devices
            detectScreenOrientation: true
        },
        plugins: {
            sortPluginsFor: [/palemoon/i],
            excludeIE: false
        },
        extraComponents: [],
        excludes: {
            // Unreliable on Windows, see https://github.com/Valve/fingerprintjs2/issues/375
            'enumerateDevices': true,
            // devicePixelRatio depends on browser zoom, and it's impossible to detect browser zoom
            'pixelRatio': true,
            // DNT depends on incognito mode for some browsers (Chrome) and it's impossible to detect incognito mode
            'doNotTrack': true,
            // uses js fonts already
            'fontsFlash': true
        },
        NOT_AVAILABLE: 'not available',
        ERROR: 'error',
        EXCLUDED: 'excluded'
    }

    var each = function (obj, iterator) {
        if (Array.prototype.forEach && obj.forEach === Array.prototype.forEach) {
            obj.forEach(iterator)
        } else if (obj.length === +obj.length) {
            for (var i = 0, l = obj.length; i < l; i++) {
                iterator(obj[i], i, obj)
            }
        } else {
            for (var key in obj) {
                if (obj.hasOwnProperty(key)) {
                    iterator(obj[key], key, obj)
                }
            }
        }
    }

    var map = function (obj, iterator) {
        var results = []
        // Not using strict equality so that this acts as a
        // shortcut to checking for `null` and `undefined`.
        if (obj == null) {
            return results
        }
        if (Array.prototype.map && obj.map === Array.prototype.map) {
            return obj.map(iterator)
        }
        each(obj, function (value, index, list) {
            results.push(iterator(value, index, list))
        })
        return results
    }

    var extendSoft = function (target, source) {
        if (source == null) {
            return target
        }
        var value
        var key
        for (key in source) {
            value = source[key]
            if (value != null && !(Object.prototype.hasOwnProperty.call(target, key))) {
                target[key] = value
            }
        }
        return target
    }

    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices
    var enumerateDevicesKey = function (done, options) {
        if (!isEnumerateDevicesSupported()) {
            return done(options.NOT_AVAILABLE)
        }
        navigator.mediaDevices.enumerateDevices().then(function (devices) {
            done(devices.map(function (device) {
                return 'id=' + device.deviceId + ';gid=' + device.groupId + ';' + device.kind + ';' + device.label
            }))
        })['catch'](function (error) {
            done(error)
        })
    }

    var isEnumerateDevicesSupported = function () {
        return (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices)
    }
    // Inspired by and based on https://github.com/cozylife/audio-fingerprint
    var audioKey = function (done, options) {
        var audioOptions = options.audio
        if (audioOptions.excludeIOS11 && navigator.userAgent.match(/OS 11.+Version\/11.+Safari/)) {
            // See comment for excludeUserAgent and https://stackoverflow.com/questions/46363048/onaudioprocess-not-called-on-ios11#46534088
            return done(options.EXCLUDED)
        }

        var AudioContext = window.OfflineAudioContext || window.webkitOfflineAudioContext

        if (AudioContext == null) {
            return done(options.NOT_AVAILABLE)
        }

        var context = new AudioContext(1, 44100, 44100)

        var oscillator = context.createOscillator()
        oscillator.type = 'triangle'
        oscillator.frequency.setValueAtTime(10000, context.currentTime)

        var compressor = context.createDynamicsCompressor()
        each([
            ['threshold', -50],
            ['knee', 40],
            ['ratio', 12],
            ['reduction', -20],
            ['attack', 0],
            ['release', 0.25]
        ], function (item) {
            if (compressor[item[0]] !== undefined && typeof compressor[item[0]].setValueAtTime === 'function') {
                compressor[item[0]].setValueAtTime(item[1], context.currentTime)
            }
        })

        oscillator.connect(compressor)
        compressor.connect(context.destination)
        oscillator.start(0)
        context.startRendering()

        var audioTimeoutId = setTimeout(function () {
            console.warn('Audio fingerprint timed out. Please report bug at https://github.com/Valve/fingerprintjs2 with your user agent: "' + navigator.userAgent + '".')
            context.oncomplete = function () {
            }
            context = null
            return done('audioTimeout')
        }, audioOptions.timeout)

        context.oncomplete = function (event) {
            var fingerprint
            try {
                clearTimeout(audioTimeoutId)
                fingerprint = event.renderedBuffer.getChannelData(0)
                    .slice(4500, 5000)
                    .reduce(function (acc, val) {
                        return acc + Math.abs(val)
                    }, 0)
                    .toString()
                oscillator.disconnect()
                compressor.disconnect()
            } catch (error) {
                done(error)
                return
            }
            done(fingerprint)
        }
    }
    var UserAgent = function (done) {
        done(navigator.userAgent)
    }
    var webdriver = function (done, options) {
        done(navigator.webdriver == null ? options.NOT_AVAILABLE : navigator.webdriver)
    }
    var languageKey = function (done, options) {
        done(navigator.language || navigator.userLanguage || navigator.browserLanguage || navigator.systemLanguage || options.NOT_AVAILABLE)
    }
    var colorDepthKey = function (done, options) {
        done(window.screen.colorDepth || options.NOT_AVAILABLE)
    }
    var deviceMemoryKey = function (done, options) {
        done(navigator.deviceMemory || options.NOT_AVAILABLE)
    }
    var pixelRatioKey = function (done, options) {
        done(window.devicePixelRatio || options.NOT_AVAILABLE)
    }
    var screenResolutionKey = function (done, options) {
        done(getScreenResolution(options))
    }
    var getScreenResolution = function (options) {
        var resolution = [window.screen.width, window.screen.height]
        if (options.screen.detectScreenOrientation) {
            resolution.sort().reverse()
        }
        return resolution
    }
    var availableScreenResolutionKey = function (done, options) {
        done(getAvailableScreenResolution(options))
    }
    var getAvailableScreenResolution = function (options) {
        if (window.screen.availWidth && window.screen.availHeight) {
            var available = [window.screen.availHeight, window.screen.availWidth]
            if (options.screen.detectScreenOrientation) {
                available.sort().reverse()
            }
            return available
        }
        // headless browsers
        return options.NOT_AVAILABLE
    }
    var timezoneOffset = function (done) {
        done(new Date().getTimezoneOffset())
    }
    var timezone = function (done, options) {
        if (window.Intl && window.Intl.DateTimeFormat) {
            done(new window.Intl.DateTimeFormat().resolvedOptions().timeZone)
            return
        }
        done(options.NOT_AVAILABLE)
    }
    var sessionStorageKey = function (done, options) {
        done(hasSessionStorage(options))
    }
    var localStorageKey = function (done, options) {
        done(hasLocalStorage(options))
    }
    var indexedDbKey = function (done, options) {
        done(hasIndexedDB(options))
    }
    var addBehaviorKey = function (done) {
        // IE8 doesn't have window.HTMLElement and IE9+ doesn't have addBehavior in window.Element
        done(!!(window.HTMLElement || window.Element).prototype.addBehavior)
    }
    var openDatabaseKey = function (done) {
        done(!!window.openDatabase)
    }
    var cpuClassKey = function (done, options) {
        done(getNavigatorCpuClass(options))
    }
    var platformKey = function (done, options) {
        done(getNavigatorPlatform(options))
    }
    var doNotTrackKey = function (done, options) {
        done(getDoNotTrack(options))
    }
    var canvasKey = function (done, options) {
        if (isCanvasSupported()) {
            done(getCanvasFp(options))
            return
        }
        done(options.NOT_AVAILABLE)
    }
    var webglKey = function (done, options) {
        if (isWebGlSupported()) {
            done(getWebglFp())
            return
        }
        done(options.NOT_AVAILABLE)
    }
    var webglVendorAndRendererKey = function (done) {
        if (isWebGlSupported()) {
            done(getWebglVendorAndRenderer())
            return
        }
        done()
    }
    var adBlockKey = function (done) {
        done(getAdBlock())
    }
    var hasLiedLanguagesKey = function (done) {
        done(getHasLiedLanguages())
    }
    var hasLiedResolutionKey = function (done) {
        done(getHasLiedResolution())
    }
    var hasLiedOsKey = function (done) {
        done(getHasLiedOs())
    }
    var hasLiedBrowserKey = function (done) {
        done(getHasLiedBrowser())
    }
    // flash fonts (will increase fingerprinting time 20X to ~ 130-150ms)
    var flashFontsKey = function (done, options) {
        // we do flash if swfobject is loaded
        if (!hasSwfObjectLoaded()) {
            return done('swf object not loaded')
        }
        if (!hasMinFlashInstalled()) {
            return done('flash not installed')
        }
        if (!options.fonts.swfPath) {
            return done('missing options.fonts.swfPath')
        }
        loadSwfAndDetectFonts(function (fonts) {
            done(fonts)
        }, options)
    }
    // kudos to http://www.lalit.org/lab/javascript-css-font-detect/
    var jsFontsKey = function (done, options) {
        // a font will be compared against all the three default fonts.
        // and if it doesn't match all 3 then that font is not available.
        var baseFonts = ['monospace', 'sans-serif', 'serif']

        var fontList = [
            'Andale Mono', 'Arial', 'Arial Black', 'Arial Hebrew', 'Arial MT', 'Arial Narrow', 'Arial Rounded MT Bold', 'Arial Unicode MS',
            'Bitstream Vera Sans Mono', 'Book Antiqua', 'Bookman Old Style',
            'Calibri', 'Cambria', 'Cambria Math', 'Century', 'Century Gothic', 'Century Schoolbook', 'Comic Sans', 'Comic Sans MS', 'Consolas', 'Courier', 'Courier New',
            'Geneva', 'Georgia',
            'Helvetica', 'Helvetica Neue',
            'Impact',
            'Lucida Bright', 'Lucida Calligraphy', 'Lucida Console', 'Lucida Fax', 'LUCIDA GRANDE', 'Lucida Handwriting', 'Lucida Sans', 'Lucida Sans Typewriter', 'Lucida Sans Unicode',
            'Microsoft Sans Serif', 'Monaco', 'Monotype Corsiva', 'MS Gothic', 'MS Outlook', 'MS PGothic', 'MS Reference Sans Serif', 'MS Sans Serif', 'MS Serif', 'MYRIAD', 'MYRIAD PRO',
            'Palatino', 'Palatino Linotype',
            'Segoe Print', 'Segoe Script', 'Segoe UI', 'Segoe UI Light', 'Segoe UI Semibold', 'Segoe UI Symbol',
            'Tahoma', 'Times', 'Times New Roman', 'Times New Roman PS', 'Trebuchet MS',
            'Verdana', 'Wingdings', 'Wingdings 2', 'Wingdings 3'
        ]

        if (options.fonts.extendedJsFonts) {
            var extendedFontList = [
                'Abadi MT Condensed Light', 'Academy Engraved LET', 'ADOBE CASLON PRO', 'Adobe Garamond', 'ADOBE GARAMOND PRO', 'Agency FB', 'Aharoni', 'Albertus Extra Bold', 'Albertus Medium', 'Algerian', 'Amazone BT', 'American Typewriter',
                'American Typewriter Condensed', 'AmerType Md BT', 'Andalus', 'Angsana New', 'AngsanaUPC', 'Antique Olive', 'Aparajita', 'Apple Chancery', 'Apple Color Emoji', 'Apple SD Gothic Neo', 'Arabic Typesetting', 'ARCHER',
                'ARNO PRO', 'Arrus BT', 'Aurora Cn BT', 'AvantGarde Bk BT', 'AvantGarde Md BT', 'AVENIR', 'Ayuthaya', 'Bandy', 'Bangla Sangam MN', 'Bank Gothic', 'BankGothic Md BT', 'Baskerville',
                'Baskerville Old Face', 'Batang', 'BatangChe', 'Bauer Bodoni', 'Bauhaus 93', 'Bazooka', 'Bell MT', 'Bembo', 'Benguiat Bk BT', 'Berlin Sans FB', 'Berlin Sans FB Demi', 'Bernard MT Condensed', 'BernhardFashion BT', 'BernhardMod BT', 'Big Caslon', 'BinnerD',
                'Blackadder ITC', 'BlairMdITC TT', 'Bodoni 72', 'Bodoni 72 Oldstyle', 'Bodoni 72 Smallcaps', 'Bodoni MT', 'Bodoni MT Black', 'Bodoni MT Condensed', 'Bodoni MT Poster Compressed',
                'Bookshelf Symbol 7', 'Boulder', 'Bradley Hand', 'Bradley Hand ITC', 'Bremen Bd BT', 'Britannic Bold', 'Broadway', 'Browallia New', 'BrowalliaUPC', 'Brush Script MT', 'Californian FB', 'Calisto MT', 'Calligrapher', 'Candara',
                'CaslonOpnface BT', 'Castellar', 'Centaur', 'Cezanne', 'CG Omega', 'CG Times', 'Chalkboard', 'Chalkboard SE', 'Chalkduster', 'Charlesworth', 'Charter Bd BT', 'Charter BT', 'Chaucer',
                'ChelthmITC Bk BT', 'Chiller', 'Clarendon', 'Clarendon Condensed', 'CloisterBlack BT', 'Cochin', 'Colonna MT', 'Constantia', 'Cooper Black', 'Copperplate', 'Copperplate Gothic', 'Copperplate Gothic Bold',
                'Copperplate Gothic Light', 'CopperplGoth Bd BT', 'Corbel', 'Cordia New', 'CordiaUPC', 'Cornerstone', 'Coronet', 'Cuckoo', 'Curlz MT', 'DaunPenh', 'Dauphin', 'David', 'DB LCD Temp', 'DELICIOUS', 'Denmark',
                'DFKai-SB', 'Didot', 'DilleniaUPC', 'DIN', 'DokChampa', 'Dotum', 'DotumChe', 'Ebrima', 'Edwardian Script ITC', 'Elephant', 'English 111 Vivace BT', 'Engravers MT', 'EngraversGothic BT', 'Eras Bold ITC', 'Eras Demi ITC', 'Eras Light ITC', 'Eras Medium ITC',
                'EucrosiaUPC', 'Euphemia', 'Euphemia UCAS', 'EUROSTILE', 'Exotc350 Bd BT', 'FangSong', 'Felix Titling', 'Fixedsys', 'FONTIN', 'Footlight MT Light', 'Forte',
                'FrankRuehl', 'Fransiscan', 'Freefrm721 Blk BT', 'FreesiaUPC', 'Freestyle Script', 'French Script MT', 'FrnkGothITC Bk BT', 'Fruitger', 'FRUTIGER',
                'Futura', 'Futura Bk BT', 'Futura Lt BT', 'Futura Md BT', 'Futura ZBlk BT', 'FuturaBlack BT', 'Gabriola', 'Galliard BT', 'Gautami', 'Geeza Pro', 'Geometr231 BT', 'Geometr231 Hv BT', 'Geometr231 Lt BT', 'GeoSlab 703 Lt BT',
                'GeoSlab 703 XBd BT', 'Gigi', 'Gill Sans', 'Gill Sans MT', 'Gill Sans MT Condensed', 'Gill Sans MT Ext Condensed Bold', 'Gill Sans Ultra Bold', 'Gill Sans Ultra Bold Condensed', 'Gisha', 'Gloucester MT Extra Condensed', 'GOTHAM', 'GOTHAM BOLD',
                'Goudy Old Style', 'Goudy Stout', 'GoudyHandtooled BT', 'GoudyOLSt BT', 'Gujarati Sangam MN', 'Gulim', 'GulimChe', 'Gungsuh', 'GungsuhChe', 'Gurmukhi MN', 'Haettenschweiler', 'Harlow Solid Italic', 'Harrington', 'Heather', 'Heiti SC', 'Heiti TC', 'HELV',
                'Herald', 'High Tower Text', 'Hiragino Kaku Gothic ProN', 'Hiragino Mincho ProN', 'Hoefler Text', 'Humanst 521 Cn BT', 'Humanst521 BT', 'Humanst521 Lt BT', 'Imprint MT Shadow', 'Incised901 Bd BT', 'Incised901 BT',
                'Incised901 Lt BT', 'INCONSOLATA', 'Informal Roman', 'Informal011 BT', 'INTERSTATE', 'IrisUPC', 'Iskoola Pota', 'JasmineUPC', 'Jazz LET', 'Jenson', 'Jester', 'Jokerman', 'Juice ITC', 'Kabel Bk BT', 'Kabel Ult BT', 'Kailasa', 'KaiTi', 'Kalinga', 'Kannada Sangam MN',
                'Kartika', 'Kaufmann Bd BT', 'Kaufmann BT', 'Khmer UI', 'KodchiangUPC', 'Kokila', 'Korinna BT', 'Kristen ITC', 'Krungthep', 'Kunstler Script', 'Lao UI', 'Latha', 'Leelawadee', 'Letter Gothic', 'Levenim MT', 'LilyUPC', 'Lithograph', 'Lithograph Light', 'Long Island',
                'Lydian BT', 'Magneto', 'Maiandra GD', 'Malayalam Sangam MN', 'Malgun Gothic',
                'Mangal', 'Marigold', 'Marion', 'Marker Felt', 'Market', 'Marlett', 'Matisse ITC', 'Matura MT Script Capitals', 'Meiryo', 'Meiryo UI', 'Microsoft Himalaya', 'Microsoft JhengHei', 'Microsoft New Tai Lue', 'Microsoft PhagsPa', 'Microsoft Tai Le',
                'Microsoft Uighur', 'Microsoft YaHei', 'Microsoft Yi Baiti', 'MingLiU', 'MingLiU_HKSCS', 'MingLiU_HKSCS-ExtB', 'MingLiU-ExtB', 'Minion', 'Minion Pro', 'Miriam', 'Miriam Fixed', 'Mistral', 'Modern', 'Modern No. 20', 'Mona Lisa Solid ITC TT', 'Mongolian Baiti',
                'MONO', 'MoolBoran', 'Mrs Eaves', 'MS LineDraw', 'MS Mincho', 'MS PMincho', 'MS Reference Specialty', 'MS UI Gothic', 'MT Extra', 'MUSEO', 'MV Boli',
                'Nadeem', 'Narkisim', 'NEVIS', 'News Gothic', 'News GothicMT', 'NewsGoth BT', 'Niagara Engraved', 'Niagara Solid', 'Noteworthy', 'NSimSun', 'Nyala', 'OCR A Extended', 'Old Century', 'Old English Text MT', 'Onyx', 'Onyx BT', 'OPTIMA', 'Oriya Sangam MN',
                'OSAKA', 'OzHandicraft BT', 'Palace Script MT', 'Papyrus', 'Parchment', 'Party LET', 'Pegasus', 'Perpetua', 'Perpetua Titling MT', 'PetitaBold', 'Pickwick', 'Plantagenet Cherokee', 'Playbill', 'PMingLiU', 'PMingLiU-ExtB',
                'Poor Richard', 'Poster', 'PosterBodoni BT', 'PRINCETOWN LET', 'Pristina', 'PTBarnum BT', 'Pythagoras', 'Raavi', 'Rage Italic', 'Ravie', 'Ribbon131 Bd BT', 'Rockwell', 'Rockwell Condensed', 'Rockwell Extra Bold', 'Rod', 'Roman', 'Sakkal Majalla',
                'Santa Fe LET', 'Savoye LET', 'Sceptre', 'Script', 'Script MT Bold', 'SCRIPTINA', 'Serifa', 'Serifa BT', 'Serifa Th BT', 'ShelleyVolante BT', 'Sherwood',
                'Shonar Bangla', 'Showcard Gothic', 'Shruti', 'Signboard', 'SILKSCREEN', 'SimHei', 'Simplified Arabic', 'Simplified Arabic Fixed', 'SimSun', 'SimSun-ExtB', 'Sinhala Sangam MN', 'Sketch Rockwell', 'Skia', 'Small Fonts', 'Snap ITC', 'Snell Roundhand', 'Socket',
                'Souvenir Lt BT', 'Staccato222 BT', 'Steamer', 'Stencil', 'Storybook', 'Styllo', 'Subway', 'Swis721 BlkEx BT', 'Swiss911 XCm BT', 'Sylfaen', 'Synchro LET', 'System', 'Tamil Sangam MN', 'Technical', 'Teletype', 'Telugu Sangam MN', 'Tempus Sans ITC',
                'Terminal', 'Thonburi', 'Traditional Arabic', 'Trajan', 'TRAJAN PRO', 'Tristan', 'Tubular', 'Tunga', 'Tw Cen MT', 'Tw Cen MT Condensed', 'Tw Cen MT Condensed Extra Bold',
                'TypoUpright BT', 'Unicorn', 'Univers', 'Univers CE 55 Medium', 'Univers Condensed', 'Utsaah', 'Vagabond', 'Vani', 'Vijaya', 'Viner Hand ITC', 'VisualUI', 'Vivaldi', 'Vladimir Script', 'Vrinda', 'Westminster', 'WHITNEY', 'Wide Latin',
                'ZapfEllipt BT', 'ZapfHumnst BT', 'ZapfHumnst Dm BT', 'Zapfino', 'Zurich BlkEx BT', 'Zurich Ex BT', 'ZWAdobeF']
            fontList = fontList.concat(extendedFontList)
        }

        fontList = fontList.concat(options.fonts.userDefinedFonts)

        // remove duplicate fonts
        fontList = fontList.filter(function (font, position) {
            return fontList.indexOf(font) === position
        })

        // we use m or w because these two characters take up the maximum width.
        // And we use a LLi so that the same matching fonts can get separated
        var testString = 'mmmmmmmmmmlli'

        // we test using 72px font size, we may use any size. I guess larger the better.
        var testSize = '72px'

        var h = document.getElementsByTagName('body')[0]

        // div to load spans for the base fonts
        var baseFontsDiv = document.createElement('div')

        // div to load spans for the fonts to detect
        var fontsDiv = document.createElement('div')

        var defaultWidth = {}
        var defaultHeight = {}

        // creates a span where the fonts will be loaded
        var createSpan = function () {
            var s = document.createElement('span')
            /*
       * We need this css as in some weird browser this
       * span elements shows up for a microSec which creates a
       * bad user experience
       */
            s.style.position = 'absolute'
            s.style.left = '-9999px'
            s.style.fontSize = testSize

            // css font reset to reset external styles
            s.style.fontStyle = 'normal'
            s.style.fontWeight = 'normal'
            s.style.letterSpacing = 'normal'
            s.style.lineBreak = 'auto'
            s.style.lineHeight = 'normal'
            s.style.textTransform = 'none'
            s.style.textAlign = 'left'
            s.style.textDecoration = 'none'
            s.style.textShadow = 'none'
            s.style.whiteSpace = 'normal'
            s.style.wordBreak = 'normal'
            s.style.wordSpacing = 'normal'

            s.innerHTML = testString
            return s
        }

        // creates a span and load the font to detect and a base font for fallback
        var createSpanWithFonts = function (fontToDetect, baseFont) {
            var s = createSpan()
            s.style.fontFamily = "'" + fontToDetect + "'," + baseFont
            return s
        }

        // creates spans for the base fonts and adds them to baseFontsDiv
        var initializeBaseFontsSpans = function () {
            var spans = []
            for (var index = 0, length = baseFonts.length; index < length; index++) {
                var s = createSpan()
                s.style.fontFamily = baseFonts[index]
                baseFontsDiv.appendChild(s)
                spans.push(s)
            }
            return spans
        }

        // creates spans for the fonts to detect and adds them to fontsDiv
        var initializeFontsSpans = function () {
            var spans = {}
            for (var i = 0, l = fontList.length; i < l; i++) {
                var fontSpans = []
                for (var j = 0, numDefaultFonts = baseFonts.length; j < numDefaultFonts; j++) {
                    var s = createSpanWithFonts(fontList[i], baseFonts[j])
                    fontsDiv.appendChild(s)
                    fontSpans.push(s)
                }
                spans[fontList[i]] = fontSpans // Stores {fontName : [spans for that font]}
            }
            return spans
        }

        // checks if a font is available
        var isFontAvailable = function (fontSpans) {
            var detected = false
            for (var i = 0; i < baseFonts.length; i++) {
                detected = (fontSpans[i].offsetWidth !== defaultWidth[baseFonts[i]] || fontSpans[i].offsetHeight !== defaultHeight[baseFonts[i]])
                if (detected) {
                    return detected
                }
            }
            return detected
        }

        // create spans for base fonts
        var baseFontsSpans = initializeBaseFontsSpans()

        // add the spans to the DOM
        h.appendChild(baseFontsDiv)

        // get the default width for the three base fonts
        for (var index = 0, length = baseFonts.length; index < length; index++) {
            defaultWidth[baseFonts[index]] = baseFontsSpans[index].offsetWidth // width for the default font
            defaultHeight[baseFonts[index]] = baseFontsSpans[index].offsetHeight // height for the default font
        }

        // create spans for fonts to detect
        var fontsSpans = initializeFontsSpans()

        // add all the spans to the DOM
        h.appendChild(fontsDiv)

        // check available fonts
        var available = []
        for (var i = 0, l = fontList.length; i < l; i++) {
            if (isFontAvailable(fontsSpans[fontList[i]])) {
                available.push(fontList[i])
            }
        }

        // remove spans from DOM
        h.removeChild(fontsDiv)
        h.removeChild(baseFontsDiv)
        done(available)
    }
    var pluginsComponent = function (done, options) {
        if (isIE()) {
            if (!options.plugins.excludeIE) {
                done(getIEPlugins(options))
            } else {
                done(options.EXCLUDED)
            }
        } else {
            done(getRegularPlugins(options))
        }
    }
    var getRegularPlugins = function (options) {
        if (navigator.plugins == null) {
            return options.NOT_AVAILABLE
        }

        var plugins = []
        // plugins isn't defined in Node envs.
        for (var i = 0, l = navigator.plugins.length; i < l; i++) {
            if (navigator.plugins[i]) {
                plugins.push(navigator.plugins[i])
            }
        }

        // sorting plugins only for those user agents, that we know randomize the plugins
        // every time we try to enumerate them
        if (pluginsShouldBeSorted(options)) {
            plugins = plugins.sort(function (a, b) {
                if (a.name > b.name) {
                    return 1
                }
                if (a.name < b.name) {
                    return -1
                }
                return 0
            })
        }
        return map(plugins, function (p) {
            var mimeTypes = map(p, function (mt) {
                return [mt.type, mt.suffixes]
            })
            return [p.name, p.description, mimeTypes]
        })
    }
    var getIEPlugins = function (options) {
        var result = []
        if ((Object.getOwnPropertyDescriptor && Object.getOwnPropertyDescriptor(window, 'ActiveXObject')) || ('ActiveXObject' in window)) {
            var names = [
                'AcroPDF.PDF', // Adobe PDF reader 7+
                'Adodb.Stream',
                'AgControl.AgControl', // Silverlight
                'DevalVRXCtrl.DevalVRXCtrl.1',
                'MacromediaFlashPaper.MacromediaFlashPaper',
                'Msxml2.DOMDocument',
                'Msxml2.XMLHTTP',
                'PDF.PdfCtrl', // Adobe PDF reader 6 and earlier, brrr
                'QuickTime.QuickTime', // QuickTime
                'QuickTimeCheckObject.QuickTimeCheck.1',
                'RealPlayer',
                'RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)',
                'RealVideo.RealVideo(tm) ActiveX Control (32-bit)',
                'Scripting.Dictionary',
                'SWCtl.SWCtl', // ShockWave player
                'Shell.UIHelper',
                'ShockwaveFlash.ShockwaveFlash', // flash plugin
                'Skype.Detection',
                'TDCCtl.TDCCtl',
                'WMPlayer.OCX', // Windows media player
                'rmocx.RealPlayer G2 Control',
                'rmocx.RealPlayer G2 Control.1'
            ]
            // starting to detect plugins in IE
            result = map(names, function (name) {
                try {
                    // eslint-disable-next-line no-new
                    new window.ActiveXObject(name)
                    return name
                } catch (e) {
                    return options.ERROR
                }
            })
        } else {
            result.push(options.NOT_AVAILABLE)
        }
        if (navigator.plugins) {
            result = result.concat(getRegularPlugins(options))
        }
        return result
    }
    var pluginsShouldBeSorted = function (options) {
        var should = false
        for (var i = 0, l = options.plugins.sortPluginsFor.length; i < l; i++) {
            var re = options.plugins.sortPluginsFor[i]
            if (navigator.userAgent.match(re)) {
                should = true
                break
            }
        }
        return should
    }
    var touchSupportKey = function (done) {
        done(getTouchSupport())
    }
    var hardwareConcurrencyKey = function (done, options) {
        done(getHardwareConcurrency(options))
    }
    var hasSessionStorage = function (options) {
        try {
            return !!window.sessionStorage
        } catch (e) {
            return options.ERROR // SecurityError when referencing it means it exists
        }
    }

    // https://bugzilla.mozilla.org/show_bug.cgi?id=781447
    var hasLocalStorage = function (options) {
        try {
            return !!window.localStorage
        } catch (e) {
            return options.ERROR // SecurityError when referencing it means it exists
        }
    }
    var hasIndexedDB = function (options) {
        try {
            return !!window.indexedDB
        } catch (e) {
            return options.ERROR // SecurityError when referencing it means it exists
        }
    }
    var getHardwareConcurrency = function (options) {
        if (navigator.hardwareConcurrency) {
            return navigator.hardwareConcurrency
        }
        return options.NOT_AVAILABLE
    }
    var getNavigatorCpuClass = function (options) {
        return navigator.cpuClass || options.NOT_AVAILABLE
    }
    var getNavigatorPlatform = function (options) {
        if (navigator.platform) {
            return navigator.platform
        } else {
            return options.NOT_AVAILABLE
        }
    }
    var getDoNotTrack = function (options) {
        if (navigator.doNotTrack) {
            return navigator.doNotTrack
        } else if (navigator.msDoNotTrack) {
            return navigator.msDoNotTrack
        } else if (window.doNotTrack) {
            return window.doNotTrack
        } else {
            return options.NOT_AVAILABLE
        }
    }
    // This is a crude and primitive touch screen detection.
    // It's not possible to currently reliably detect the  availability of a touch screen
    // with a JS, without actually subscribing to a touch event.
    // http://www.stucox.com/blog/you-cant-detect-a-touchscreen/
    // https://github.com/Modernizr/Modernizr/issues/548
    // method returns an array of 3 values:
    // maxTouchPoints, the success or failure of creating a TouchEvent,
    // and the availability of the 'ontouchstart' property

    var getTouchSupport = function () {
        var maxTouchPoints = 0
        var touchEvent
        if (typeof navigator.maxTouchPoints !== 'undefined') {
            maxTouchPoints = navigator.maxTouchPoints
        } else if (typeof navigator.msMaxTouchPoints !== 'undefined') {
            maxTouchPoints = navigator.msMaxTouchPoints
        }
        try {
            document.createEvent('TouchEvent')
            touchEvent = true
        } catch (_) {
            touchEvent = false
        }
        var touchStart = 'ontouchstart' in window
        return [maxTouchPoints, touchEvent, touchStart]
    }
    // https://www.browserleaks.com/canvas#how-does-it-work

    var getCanvasFp = function (options) {
        var result = []
        // Very simple now, need to make it more complex (geo shapes etc)
        var canvas = document.createElement('canvas')
        canvas.width = 2000
        canvas.height = 200
        canvas.style.display = 'inline'
        var ctx = canvas.getContext('2d')
        // detect browser support of canvas winding
        // http://blogs.adobe.com/webplatform/2013/01/30/winding-rules-in-canvas/
        // https://github.com/Modernizr/Modernizr/blob/master/feature-detects/canvas/winding.js
        ctx.rect(0, 0, 10, 10)
        ctx.rect(2, 2, 6, 6)
        result.push('canvas winding:' + ((ctx.isPointInPath(5, 5, 'evenodd') === false) ? 'yes' : 'no'))

        ctx.textBaseline = 'alphabetic'
        ctx.fillStyle = '#f60'
        ctx.fillRect(125, 1, 62, 20)
        ctx.fillStyle = '#069'
        // https://github.com/Valve/fingerprintjs2/issues/66
        if (options.dontUseFakeFontInCanvas) {
            ctx.font = '11pt Arial'
        } else {
            ctx.font = '11pt no-real-font-123'
        }
        ctx.fillText('Cwm fjordbank glyphs vext quiz, \ud83d\ude03', 2, 15)
        ctx.fillStyle = 'rgba(102, 204, 0, 0.2)'
        ctx.font = '18pt Arial'
        ctx.fillText('Cwm fjordbank glyphs vext quiz, \ud83d\ude03', 4, 45)

        // canvas blending
        // http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/
        // http://jsfiddle.net/NDYV8/16/
        ctx.globalCompositeOperation = 'multiply'
        ctx.fillStyle = 'rgb(255,0,255)'
        ctx.beginPath()
        ctx.arc(50, 50, 50, 0, Math.PI * 2, true)
        ctx.closePath()
        ctx.fill()
        ctx.fillStyle = 'rgb(0,255,255)'
        ctx.beginPath()
        ctx.arc(100, 50, 50, 0, Math.PI * 2, true)
        ctx.closePath()
        ctx.fill()
        ctx.fillStyle = 'rgb(255,255,0)'
        ctx.beginPath()
        ctx.arc(75, 100, 50, 0, Math.PI * 2, true)
        ctx.closePath()
        ctx.fill()
        ctx.fillStyle = 'rgb(255,0,255)'
        // canvas winding
        // http://blogs.adobe.com/webplatform/2013/01/30/winding-rules-in-canvas/
        // http://jsfiddle.net/NDYV8/19/
        ctx.arc(75, 75, 75, 0, Math.PI * 2, true)
        ctx.arc(75, 75, 25, 0, Math.PI * 2, true)
        ctx.fill('evenodd')

        if (canvas.toDataURL) {
            result.push('canvas fp:' + canvas.toDataURL())
        }
        return result
    }
    var getWebglFp = function () {
        var gl
        var fa2s = function (fa) {
            gl.clearColor(0.0, 0.0, 0.0, 1.0)
            gl.enable(gl.DEPTH_TEST)
            gl.depthFunc(gl.LEQUAL)
            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)
            return '[' + fa[0] + ', ' + fa[1] + ']'
        }
        var maxAnisotropy = function (gl) {
            var ext = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic')
            if (ext) {
                var anisotropy = gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT)
                if (anisotropy === 0) {
                    anisotropy = 2
                }
                return anisotropy
            } else {
                return null
            }
        }

        gl = getWebglCanvas()
        if (!gl) {
            return null
        }
        // WebGL fingerprinting is a combination of techniques, found in MaxMind antifraud script & Augur fingerprinting.
        // First it draws a gradient object with shaders and convers the image to the Base64 string.
        // Then it enumerates all WebGL extensions & capabilities and appends them to the Base64 string, resulting in a huge WebGL string, potentially very unique on each device
        // Since iOS supports webgl starting from version 8.1 and 8.1 runs on several graphics chips, the results may be different across ios devices, but we need to verify it.
        var result = []
        var vShaderTemplate = 'attribute vec2 attrVertex;varying vec2 varyinTexCoordinate;uniform vec2 uniformOffset;void main(){varyinTexCoordinate=attrVertex+uniformOffset;gl_Position=vec4(attrVertex,0,1);}'
        var fShaderTemplate = 'precision mediump float;varying vec2 varyinTexCoordinate;void main() {gl_FragColor=vec4(varyinTexCoordinate,0,1);}'
        var vertexPosBuffer = gl.createBuffer()
        gl.bindBuffer(gl.ARRAY_BUFFER, vertexPosBuffer)
        var vertices = new Float32Array([-0.2, -0.9, 0, 0.4, -0.26, 0, 0, 0.732134444, 0])
        gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW)
        vertexPosBuffer.itemSize = 3
        vertexPosBuffer.numItems = 3
        var program = gl.createProgram()
        var vshader = gl.createShader(gl.VERTEX_SHADER)
        gl.shaderSource(vshader, vShaderTemplate)
        gl.compileShader(vshader)
        var fshader = gl.createShader(gl.FRAGMENT_SHADER)
        gl.shaderSource(fshader, fShaderTemplate)
        gl.compileShader(fshader)
        gl.attachShader(program, vshader)
        gl.attachShader(program, fshader)
        gl.linkProgram(program)
        gl.useProgram(program)
        program.vertexPosAttrib = gl.getAttribLocation(program, 'attrVertex')
        program.offsetUniform = gl.getUniformLocation(program, 'uniformOffset')
        gl.enableVertexAttribArray(program.vertexPosArray)
        gl.vertexAttribPointer(program.vertexPosAttrib, vertexPosBuffer.itemSize, gl.FLOAT, !1, 0, 0)
        gl.uniform2f(program.offsetUniform, 1, 1)
        gl.drawArrays(gl.TRIANGLE_STRIP, 0, vertexPosBuffer.numItems)
        try {
            result.push(gl.canvas.toDataURL())
        } catch (e) {
            /* .toDataURL may be absent or broken (blocked by extension) */
        }
        result.push('extensions:' + (gl.getSupportedExtensions() || []).join(';'))
        result.push('webgl aliased line width range:' + fa2s(gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE)))
        result.push('webgl aliased point size range:' + fa2s(gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE)))
        result.push('webgl alpha bits:' + gl.getParameter(gl.ALPHA_BITS))
        result.push('webgl antialiasing:' + (gl.getContextAttributes().antialias ? 'yes' : 'no'))
        result.push('webgl blue bits:' + gl.getParameter(gl.BLUE_BITS))
        result.push('webgl depth bits:' + gl.getParameter(gl.DEPTH_BITS))
        result.push('webgl green bits:' + gl.getParameter(gl.GREEN_BITS))
        result.push('webgl max anisotropy:' + maxAnisotropy(gl))
        result.push('webgl max combined texture image units:' + gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS))
        result.push('webgl max cube map texture size:' + gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE))
        result.push('webgl max fragment uniform vectors:' + gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS))
        result.push('webgl max render buffer size:' + gl.getParameter(gl.MAX_RENDERBUFFER_SIZE))
        result.push('webgl max texture image units:' + gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS))
        result.push('webgl max texture size:' + gl.getParameter(gl.MAX_TEXTURE_SIZE))
        result.push('webgl max varying vectors:' + gl.getParameter(gl.MAX_VARYING_VECTORS))
        result.push('webgl max vertex attribs:' + gl.getParameter(gl.MAX_VERTEX_ATTRIBS))
        result.push('webgl max vertex texture image units:' + gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS))
        result.push('webgl max vertex uniform vectors:' + gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS))
        result.push('webgl max viewport dims:' + fa2s(gl.getParameter(gl.MAX_VIEWPORT_DIMS)))
        result.push('webgl red bits:' + gl.getParameter(gl.RED_BITS))
        result.push('webgl renderer:' + gl.getParameter(gl.RENDERER))
        result.push('webgl shading language version:' + gl.getParameter(gl.SHADING_LANGUAGE_VERSION))
        result.push('webgl stencil bits:' + gl.getParameter(gl.STENCIL_BITS))
        result.push('webgl vendor:' + gl.getParameter(gl.VENDOR))
        result.push('webgl version:' + gl.getParameter(gl.VERSION))

        try {
            // Add the unmasked vendor and unmasked renderer if the debug_renderer_info extension is available
            var extensionDebugRendererInfo = gl.getExtension('WEBGL_debug_renderer_info')
            if (extensionDebugRendererInfo) {
                result.push('webgl unmasked vendor:' + gl.getParameter(extensionDebugRendererInfo.UNMASKED_VENDOR_WEBGL))
                result.push('webgl unmasked renderer:' + gl.getParameter(extensionDebugRendererInfo.UNMASKED_RENDERER_WEBGL))
            }
        } catch (e) { /* squelch */
        }

        if (!gl.getShaderPrecisionFormat) {
            loseWebglContext(gl)
            return result
        }

        each(['FLOAT', 'INT'], function (numType) {
            each(['VERTEX', 'FRAGMENT'], function (shader) {
                each(['HIGH', 'MEDIUM', 'LOW'], function (numSize) {
                    each(['precision', 'rangeMin', 'rangeMax'], function (key) {
                        var format = gl.getShaderPrecisionFormat(gl[shader + '_SHADER'], gl[numSize + '_' + numType])[key]
                        if (key !== 'precision') {
                            key = 'precision ' + key
                        }
                        var line = ['webgl ', shader.toLowerCase(), ' shader ', numSize.toLowerCase(), ' ', numType.toLowerCase(), ' ', key, ':', format].join('')
                        result.push(line)
                    })
                })
            })
        })
        loseWebglContext(gl)
        return result
    }
    var getWebglVendorAndRenderer = function () {
        /* This a subset of the WebGL fingerprint with a lot of entropy, while being reasonably browser-independent */
        try {
            var glContext = getWebglCanvas()
            var extensionDebugRendererInfo = glContext.getExtension('WEBGL_debug_renderer_info')
            var params = glContext.getParameter(extensionDebugRendererInfo.UNMASKED_VENDOR_WEBGL) + '~' + glContext.getParameter(extensionDebugRendererInfo.UNMASKED_RENDERER_WEBGL)
            loseWebglContext(glContext)
            return params
        } catch (e) {
            return null
        }
    }
    var getAdBlock = function () {
        var ads = document.createElement('div')
        ads.innerHTML = '&nbsp;'
        ads.className = 'adsbox'
        var result = false
        try {
            // body may not exist, that's why we need try/catch
            document.body.appendChild(ads)
            result = document.getElementsByClassName('adsbox')[0].offsetHeight === 0
            document.body.removeChild(ads)
        } catch (e) {
            result = false
        }
        return result
    }
    var getHasLiedLanguages = function () {
        // We check if navigator.language is equal to the first language of navigator.languages
        // navigator.languages is undefined on IE11 (and potentially older IEs)
        if (typeof navigator.languages !== 'undefined') {
            try {
                var firstLanguages = navigator.languages[0].substr(0, 2)
                if (firstLanguages !== navigator.language.substr(0, 2)) {
                    return true
                }
            } catch (err) {
                return true
            }
        }
        return false
    }
    var getHasLiedResolution = function () {
        return window.screen.width < window.screen.availWidth || window.screen.height < window.screen.availHeight
    }
    var getHasLiedOs = function () {
        var userAgent = navigator.userAgent.toLowerCase()
        var oscpu = navigator.oscpu
        var platform = navigator.platform.toLowerCase()
        var os
        // We extract the OS from the user agent (respect the order of the if else if statement)
        if (userAgent.indexOf('windows phone') >= 0) {
            os = 'Windows Phone'
        } else if (userAgent.indexOf('windows') >= 0 || userAgent.indexOf('win16') >= 0 || userAgent.indexOf('win32') >= 0 || userAgent.indexOf('win64') >= 0 || userAgent.indexOf('win95') >= 0 || userAgent.indexOf('win98') >= 0 || userAgent.indexOf('winnt') >= 0 || userAgent.indexOf('wow64') >= 0) {
            os = 'Windows'
        } else if (userAgent.indexOf('android') >= 0) {
            os = 'Android'
        } else if (userAgent.indexOf('linux') >= 0 || userAgent.indexOf('cros') >= 0 || userAgent.indexOf('x11') >= 0) {
            os = 'Linux'
        } else if (userAgent.indexOf('iphone') >= 0 || userAgent.indexOf('ipad') >= 0 || userAgent.indexOf('ipod') >= 0 || userAgent.indexOf('crios') >= 0 || userAgent.indexOf('fxios') >= 0) {
            os = 'iOS'
        } else if (userAgent.indexOf('macintosh') >= 0 || userAgent.indexOf('mac_powerpc)') >= 0) {
            os = 'Mac'
        } else {
            os = 'Other'
        }
        // We detect if the person uses a touch device
        var mobileDevice = (('ontouchstart' in window) ||
            (navigator.maxTouchPoints > 0) ||
            (navigator.msMaxTouchPoints > 0))

        if (mobileDevice && os !== 'Windows' && os !== 'Windows Phone' && os !== 'Android' && os !== 'iOS' && os !== 'Other' && userAgent.indexOf('cros') === -1) {
            return true
        }

        // We compare oscpu with the OS extracted from the UA
        if (typeof oscpu !== 'undefined') {
            oscpu = oscpu.toLowerCase()
            if (oscpu.indexOf('win') >= 0 && os !== 'Windows' && os !== 'Windows Phone') {
                return true
            } else if (oscpu.indexOf('linux') >= 0 && os !== 'Linux' && os !== 'Android') {
                return true
            } else if (oscpu.indexOf('mac') >= 0 && os !== 'Mac' && os !== 'iOS') {
                return true
            } else if ((oscpu.indexOf('win') === -1 && oscpu.indexOf('linux') === -1 && oscpu.indexOf('mac') === -1) !== (os === 'Other')) {
                return true
            }
        }

        // We compare platform with the OS extracted from the UA
        if (platform.indexOf('win') >= 0 && os !== 'Windows' && os !== 'Windows Phone') {
            return true
        } else if ((platform.indexOf('linux') >= 0 || platform.indexOf('android') >= 0 || platform.indexOf('pike') >= 0) && os !== 'Linux' && os !== 'Android') {
            return true
        } else if ((platform.indexOf('mac') >= 0 || platform.indexOf('ipad') >= 0 || platform.indexOf('ipod') >= 0 || platform.indexOf('iphone') >= 0) && os !== 'Mac' && os !== 'iOS') {
            return true
        } else if (platform.indexOf('arm') >= 0 && os === 'Windows Phone') {
            return false
        } else if (platform.indexOf('pike') >= 0 && userAgent.indexOf('opera mini') >= 0) {
            return false
        } else {
            var platformIsOther = platform.indexOf('win') < 0 &&
                platform.indexOf('linux') < 0 &&
                platform.indexOf('mac') < 0 &&
                platform.indexOf('iphone') < 0 &&
                platform.indexOf('ipad') < 0 &&
                platform.indexOf('ipod') < 0
            if (platformIsOther !== (os === 'Other')) {
                return true
            }
        }

        return typeof navigator.plugins === 'undefined' && os !== 'Windows' && os !== 'Windows Phone'
    }
    var getHasLiedBrowser = function () {
        var userAgent = navigator.userAgent.toLowerCase()
        var productSub = navigator.productSub

        // we extract the browser from the user agent (respect the order of the tests)
        var browser
        if (userAgent.indexOf('edge/') >= 0 || userAgent.indexOf('iemobile/') >= 0) {
            // Unreliable, different versions use EdgeHTML, Webkit, Blink, etc.
            return false
        } else if (userAgent.indexOf('opera mini') >= 0) {
            // Unreliable, different modes use Presto, WebView, Webkit, etc.
            return false
        } else if (userAgent.indexOf('firefox/') >= 0) {
            browser = 'Firefox'
        } else if (userAgent.indexOf('opera/') >= 0 || userAgent.indexOf(' opr/') >= 0) {
            browser = 'Opera'
        } else if (userAgent.indexOf('chrome/') >= 0) {
            browser = 'Chrome'
        } else if (userAgent.indexOf('safari/') >= 0) {
            if (userAgent.indexOf('android 1.') >= 0 || userAgent.indexOf('android 2.') >= 0 || userAgent.indexOf('android 3.') >= 0 || userAgent.indexOf('android 4.') >= 0) {
                browser = 'AOSP'
            } else {
                browser = 'Safari'
            }
        } else if (userAgent.indexOf('trident/') >= 0) {
            browser = 'Internet Explorer'
        } else {
            browser = 'Other'
        }

        if ((browser === 'Chrome' || browser === 'Safari' || browser === 'Opera') && productSub !== '20030107') {
            return true
        }

        // eslint-disable-next-line no-eval
        var tempRes = eval.toString().length
        if (tempRes === 37 && browser !== 'Safari' && browser !== 'Firefox' && browser !== 'Other') {
            return true
        } else if (tempRes === 39 && browser !== 'Internet Explorer' && browser !== 'Other') {
            return true
        } else if (tempRes === 33 && browser !== 'Chrome' && browser !== 'AOSP' && browser !== 'Opera' && browser !== 'Other') {
            return true
        }

        // We create an error to see how it is handled
        var errFirefox
        try {
            // eslint-disable-next-line no-throw-literal
            throw 'a'
        } catch (err) {
            try {
                err.toSource()
                errFirefox = true
            } catch (errOfErr) {
                errFirefox = false
            }
        }
        return errFirefox && browser !== 'Firefox' && browser !== 'Other'
    }
    var isCanvasSupported = function () {
        var elem = document.createElement('canvas')
        return !!(elem.getContext && elem.getContext('2d'))
    }
    var isWebGlSupported = function () {
        // code taken from Modernizr
        if (!isCanvasSupported()) {
            return false
        }

        var glContext = getWebglCanvas()
        var isSupported = !!window.WebGLRenderingContext && !!glContext
        loseWebglContext(glContext)
        return isSupported
    }
    var isIE = function () {
        if (navigator.appName === 'Microsoft Internet Explorer') {
            return true
        } else if (navigator.appName === 'Netscape' && /Trident/.test(navigator.userAgent)) { // IE 11
            return true
        }
        return false
    }
    var hasSwfObjectLoaded = function () {
        return typeof window.swfobject !== 'undefined'
    }
    var hasMinFlashInstalled = function () {
        return window.swfobject.hasFlashPlayerVersion('9.0.0')
    }
    var addFlashDivNode = function (options) {
        var node = document.createElement('div')
        node.setAttribute('id', options.fonts.swfContainerId)
        document.body.appendChild(node)
    }
    var loadSwfAndDetectFonts = function (done, options) {
        var hiddenCallback = '___fp_swf_loaded'
        window[hiddenCallback] = function (fonts) {
            done(fonts)
        }
        var id = options.fonts.swfContainerId
        addFlashDivNode()
        var flashvars = {onReady: hiddenCallback}
        var flashparams = {allowScriptAccess: 'always', menu: 'false'}
        window.swfobject.embedSWF(options.fonts.swfPath, id, '1', '1', '9.0.0', false, flashvars, flashparams, {})
    }
    var getWebglCanvas = function () {
        var canvas = document.createElement('canvas')
        var gl = null
        try {
            gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl')
        } catch (e) { /* squelch */
        }
        if (!gl) {
            gl = null
        }
        return gl
    }
    var loseWebglContext = function (context) {
        var loseContextExtension = context.getExtension('WEBGL_lose_context')
        if (loseContextExtension != null) {
            loseContextExtension.loseContext()
        }
    }

    var components = [
        {key: 'userAgent', getData: UserAgent},
        {key: 'webdriver', getData: webdriver},
        {key: 'language', getData: languageKey},
        {key: 'colorDepth', getData: colorDepthKey},
        {key: 'deviceMemory', getData: deviceMemoryKey},
        {key: 'pixelRatio', getData: pixelRatioKey},
        {key: 'hardwareConcurrency', getData: hardwareConcurrencyKey},
        {key: 'screenResolution', getData: screenResolutionKey},
        {key: 'availableScreenResolution', getData: availableScreenResolutionKey},
        {key: 'timezoneOffset', getData: timezoneOffset},
        {key: 'timezone', getData: timezone},
        {key: 'sessionStorage', getData: sessionStorageKey},
        {key: 'localStorage', getData: localStorageKey},
        {key: 'indexedDb', getData: indexedDbKey},
        {key: 'addBehavior', getData: addBehaviorKey},
        {key: 'openDatabase', getData: openDatabaseKey},
        {key: 'cpuClass', getData: cpuClassKey},
        {key: 'platform', getData: platformKey},
        {key: 'doNotTrack', getData: doNotTrackKey},
        {key: 'plugins', getData: pluginsComponent},
        {key: 'canvas', getData: canvasKey},
        {key: 'webgl', getData: webglKey},
        {key: 'webglVendorAndRenderer', getData: webglVendorAndRendererKey},
        {key: 'adBlock', getData: adBlockKey},
        {key: 'hasLiedLanguages', getData: hasLiedLanguagesKey},
        {key: 'hasLiedResolution', getData: hasLiedResolutionKey},
        {key: 'hasLiedOs', getData: hasLiedOsKey},
        {key: 'hasLiedBrowser', getData: hasLiedBrowserKey},
        {key: 'touchSupport', getData: touchSupportKey},
        {key: 'fonts', getData: jsFontsKey, pauseBefore: true},
        {key: 'fontsFlash', getData: flashFontsKey, pauseBefore: true},
        {key: 'audio', getData: audioKey},
        {key: 'enumerateDevices', getData: enumerateDevicesKey}
    ]

    var Fingerprint2 = function (options) {
        throw new Error("'new Fingerprint()' is deprecated, see https://github.com/Valve/fingerprintjs2#upgrade-guide-from-182-to-200")
    }

    Fingerprint2.get = function (options, callback) {
        if (!callback) {
            callback = options
            options = {}
        } else if (!options) {
            options = {}
        }
        extendSoft(options, defaultOptions)
        options.components = options.extraComponents.concat(components)

        var keys = {
            data: [],
            addPreprocessedComponent: function (key, value) {
                if (typeof options.preprocessor === 'function') {
                    value = options.preprocessor(key, value)
                }
                keys.data.push({key: key, value: value})
            }
        }

        var i = -1
        var chainComponents = function (alreadyWaited) {
            i += 1
            if (i >= options.components.length) { // on finish
                callback(keys.data)
                return
            }
            var component = options.components[i]

            if (options.excludes[component.key]) {
                chainComponents(false) // skip
                return
            }

            if (!alreadyWaited && component.pauseBefore) {
                i -= 1
                setTimeout(function () {
                    chainComponents(true)
                }, 1)
                return
            }

            try {
                component.getData(function (value) {
                    keys.addPreprocessedComponent(component.key, value)
                    chainComponents(false)
                }, options)
            } catch (error) {
                // main body error
                keys.addPreprocessedComponent(component.key, String(error))
                chainComponents(false)
            }
        }

        chainComponents(false)
    }

    Fingerprint2.getPromise = function (options) {
        return new Promise(function (resolve, reject) {
            Fingerprint2.get(options, resolve)
        })
    }

    Fingerprint2.getV18 = function (options, callback) {
        if (callback == null) {
            callback = options
            options = {}
        }
        return Fingerprint2.get(options, function (components) {
            var newComponents = []
            for (var i = 0; i < components.length; i++) {
                var component = components[i]
                if (component.value === (options.NOT_AVAILABLE || 'not available')) {
                    newComponents.push({key: component.key, value: 'unknown'})
                } else if (component.key === 'plugins') {
                    newComponents.push({
                        key: 'plugins',
                        value: map(component.value, function (p) {
                            var mimeTypes = map(p[2], function (mt) {
                                if (mt.join) {
                                    return mt.join('~')
                                }
                                return mt
                            }).join(',')
                            return [p[0], p[1], mimeTypes].join('::')
                        })
                    })
                } else if (['canvas', 'webgl'].indexOf(component.key) !== -1 && Array.isArray(component.value)) {
                    // sometimes WebGL returns error in headless browsers (during CI testing for example)
                    // so we need to join only if the values are array
                    newComponents.push({key: component.key, value: component.value.join('~')})
                } else if (['sessionStorage', 'localStorage', 'indexedDb', 'addBehavior', 'openDatabase'].indexOf(component.key) !== -1) {
                    if (component.value) {
                        newComponents.push({key: component.key, value: 1})
                    } else {
                        // skip
                        continue
                    }
                } else {
                    if (component.value) {
                        newComponents.push(component.value.join ? {
                            key: component.key,
                            value: component.value.join(';')
                        } : component)
                    } else {
                        newComponents.push({key: component.key, value: component.value})
                    }
                }
            }
            var murmur = x64hash128(map(newComponents, function (component) {
                return component.value
            }).join('~~~'), 31)
            callback(murmur, newComponents)
        })
    }

    Fingerprint2.x64hash128 = x64hash128
    Fingerprint2.VERSION = '2.1.2'
    return Fingerprint2
})

const PROCESS_UNIQUE = (typeof globalThis.process === 'object' && globalThis.process.pid) || globalThis.crypto.getRandomValues(new Uint8Array(5))
let cc = Math.floor(Math.random() * 0xFFFFFF)

function _next() {
    cc += 1 % 0xFFFFFF
    return cc
}

function _toHex(view) {
    const arr = []
    const len = view.byteLength
    for (let i = 0; i < len; i++) {
        arr.push(view.getUint8(i).toString(16).padStart(2, '0'))
    }

    return arr.join('')
}

/**
 * Generate an ID (24 character hex string)
 *
 * @returns {string} returns a valid 24 character ObjectID hex string.
 */
function hexID() {
    const time = ~~(Date.now() / 1000)
    const inc = _next()
    const buffer = new ArrayBuffer(12)
    const view = new DataView(buffer)

    // 4-byte timestamp
    view.setUint8(3, time & 0xFF)
    view.setUint8(2, (time >> 8) & 0xFF)
    view.setUint8(1, (time >> 16) & 0xFF)
    view.setUint8(0, (time >> 24) & 0xFF)

    // 5-byte process unique
    view.setUint8(4, PROCESS_UNIQUE[0])
    view.setUint8(5, PROCESS_UNIQUE[1])
    view.setUint8(6, PROCESS_UNIQUE[2])
    view.setUint8(7, PROCESS_UNIQUE[3])
    view.setUint8(8, PROCESS_UNIQUE[4])

    // 3-byte counter
    view.setUint8(11, inc & 0xFF)
    view.setUint8(10, (inc >> 8) & 0xFF)
    view.setUint8(9, (inc >> 16) & 0xFF)

    return _toHex(view)
}
/*console.log(roistat_visit);;*/
!function (e) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else {
        var f;
        "undefined" != typeof window ? f = window : "undefined" != typeof global ? f = global : "undefined" != typeof self && (f = self), f.sbjs = e()
    }
}(
    function () {
        var define, module, exports;
        return (function e(t, n, r) {
            function s(o, u) {
                if (!n[o]) {
                    if (!t[o]) {
                        var a = typeof require == "function" && require;
                        if (!u && a) return a(o, !0);
                        if (i) return i(o, !0);
                        var f = new Error("Cannot find module '" + o + "'");
                        throw f.code = "MODULE_NOT_FOUND", f
                    }
                    var l = n[o] = {exports: {}};
                    t[o][0].call(l.exports, function (e) {
                        var n = t[o][1][e];
                        return s(n ? n : e)
                    }, l, l.exports, e, t, n, r)
                }
                return n[o].exports
            }

            var i = typeof require == "function" && require;
            for (var o = 0; o < r.length; o++) s(r[o]);
            return s
        })({
            1: [function (_dereq_, module, exports) {
                "use strict";

                var init = _dereq_('./init');

                var sbjs = {
                    init: function (prefs) {
                        this.get = init(prefs);
                        if (prefs && prefs.callback && typeof prefs.callback === 'function') {
                            prefs.callback(this.get);
                        }
                    }
                };

                module.exports = sbjs;
            }, {"./init": 6}], 2: [function (_dereq_, module, exports) {
                "use strict";

                var terms = _dereq_('./terms'),
                    utils = _dereq_('./helpers/utils');

                var data = {

                    containers: {
                        current: 'sbjs_current',
                        current_extra: 'sbjs_current_add',
                        first: 'sbjs_first',
                        first_extra: 'sbjs_first_add',
                        session: 'sbjs_session',
                        udata: 'sbjs_udata',
                        promocode: 'sbjs_promo'
                    },

                    service: {
                        migrations: 'sbjs_migrations'
                    },

                    delimiter: '|||',

                    aliases: {

                        main: {
                            type: 'typ',
                            source: 'src',
                            medium: 'mdm',
                            campaign: 'cmp',
                            content: 'cnt',
                            term: 'trm'
                        },

                        extra: {
                            fire_date: 'fd',
                            entrance_point: 'ep',
                            referer: 'rf',
                            hash: "hash"
                        },

                        session: {
                            pages_seen: 'pgs',
                            current_page: 'cpg'
                        },

                        udata: {
                            visits: 'vst',
                            ip: 'uip',
                            agent: 'uag'
                        },

                        promo: 'code'

                    },

                    pack: {

                        main: function (sbjs) {
                            return (
                                data.aliases.main.type + '=' + sbjs.type + data.delimiter +
                                data.aliases.main.source + '=' + sbjs.source + data.delimiter +
                                data.aliases.main.medium + '=' + sbjs.medium + data.delimiter +
                                data.aliases.main.campaign + '=' + sbjs.campaign + data.delimiter +
                                data.aliases.main.content + '=' + sbjs.content + data.delimiter +
                                data.aliases.main.term + '=' + sbjs.term + data.delimiter +
                                'hash=' + myhash
                            );
                        },

                        extra: function (timezone_offset) {
                            return (
                                data.aliases.extra.fire_date + '=' + utils.setDate(new Date, timezone_offset) + data.delimiter +
                                data.aliases.extra.entrance_point + '=' + document.location.href + data.delimiter +
                                data.aliases.extra.referer + '=' + (document.referrer || terms.none) + data.delimiter +
                                'hash=' + myhash
                            );
                        },

                        user: function (visits, user_ip) {
                            return (
                                data.aliases.udata.visits + '=' + visits + data.delimiter +
                                data.aliases.udata.ip + '=' + user_ip + data.delimiter +
                                data.aliases.udata.agent + '=' + navigator.userAgent
                            );
                        },

                        session: function (pages) {
                            return (
                                data.aliases.session.pages_seen + '=' + pages + data.delimiter +
                                data.aliases.session.current_page + '=' + document.location.href
                            );
                        },

                        promo: function (promo) {
                            return (
                                data.aliases.promo + '=' + utils.setLeadingZeroToInt(utils.randomInt(promo.min, promo.max), promo.max.toString().length)
                            );
                        }

                    }
                };

                module.exports = data;
            }, {"./helpers/utils": 5, "./terms": 9}], 3: [function (_dereq_, module, exports) {
                "use strict";

                var delimiter = _dereq_('../data').delimiter;

                module.exports = {

                    encodeData: function (s) {
                        return encodeURIComponent(s).replace(/\!/g, '%21')
                            .replace(/\~/g, '%7E')
                            .replace(/\*/g, '%2A')
                            .replace(/\'/g, '%27')
                            .replace(/\(/g, '%28')
                            .replace(/\)/g, '%29');
                    },

                    decodeData: function (s) {
                        try {
                            return decodeURIComponent(s).replace(/\%21/g, '!')
                                .replace(/\%7E/g, '~')
                                .replace(/\%2A/g, '*')
                                .replace(/\%27/g, "'")
                                .replace(/\%28/g, '(')
                                .replace(/\%29/g, ')');
                        } catch (err1) {
                            // try unescape for backward compatibility
                            try {
                                return unescape(s);
                            } catch (err2) {
                                return '';
                            }
                        }
                    },

                    set: function (name, value, minutes, domain, excl_subdomains) {
                        var expires, basehost;

                        if (minutes) {
                            var date = new Date();
                            date.setTime(date.getTime() + (minutes * 60 * 1000));
                            expires = '; expires=' + date.toGMTString();
                        } else {
                            expires = '';
                        }
                        if (domain && !excl_subdomains) {
                            basehost = ';domain=.' + domain;
                        } else {
                            basehost = '';
                        }
                        document.cookie = this.encodeData(name) + '=' + this.encodeData(value) + expires + basehost + '; path=/';
                    },

                    get: function (name) {
                        var nameEQ = this.encodeData(name) + '=',
                            ca = document.cookie.split(';');

                        for (var i = 0; i < ca.length; i++) {
                            var c = ca[i];
                            while (c.charAt(0) === ' ') {
                                c = c.substring(1, c.length);
                            }
                            if (c.indexOf(nameEQ) === 0) {
                                return this.decodeData(c.substring(nameEQ.length, c.length));
                            }
                        }
                        return null;
                    },

                    destroy: function (name, domain, excl_subdomains) {
                        this.set(name, '', -1, domain, excl_subdomains);
                    },

                    parse: function (yummy) {

                        var cookies = [],
                            data = {};

                        if (typeof yummy === 'string') {
                            cookies.push(yummy);
                        } else {
                            for (var prop in yummy) {
                                if (yummy.hasOwnProperty(prop)) {
                                    cookies.push(yummy[prop]);
                                }
                            }
                        }

                        for (var i1 = 0; i1 < cookies.length; i1++) {
                            var cookie_array;
                            data[this.unsbjs(cookies[i1])] = {};
                            if (this.get(cookies[i1])) {
                                cookie_array = this.get(cookies[i1]).split(delimiter);
                            } else {
                                cookie_array = [];
                            }
                            for (var i2 = 0; i2 < cookie_array.length; i2++) {
                                var tmp_array = cookie_array[i2].split('='),
                                    result_array = tmp_array.splice(0, 1);
                                result_array.push(tmp_array.join('='));
                                data[this.unsbjs(cookies[i1])][result_array[0]] = this.decodeData(result_array[1]);
                            }
                        }

                        return data;

                    },

                    unsbjs: function (string) {
                        return string.replace('sbjs_', '');
                    }

                };

            }, {"../data": 2}], 4: [function (_dereq_, module, exports) {
                "use strict";

                module.exports = {

                    parse: function (str) {
                        var o = this.parseOptions,
                            m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str),
                            uri = {},
                            i = 14;

                        while (i--) {
                            uri[o.key[i]] = m[i] || '';
                        }

                        uri[o.q.name] = {};
                        uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {
                            if ($1) {
                                uri[o.q.name][$1] = $2;
                            }
                        });

                        return uri;
                    },

                    parseOptions: {
                        strictMode: false,
                        key: ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'],
                        q: {
                            name: 'queryKey',
                            parser: /(?:^|&)([^&=]*)=?([^&]*)/g
                        },
                        parser: {
                            strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
                            loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
                        }
                    },

                    getParam: function (custom_params) {
                        var query_string = {},
                            query = custom_params ? custom_params : window.location.search.substring(1),
                            vars = query.split('&');

                        for (var i = 0; i < vars.length; i++) {
                            var pair = vars[i].split('=');
                            if (typeof query_string[pair[0]] === 'undefined') {
                                query_string[pair[0]] = pair[1];
                            } else if (typeof query_string[pair[0]] === 'string') {
                                var arr = [query_string[pair[0]], pair[1]];
                                query_string[pair[0]] = arr;
                            } else {
                                query_string[pair[0]].push(pair[1]);
                            }
                        }
                        return query_string;
                    },

                    getHost: function (request) {
                        return this.parse(request).host.replace('www.', '');
                    }

                };
            }, {}], 5: [function (_dereq_, module, exports) {
                "use strict";

                module.exports = {

                    escapeRegexp: function (string) {
                        return string.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                    },

                    setDate: function (date, offset) {
                        var utc_offset = date.getTimezoneOffset() / 60,
                            now_hours = date.getHours(),
                            custom_offset = offset || offset === 0 ? offset : -utc_offset;

                        date.setHours(now_hours + utc_offset + custom_offset);

                        var year = date.getFullYear(),
                            month = this.setLeadingZeroToInt(date.getMonth() + 1, 2),
                            day = this.setLeadingZeroToInt(date.getDate(), 2),
                            hour = this.setLeadingZeroToInt(date.getHours(), 2),
                            minute = this.setLeadingZeroToInt(date.getMinutes(), 2),
                            second = this.setLeadingZeroToInt(date.getSeconds(), 2);

                        return (year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second);
                    },

                    setLeadingZeroToInt: function (num, size) {
                        var s = num + '';
                        while (s.length < size) {
                            s = '0' + s;
                        }
                        return s;
                    },

                    randomInt: function (min, max) {
                        return Math.floor(Math.random() * (max - min + 1)) + min;
                    }

                };

            }, {}], 6: [function (_dereq_, module, exports) {
                "use strict";

                var data = _dereq_('./data'),
                    terms = _dereq_('./terms'),
                    cookies = _dereq_('./helpers/cookies'),
                    uri = _dereq_('./helpers/uri'),
                    utils = _dereq_('./helpers/utils'),
                    params = _dereq_('./params'),
                    migrations = _dereq_('./migrations');

                module.exports = function (prefs) {

                    var p = params.fetch(prefs);
                    var get_param = uri.getParam();
                    var domain = p.domain.host,
                        isolate = p.domain.isolate,
                        lifetime = p.lifetime;

                    migrations.go(lifetime, domain, isolate);

                    var __sbjs_type,
                        __sbjs_source,
                        __sbjs_medium,
                        __sbjs_campaign,
                        __sbjs_content,
                        __sbjs_term;

                    function mainData() {
                        var sbjs_data;
                        if (
                            typeof get_param.utm_source !== 'undefined' ||
                            typeof get_param.utm_medium !== 'undefined' ||
                            typeof get_param.utm_campaign !== 'undefined' ||
                            typeof get_param.utm_content !== 'undefined' ||
                            typeof get_param.utm_term !== 'undefined' ||
                            typeof get_param.gclid !== 'undefined' ||
                            typeof get_param.yclid !== 'undefined' ||
                            typeof get_param[p.campaign_param] !== 'undefined' ||
                            typeof get_param[p.term_param] !== 'undefined' ||
                            typeof get_param[p.content_param] !== 'undefined'
                        ) {
                            setFirstAndCurrentExtraData();
                            sbjs_data = getData(terms.traffic.utm);
                            console.log(terms.traffic.utm)
                        } else if (checkReferer(terms.traffic.organic)) {
                            setFirstAndCurrentExtraData();
                            sbjs_data = getData(terms.traffic.organic);
                        } else if (checkReferer(terms.traffic.referral)) {
                            setFirstAndCurrentExtraData();
                            sbjs_data = getData(terms.traffic.referral);
                        } else if (!cookies.get(data.containers.first) && !cookies.get(data.containers.current)) {
                            setFirstAndCurrentExtraData();
                            sbjs_data = getData(terms.traffic.typein);
                        } else {
                            return cookies.get(data.containers.current);
                        }

                        return sbjs_data;
                    }

                    function getData(type) {

                        switch (type) {

                            case terms.traffic.utm:

                                __sbjs_type = terms.traffic.utm;

                                if (typeof get_param.utm_source !== 'undefined') {
                                    __sbjs_source = get_param.utm_source;
                                } else if (typeof get_param.gclid !== 'undefined') {
                                    __sbjs_source = 'google';
                                } else if (typeof get_param.yclid !== 'undefined') {
                                    __sbjs_source = 'yandex';
                                } else {
                                    __sbjs_source = terms.none;
                                }

                                if (typeof get_param.utm_medium !== 'undefined') {
                                    __sbjs_medium = get_param.utm_medium;
                                } else if (typeof get_param.gclid !== 'undefined') {
                                    __sbjs_medium = 'cpc';
                                } else if (typeof get_param.yclid !== 'undefined') {
                                    __sbjs_medium = 'cpc';
                                } else {
                                    __sbjs_medium = terms.none;
                                }

                                if (typeof get_param.utm_campaign !== 'undefined') {
                                    __sbjs_campaign = get_param.utm_campaign;
                                } else if (typeof get_param[p.campaign_param] !== 'undefined') {
                                    __sbjs_campaign = get_param[p.campaign_param];
                                } else if (typeof get_param.gclid !== 'undefined') {
                                    __sbjs_campaign = 'google_cpc';
                                } else if (typeof get_param.yclid !== 'undefined') {
                                    __sbjs_campaign = 'yandex_cpc';
                                } else {
                                    __sbjs_campaign = terms.none;
                                }

                                if (typeof get_param.utm_content !== 'undefined') {
                                    __sbjs_content = get_param.utm_content;
                                } else if (typeof get_param[p.content_param] !== 'undefined') {
                                    __sbjs_content = get_param[p.content_param];
                                } else {
                                    __sbjs_content = terms.none;
                                }

                                if (typeof get_param.utm_term !== 'undefined') {
                                    __sbjs_term = get_param.utm_term;
                                } else if (typeof get_param[p.term_param] !== 'undefined') {
                                    __sbjs_term = get_param[p.term_param];
                                } else {
                                    __sbjs_term = getUtmTerm() || terms.none;
                                }

                                break;

                            case terms.traffic.organic:
                                __sbjs_type = terms.traffic.organic;
                                __sbjs_source = __sbjs_source || uri.getHost(document.referrer);
                                __sbjs_medium = terms.referer.organic;
                                __sbjs_campaign = terms.none;
                                __sbjs_content = terms.none;
                                __sbjs_term = terms.none;
                                break;

                            case terms.traffic.referral:
                                __sbjs_type = terms.traffic.referral;
                                __sbjs_source = __sbjs_source || uri.getHost(document.referrer);
                                __sbjs_medium = __sbjs_medium || terms.referer.referral;
                                __sbjs_campaign = terms.none;
                                __sbjs_content = uri.parse(document.referrer).path;
                                __sbjs_term = terms.none;
                                break;

                            case terms.traffic.typein:
                                __sbjs_type = terms.traffic.typein;
                                __sbjs_source = p.typein_attributes.source;
                                __sbjs_medium = p.typein_attributes.medium;
                                __sbjs_campaign = terms.none;
                                __sbjs_content = terms.none;
                                __sbjs_term = terms.none;
                                break;

                            default:
                                __sbjs_type = terms.oops;
                                __sbjs_source = terms.oops;
                                __sbjs_medium = terms.oops;
                                __sbjs_campaign = terms.oops;
                                __sbjs_content = terms.oops;
                                __sbjs_term = terms.oops;
                        }
                        var sbjs_data = {
                            type: __sbjs_type,
                            source: __sbjs_source,
                            medium: __sbjs_medium,
                            campaign: __sbjs_campaign,
                            content: __sbjs_content,
                            term: __sbjs_term
                        };

                        return data.pack.main(sbjs_data);

                    }

                    function getUtmTerm() {
                        var referer = document.referrer;
                        if (get_param.utm_term) {
                            return get_param.utm_term;
                        } else if (referer && uri.parse(referer).host && uri.parse(referer).host.match(/^(?:.*\.)?yandex\..{2,9}$/i)) {
                            try {
                                return uri.getParam(uri.parse(document.referrer).query).text;
                            } catch (err) {
                                return false;
                            }
                        } else {
                            return false;
                        }
                    }

                    function checkReferer(type) {
                        var referer = document.referrer;
                        switch (type) {
                            case terms.traffic.organic:
                                return (!!referer && checkRefererHost(referer) && isOrganic(referer));
                            case terms.traffic.referral:
                                return (!!referer && checkRefererHost(referer) && isReferral(referer));
                            default:
                                return false;
                        }
                    }

                    function checkRefererHost(referer) {
                        if (p.domain) {
                            if (!isolate) {
                                var host_regex = new RegExp('^(?:.*\\.)?' + utils.escapeRegexp(domain) + '$', 'i');
                                return !(uri.getHost(referer).match(host_regex));
                            } else {
                                return (uri.getHost(referer) !== uri.getHost(domain));
                            }
                        } else {
                            return (uri.getHost(referer) !== uri.getHost(document.location.href));
                        }
                    }

                    function isOrganic(referer) {

                        var y_host = 'yandex',
                            y_param = 'text',
                            g_host = 'google';

                        var y_host_regex = new RegExp('^(?:.*\\.)?' + utils.escapeRegexp(y_host) + '\\..{2,9}$'),
                            y_param_regex = new RegExp('.*' + utils.escapeRegexp(y_param) + '=.*'),
                            g_host_regex = new RegExp('^(?:www\\.)?' + utils.escapeRegexp(g_host) + '\\..{2,9}$');

                        if (
                            !!uri.parse(referer).query &&
                            !!uri.parse(referer).host.match(y_host_regex) &&
                            !!uri.parse(referer).query.match(y_param_regex)
                        ) {
                            __sbjs_source = y_host;

                            return true;
                        } else if (!!uri.parse(referer).host.match(g_host_regex)) {
                            __sbjs_source = g_host;
                            return true;
                        } else if (!!uri.parse(referer).query) {
                            for (var i = 0; i < p.organics.length; i++) {
                                if (
                                    uri.parse(referer).host.match(new RegExp('^(?:.*\\.)?' + utils.escapeRegexp(p.organics[i].host) + '$', 'i')) &&
                                    uri.parse(referer).query.match(new RegExp('.*' + utils.escapeRegexp(p.organics[i].param) + '=.*', 'i'))
                                ) {
                                    __sbjs_source = p.organics[i].display || p.organics[i].host;
                                    return true;
                                }
                                if (i + 1 === p.organics.length) {
                                    return false;
                                }
                            }
                        } else {
                            return false;
                        }
                    }

                    function isReferral(referer) {
                        if (p.referrals.length > 0) {
                            for (var i = 0; i < p.referrals.length; i++) {
                                if (uri.parse(referer).host.match(new RegExp('^(?:.*\\.)?' + utils.escapeRegexp(p.referrals[i].host) + '$', 'i'))) {
                                    __sbjs_source = p.referrals[i].display || p.referrals[i].host;
                                    __sbjs_medium = p.referrals[i].medium || terms.referer.referral;
                                    return true;
                                }
                                if (i + 1 === p.referrals.length) {
                                    __sbjs_source = uri.getHost(referer);
                                    return true;
                                }
                            }
                        } else {
                            __sbjs_source = uri.getHost(referer);
                            return true;
                        }
                    }

                    function setFirstAndCurrentExtraData() {
                        cookies.set(data.containers.current_extra, data.pack.extra(p.timezone_offset), lifetime, domain, isolate);

                        if (!cookies.get(data.containers.first_extra)) {
                            cookies.set(data.containers.first_extra, data.pack.extra(p.timezone_offset), lifetime, domain, isolate);
                        }
                    }

                    (function setData() {
                        console.log(data.pack.extra(p.timezone_offset));
                        // Main data
                        cookies.set(data.containers.current, mainData(), lifetime, domain, isolate);
                        if (!cookies.get(data.containers.first)) {
                            cookies.set(data.containers.first, cookies.get(data.containers.current), lifetime, domain, isolate);
                        }

                        // User data
                        var visits, udata;
                        if (!cookies.get(data.containers.udata)) {
                            visits = 1;
                            udata = data.pack.user(visits, p.user_ip);
                        } else {
                            visits = parseInt(cookies.parse(data.containers.udata)[cookies.unsbjs(data.containers.udata)][data.aliases.udata.visits]) || 1;
                            visits = cookies.get(data.containers.session) ? visits : visits + 1;
                            udata = data.pack.user(visits, p.user_ip);
                        }
                        cookies.set(data.containers.udata, udata, lifetime, domain, isolate);

                        // Session
                        var pages_count;
                        if (!cookies.get(data.containers.session)) {
                            pages_count = 1;
                        } else {
                            pages_count = parseInt(cookies.parse(data.containers.session)[cookies.unsbjs(data.containers.session)][data.aliases.session.pages_seen]) || 1;
                            pages_count += 1;
                        }
                        cookies.set(data.containers.session, data.pack.session(pages_count), p.session_length, domain, isolate);

                        // Promocode
                        if (p.promocode && !cookies.get(data.containers.promocode)) {
                            cookies.set(data.containers.promocode, data.pack.promo(p.promocode), lifetime, domain, isolate);
                        }

                    })();

                    return cookies.parse(data.containers);

                };
            }, {
                "./data": 2,
                "./helpers/cookies": 3,
                "./helpers/uri": 4,
                "./helpers/utils": 5,
                "./migrations": 7,
                "./params": 8,
                "./terms": 9
            }], 7: [function (_dereq_, module, exports) {
                "use strict";

                var data = _dereq_('./data'),
                    cookies = _dereq_('./helpers/cookies');

                module.exports = {

                    go: function (lifetime, domain, isolate) {

                        var migrate = this.migrations,
                            _with = {l: lifetime, d: domain, i: isolate};

                        var i;

                        if (!cookies.get(data.containers.first) && !cookies.get(data.service.migrations)) {

                            var mids = [];
                            for (i = 0; i < migrate.length; i++) {
                                mids.push(migrate[i].id);
                            }

                            var advance = '';
                            for (i = 0; i < mids.length; i++) {
                                advance += mids[i] + '=1';
                                if (i < mids.length - 1) {
                                    advance += data.delimiter;
                                }
                            }
                            cookies.set(data.service.migrations, advance, _with.l, _with.d, _with.i);

                        } else if (!cookies.get(data.service.migrations)) {

                            // We have only one migration for now, so just
                            for (i = 0; i < migrate.length; i++) {
                                migrate[i].go(migrate[i].id, _with);
                            }

                        }

                    },

                    migrations: [

                        {
                            id: '1418474375998',
                            version: '1.0.0-beta',
                            go: function (mid, _with) {

                                var success = mid + '=1',
                                    fail = mid + '=0';

                                var safeReplace = function ($0, $1, $2) {
                                    return ($1 || $2 ? $0 : data.delimiter);
                                };

                                try {

                                    // Switch delimiter and renew cookies
                                    var _in = [];
                                    for (var prop in data.containers) {
                                        if (data.containers.hasOwnProperty(prop)) {
                                            _in.push(data.containers[prop]);
                                        }
                                    }

                                    for (var i = 0; i < _in.length; i++) {
                                        if (cookies.get(_in[i])) {
                                            var buffer = cookies.get(_in[i]).replace(/(\|)?\|(\|)?/g, safeReplace);
                                            cookies.destroy(_in[i], _with.d, _with.i);
                                            cookies.destroy(_in[i], _with.d, !_with.i);
                                            cookies.set(_in[i], buffer, _with.l, _with.d, _with.i);
                                        }
                                    }

                                    // Update `session`
                                    if (cookies.get(data.containers.session)) {
                                        cookies.set(data.containers.session, data.pack.session(0), _with.l, _with.d, _with.i);
                                    }

                                    // Yay!
                                    cookies.set(data.service.migrations, success, _with.l, _with.d, _with.i);

                                } catch (err) {
                                    // Oops
                                    cookies.set(data.service.migrations, fail, _with.l, _with.d, _with.i);
                                }
                            }
                        }

                    ]

                };
            }, {"./data": 2, "./helpers/cookies": 3}], 8: [function (_dereq_, module, exports) {
                "use strict";

                var terms = _dereq_('./terms'),
                    uri = _dereq_('./helpers/uri');

                module.exports = {

                    fetch: function (prefs) {

                        var user = prefs || {},
                            params = {};

                        // Set `lifetime of the cookie` in months
                        params.lifetime = this.validate.checkFloat(user.lifetime) || 6;
                        params.lifetime = parseInt(params.lifetime * 30 * 24 * 60);

                        // Set `session length` in minutes
                        params.session_length = this.validate.checkInt(user.session_length) || 30;

                        // Set `timezone offset` in hours
                        params.timezone_offset = this.validate.checkInt(user.timezone_offset);

                        // Set `campaign param` for AdWords links
                        params.campaign_param = user.campaign_param || false;

                        // Set `term param` and `content param` for AdWords links
                        params.term_param = user.term_param || false;
                        params.content_param = user.content_param || false;

                        // Set `user ip`
                        params.user_ip = user.user_ip || terms.none;

                        // Set `promocode`
                        if (user.promocode) {
                            params.promocode = {};
                            params.promocode.min = parseInt(user.promocode.min) || 100000;
                            params.promocode.max = parseInt(user.promocode.max) || 999999;
                        } else {
                            params.promocode = false;
                        }

                        // Set `typein attributes`
                        if (user.typein_attributes && user.typein_attributes.source && user.typein_attributes.medium) {
                            params.typein_attributes = {};
                            params.typein_attributes.source = user.typein_attributes.source;
                            params.typein_attributes.medium = user.typein_attributes.medium;
                        } else {
                            params.typein_attributes = {source: '(direct)', medium: '(none)'};
                        }

                        // Set `domain`
                        if (user.domain && this.validate.isString(user.domain)) {
                            params.domain = {host: user.domain, isolate: false};
                        } else if (user.domain && user.domain.host) {
                            params.domain = user.domain;
                        } else {
                            params.domain = {host: uri.getHost(document.location.hostname), isolate: false};
                        }

                        // Set `referral sources`
                        params.referrals = [];

                        if (user.referrals && user.referrals.length > 0) {
                            for (var ir = 0; ir < user.referrals.length; ir++) {
                                if (user.referrals[ir].host) {
                                    params.referrals.push(user.referrals[ir]);
                                }
                            }
                        }

                        // Set `organic sources`
                        params.organics = [];

                        if (user.organics && user.organics.length > 0) {
                            for (var io = 0; io < user.organics.length; io++) {
                                if (user.organics[io].host && user.organics[io].param) {
                                    params.organics.push(user.organics[io]);
                                }
                            }
                        }

                        params.organics.push({host: 'bing.com', param: 'q', display: 'bing'});
                        params.organics.push({host: 'yahoo.com', param: 'p', display: 'yahoo'});
                        params.organics.push({host: 'about.com', param: 'q', display: 'about'});
                        params.organics.push({host: 'aol.com', param: 'q', display: 'aol'});
                        params.organics.push({host: 'ask.com', param: 'q', display: 'ask'});
                        params.organics.push({host: 'globososo.com', param: 'q', display: 'globo'});
                        params.organics.push({host: 'go.mail.ru', param: 'q', display: 'go.mail.ru'});
                        params.organics.push({host: 'rambler.ru', param: 'query', display: 'rambler'});
                        params.organics.push({host: 'tut.by', param: 'query', display: 'tut.by'});

                        params.referrals.push({host: 't.co', display: 'twitter.com'});
                        params.referrals.push({host: 'plus.url.google.com', display: 'plus.google.com'});


                        return params;

                    },

                    validate: {

                        checkFloat: function (v) {
                            return v && this.isNumeric(parseFloat(v)) ? parseFloat(v) : false;
                        },

                        checkInt: function (v) {
                            return v && this.isNumeric(parseInt(v)) ? parseInt(v) : false;
                        },

                        isNumeric: function (v) {
                            return !isNaN(v);
                        },

                        isString: function (v) {
                            return Object.prototype.toString.call(v) === '[object String]';
                        }

                    }

                };
            }, {"./helpers/uri": 4, "./terms": 9}], 9: [function (_dereq_, module, exports) {
                "use strict";

                module.exports = {

                    traffic: {
                        utm: 'utm',
                        organic: 'organic',
                        referral: 'referral',
                        typein: 'typein'
                    },

                    referer: {
                        referral: 'referral',
                        organic: 'organic',
                        social: 'social'
                    },

                    none: '(none)',
                    oops: '(Houston, we have a problem)'

                };

            }, {}]
        }, {}, [1])(1)
    });
//console.log(new Date());
/*MODULE INIT*/
var NEIROS_METRIKA_ID = get_cookie("my_metrika_id");

var UNIQ_NEIROS_ID = uniqId('');
var olev_phone_track = get_cookie("olev_phone_track");
var olev_phone_track2 = get_cookie("olev_phone_track2");
var hasConsole = typeof console !== "undefined"
var claintidarr = [];
var params_neiros = get_param_neiros();
var params_neiros_search = params_neiros['neiros'];
var reload_page = 0;
var storage_key = localStorage.getItem('page');
var ref = localStorage.getItem('refer');
if (storage_key == window.location.href && ref == document.referrer) {
    reload_page = 1;
}
var CURRENT={};
var PROMO={};
var neiros_show = get_cookie("neiros_show");
localStorage.setItem('page', window.location.href);
localStorage.setItem('refer', document.referrer);
var NeirosDatalayer = [];
var show_phone_neiros = 0;
var neiros_visit = get_cookie("neiros_visit_v1");
if (neiros_visit == null || (typeof neiros_visit === 'undefined')) {
//генерация и сохранение куки и переме

    neiros_visit = uniqId('');
    setCookie("neiros_visit_v1", neiros_visit, {
        expires: 87776000,
        path: '/'
    });

}
var _ga=get_cookie("_ga");
var neiros_last_vst = get_cookie("neiros_last_vst");
var is_first = get_cookie("is_first");
var roi_get = 0;
var roistat_visit = get_cookie_roistat("roistat_visit");
var session_count = 1;
if (NEIROS_METRIKA_ID === 'null' || NEIROS_METRIKA_ID === null) {
//генерация и сохранение куки и переменной
    if (get_cookie("session_count")) {
        session_count = Number(get_cookie("session_count")) + 1;
        setCookie("session_count", session_count, {
            expires: 87776000,
            path: '/'
        });
    } else {
        session_count = 1;
        setCookie("session_count", session_count, {
            expires: 87776000,
            path: '/'
        });
    }
    NEIROS_METRIKA_ID = uniqId('');
    setCookie("my_metrika_id", NEIROS_METRIKA_ID, {
        expires: 1800,
        path: '/'
    });
}
var myhash = generate("xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx");
if (typeof params_neiros_search === 'undefined') {

    params_neiros_search = '0';
}
var _ym_uid = get_cookie("_ym_uid");
var _gid = get_cookie("_ga");
if (_gid) {
    _gid = _gid.split('.');
    _gid = _gid[2] + '.' + _gid[3];
}

var olev_time_track = get_cookie("olev_time_track");


if (get_cookie("olev_time_track") == null) {
    tim = time();
    setCookie("olev_time_track", tim, {
        expires: 900,
        path: '/'
    });
    olev_time_track = tim;

}

function get_param_neiros() {
    return window.location.search
        .replace('?', '')
        .split('&')
        .reduce(
            function (p, e) {
                var a = e.split('=');
                p[decodeURIComponent(a[0])] = decodeURIComponent(a[1]);
                return p;
            },
            {}
        );
}

function set_new_neorps_metrika() {
    setCookie("my_metrika_id", 1, {
        expires: -1
    })
    NEIROS_METRIKA_ID = uniqId('');
    setCookie("my_metrika_id", NEIROS_METRIKA_ID, {
        expires: 1800,
        path: '/'
    })
    send_new_metrika(1);

}

function get_cookie_roistat(cookie_name) {
    var results = document.cookie.match('(^|;) ?' + cookie_name + '=([^;]*)(;|$)');

    if (results) {
        roi_get = 1;
        return (unescape(results[2]));
    } else {
        roi_get = 1;
        return null;
    }
}

function uniqId(prefix) {
   return hexID();
}

function generate(str) {
    return str.replace(/[xy]/g, function (c) {
        var r = Math.random() * 16 | 0;
        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);
    });
}

function in_array(what, where) {

    for (var i = 0; i < where.length; i++)

        if (what == where[i])

            return 1;

    return 0;

}

function setCookie(name, value, options) {
    options = options || {};

    var expires = options.expires;

    if (typeof expires == "number" && expires) {
        var d = new Date();
        d.setTime(d.getTime() + expires * 1000);
        expires = options.expires = d;
    }
    if (expires && expires.toUTCString) {
        options.expires = expires.toUTCString();
    }

    value = encodeURIComponent(value);

    var updatedCookie = name + "=" + value;

    for (var propName in options) {
        updatedCookie += "; " + propName;
        var propValue = options[propName];
        if (propValue !== true) {
            updatedCookie += "=" + propValue;
        }
    }

    document.cookie = updatedCookie ;
}


/*kviz*/
	var kvizarray = [];
function get_data_kviz(ARRAY){

id = ARRAY[0];
ARRAY = ARRAY[1];

var active = ARRAY.step5.active
var everyday = ARRAY.step6.everyday
var on_off = ARRAY.step6.on_off
var color = ARRAY.step5.color
var text_color = ARRAY.step5.color_text
var event_ = ARRAY.step5.event
var icon = 'https://test.neiros.ru'+ARRAY.step5.icon
var linck = ARRAY.step5.linck
var position = ARRAY.step5.position
var text_label = ARRAY.step5['text-label'];
var rules_count  = 'none';

if(ARRAY.step6.time === '' || ARRAY.step6.time === null ){
	time_kviz = 10;
	}else{

		time_kviz = ARRAY.step6.time;
		}

if(ARRAY.step6.rules.length > 0){
URL_THIS_PAGE = document.location.href;
rules_count = 0;
for (var i = 0; i < ARRAY.step6.rules.length; i++){
    var obj = ARRAY.step6.rules[i];
    if(obj.pravilo === 'no_correct'){
    if(URL_THIS_PAGE !== obj.url){
    rules_count = 1;



    }
    }
    if(obj.pravilo === 'correct'){
    if(URL_THIS_PAGE === obj.url){
     rules_count = 1;


    }
    }

   if(obj.pravilo === 'like'){
    if (URL_THIS_PAGE.indexOf(obj.url) != -1) {
         rules_count = 1;

		}



    }
   if(obj.pravilo === 'not_like'){

        if (URL_THIS_PAGE.indexOf(obj.url) != -1) {

		}
        else{
         rules_count = 1;


        }



    }


}

}

if(rules_count === 'none' || rules_count > 0){
if(document.querySelector("div").classList.contains("neiros_kviz_container") === 0 || document.querySelector("div").classList.contains("neiros_kviz_container") === false){
;
var e = document.createElement("div");
e.className = "neiros_kviz_container";
var  window_wight = window.screen.availWidth;
neiros__kviz_cont = '';
if(window_wight <= 1200){
	neiros__kviz_cont = 'kviz-mobile-setup';
	}
if(active === 'Подключите виджет к своей кнопке'){
	e.innerHTML=`
<link href="https://test.neiros.ru/cdn/v1/kviz/neiroskviz.css" rel="stylesheet" type="text/css">
<div class="neiros__kviz_before_iframe_bg `+neiros__kviz_cont+` " style="display:none;">
<div id="neiros__kviz__before_iframe" class="neiros__kviz__before_iframe-class" ><div class="neiros__closet-icon-modal-kviz"></div>
<iframe id="neiros__kviz_iframe" src="https://quiz.id717890.7ci.ru/?id=`+id+`"  ></iframe>
</div>
</div>
`, document.body.appendChild(e);

kvizarray.push({id:id, i:1})
	}
	else{
type_btn = '';
if(active === 'Плавающий ярлык'){
		if(position === 'left-top' || position === 'left-down' || position === 'right-top' || position === 'right-down'){
						position = 'down-right';

			}
	type_btn = 'kviz-design-floating';
	}

e.innerHTML=`
<link href="https://test.neiros.ru/cdn/v1/kviz/neiroskviz.css" rel="stylesheet" type="text/css">

<div data-color="`+text_color+`" class="neiros__kviz_btn `+type_btn+` `+position+`" style="background: `+color+`;">
	 <span class="neiros__kviz_btn__img"> <img src="`+icon+`"> </span>
	 <div class="neiros__kviz_btn__text">`+text_label+`</div>
</div>
<div class="neiros__kviz_before_iframe_bg `+neiros__kviz_cont+`" style="display:none;">
<div id="neiros__kviz__before_iframe" class="neiros__kviz__before_iframe-class" ><div class="neiros__closet-icon-modal-kviz"></div>
<iframe id="neiros__kviz_iframe" src="https://quiz.id717890.7ci.ru/?id=`+id+`"  ></iframe>
</div>
</div>
`, document.body.appendChild(e);

kvizarray.push({id:id, i:2})
}



function ready_kviz(position,color){
kviz_btn = document.querySelector('.neiros__kviz_btn').offsetWidth;
if(position === 'down-right'){
document.querySelector(".neiros__kviz_btn").style.cssText = 'margin-left:0px; margin-right:0px; background: '+color+'; opacity:1;';
	}
if(position === 'down-center'){

	kviz_btn = kviz_btn/2;
	document.querySelector(".neiros__kviz_btn").style.cssText = 'margin-left:-'+kviz_btn+'; margin-right:0px; background: '+color+';opacity:1;';

	}
if(position === 'down-left'){
document.querySelector(".neiros__kviz_btn").style.cssText = 'margin-left:0px; margin-right:0px; background: '+color+';opacity:1;';
	}

if(position === 'left-down'){

	kviz_btn = kviz_btn/2;

document.querySelector(".neiros__kviz_btn").style.cssText = 'bottom:'+kviz_btn+'px; background: '+color+';transform-origin: 25% 0;transform: rotate(90deg);opacity:1;';
	}
if(position === 'left-top'){

	kviz_btn = kviz_btn/2;

document.querySelector(".neiros__kviz_btn").style.cssText = 'top:'+kviz_btn+'px; background: '+color+';transform-origin: 25% 0;transform: rotate(90deg);opacity:1;';
	}


if(position === 'right-top'){

	kviz_btn = kviz_btn/2;

document.querySelector(".neiros__kviz_btn").style.cssText = 'top:'+kviz_btn+'px; background: '+color+';transform-origin: 75% 0;transform: rotate(-90deg);opacity:1;';
	}

if(position === 'right-down'){

	kviz_btn = kviz_btn/2;

document.querySelector(".neiros__kviz_btn").style.cssText = 'bottom:'+kviz_btn+'px; background: '+color+';transform-origin: 75% 0;transform: rotate(-90deg);opacity:1;';
	}

}
if(active != 'Подключите виджет к своей кнопке'){
setTimeout(ready_kviz, 100, position,color);
}
timer_page_neiros_kviz = 0
if(on_off === true){
if(everyday === true){
 if(!get_cookie("neiros_show_kviz")){
setInterval(function(){

if(Number(time_kviz) === timer_page_neiros_kviz){
	 setCookie("neiros_show_kviz", 1, {
        expires: 0,
        path: '/'
    });
	document.querySelector(".neiros__kviz_before_iframe_bg").style.display = 'block';
	}


timer_page_neiros_kviz = timer_page_neiros_kviz+1
  },1000);
 }
 }
 else{
setInterval(function(){

if(Number(time_kviz) === timer_page_neiros_kviz){

	document.querySelector(".neiros__kviz_before_iframe_bg").style.display = 'block';
	}


timer_page_neiros_kviz = timer_page_neiros_kviz+1
  },1000);

	 }
 }
mass_kviz = [];
if(linck === '' || linck === null){
	}
else{
if(active === 'Подключите виджет к своей кнопке'){
mass_kviz.forEach.call( document.querySelectorAll(linck), function(el) { el.addEventListener('click', function() {
document.querySelector(".neiros__kviz_before_iframe_bg").style.display = 'block';


}, false);
})
}
	}

mass_kviz.forEach.call( document.querySelectorAll('.neiros__kviz_btn'), function(el) { el.addEventListener('click', function() {
document.querySelector(".neiros__kviz_before_iframe_bg").style.display = 'block';

}, false);
})

mass_kviz.forEach.call( document.querySelectorAll('.neiros__closet-icon-modal-kviz'), function(el) { el.addEventListener('click', function() {
document.querySelector(".neiros__kviz_before_iframe_bg").style.display = 'none';

}, false);
})

function isVisible (ele) {
            return  ele.clientWidth !== 0 &&
                    ele.clientHeight !== 0 &&
                    ele.style.opacity !== 0 &&
                    ele.style.visibility !== 'hidden';
        }

document.onclick = function(e){

	t = isVisible(document.querySelector(".neiros__kviz_before_iframe_bg"));



	if(t === true){
		class2 = event.target.className;


    if ( class2 === 'neiros__kviz_before_iframe_bg ' ) {

   document.querySelector(".neiros__kviz_before_iframe_bg").style.display = 'none';
    };
	}
};


}
		}
   
	}



	
	





if(CBU_GLOBAL.config.widget.tip_31_kwiz){
widget_kviz = [];
widget_kviz_data = [];
widget_kviz = CBU_GLOBAL.config.widget.tip_31_kwiz;
widget_kviz_data = CBU_GLOBAL.config.widget.tip_31_kwiz_data;
wki = 1;

if(widget_kviz.length > 0){
	
/*widget_kviz.forEach(function(item, i, arr) {
get_data_kviz(item)
});*/
dataIdKviz = '';
Object.entries(widget_kviz_data).forEach(function(item, i, arr){
	
ARRAY = item[1]
rules_count = 'none';	
if(ARRAY.step6.rules.length > 0){
URL_THIS_PAGE = document.location.href;
rules_count = 0;
for (var i = 0; i < ARRAY.step6.rules.length; i++){
    var obj = ARRAY.step6.rules[i];
    if(obj.pravilo === 'no_correct'){
    if(URL_THIS_PAGE !== obj.url){
    rules_count = 1;



    }
    }
    if(obj.pravilo === 'correct'){
    if(URL_THIS_PAGE === obj.url){
     rules_count = 1;


    }
    }

   if(obj.pravilo === 'like'){
    if (URL_THIS_PAGE.indexOf(obj.url) != -1) {
         rules_count = 1;

		}



    }
   if(obj.pravilo === 'not_like'){

        if (URL_THIS_PAGE.indexOf(obj.url) != -1) {

		}
        else{
         rules_count = 1;


        }



    }


}
if(rules_count > 0){
	 dataIdKviz = item[0]
	}
}
	
	
	
	})

Object.entries(widget_kviz_data).forEach(function(item, i, arr){
	
	if(dataIdKviz === ''){
		if(kvizarray.length === 0){

	get_data_kviz(item)
}
		}
		else{
		if(item[0] === dataIdKviz){
						get_data_kviz(item)
			}
			
			
			}

	})


}

}
/*kviz*/



function get_cookie(cookie_name) {
    var results = document.cookie.match('(^|;) ?' + cookie_name + '=([^;]*)(;|$)');

    if (results)
        return (unescape(results[2]));
    else
        return null;
}

function time() {
    return parseInt(new Date().getTime() / 1000)
}

var sbjs;

try {


    var socket_neiros_io = io('https://cloud.neiros.ru:6007/', {
        secure: true,
        query: "session_id=" + UNIQ_NEIROS_ID +
            "&mk_id=" + CBU_GLOBAL.config.widget.mk_id
    });
} catch (e) {

}
var
    params = {
        URl: '' + document.URL + '',
        href: '' + window.location.href + '',
        referrer: '' + document.referrer + '',
        utm: '' + window.location.search.substr(1) + '',
        'session_count': session_count
    };



sbjs.init({
    lifetime: 3,
    session_length: 15,
    domain: {
        host: CBU_GLOBAL.config.site,
        isolate: true
    },
    referrals: [
        {
            host: 'away.vk.com',          // This is host from Twitter's `http referer`
            medium: 'social',      // This is custom `utm_medium`, you can drop it and it'll be `referral`
            display: 'vk.com' // And this is how you'll see it in the result data
        }],
    promocode: true,
    callback: placeData
});






function replacenumber(olev_phone_track2, olev_phone_track, class222) {
    /*document.body.innerHTML = document.body.innerHTML.replace(/+7(812)200-83-59/g, '12312312');*/
    xelsement = class222.split(',');
    if (xelsement.length > 0) {
        for (var ii = 0; ii < xelsement.length; ii++) {

            idelement = xelsement[ii].split('#')[1];
            classelement = xelsement[ii].split('.')[1];

            a = document.getElementsByClassName(classelement);
            /*	 console.log(a);*/
            for (var i = 0; i < a.length; i++) {
                /*console.log('найдкн класс');*/
                if (CBU_GLOBAL.config.widget.withurl == 1) {
                    a[i].innerHTML = '<a href="tel:' + olev_phone_track2 + '">' + olev_phone_track + '</a>';

                } else {
                    if (a[i].innerHTML != '') {
                        a[i].innerHTML = olev_phone_track;
                    }
                    if (a[i].hasAttribute('href')) {
                        a[i].setAttribute('href', 'tel:' + olev_phone_track)
                    } else {
                        if (a[i].closest('a')) {
                            if (a[i].closest('a').hasAttribute('href')) {
                                a[i].closest('a').setAttribute('href', 'tel:' + olev_phone_track)
                            }
                        }
                    }

                }
                DINAMICPHONE = olev_phone_track;
            }

            bn = document.getElementById(idelement);


            if (bn != null) {
                if (CBU_GLOBAL.config.widget.withurl == 1) {
                    bn.innerHTML = '<a href="tel:' + olev_phone_track2 + '">' + olev_phone_track + '</a>';
                } else {
                    bn.innerHTML = olev_phone_track;
                    if (bn.hasAttribute('href')) {
                        bn.setAttribute('href', 'tel:' + olev_phone_track)
                    }
                }

                DINAMICPHONE = olev_phone_track;
            }
        }

    }
}

function podmena_dinamic(phone1, phone2) {	    /*Определим динамика или статика*/


    /*старт подмены*/



    if (olev_phone_track === null) {

        setCookie("olev_phone_track", phone1, {
            expires: 900,
            path: '/'
        });
        setCookie("olev_phone_track2", phone2, {
            expires: 900,
            path: '/'
        });
        olev_phone_track = phone1;
        olev_phone_track2 = phone2;
    } else {
        setCookie("olev_phone_track", olev_phone_track, {
            expires: 900,
            path: '/'
        })
        setCookie("olev_phone_track2", olev_phone_track2, {
            expires: 900,
            path: '/'
        })


    }


    /**/

    if (olev_phone_track.length < 2) {
        setCookie("olev_phone_track", phone1, {
            expires: 900,
            path: '/'
        });
        setCookie("olev_phone_track2", phone2, {
            expires: 900,
            path: '/'
        });
        olev_phone_track = phone1;
        olev_phone_track2 = phone2;
    }
    if (olev_phone_track2.length < 2) {

        setCookie("olev_phone_track", phone1, {
            expires: 900,
            path: '/'
        });
        setCookie("olev_phone_track2", phone2, {
            expires: 900,
            path: '/'
        });
        olev_phone_track = phone1;
        olev_phone_track2 = phone2;
    }


    if (olev_phone_track2 == null) {
        setCookie("olev_phone_track", phone1, {
            expires: 900,
            path: '/'
        });
        setCookie("olev_phone_track2", phone2, {
            expires: 900,
            path: '/'
        });
        olev_phone_track = phone1;
        olev_phone_track2 = phone2;
    }


    mass = {olev_phone_track: olev_phone_track, olev_phone_track2: olev_phone_track2}
    return mass;

}

function send_new_metrika(rem){
    var body_new = 'neiros_visit=' + neiros_visit +
        '&neiros_last_vst=' + encodeURIComponent(neiros_last_vst) +
        '&url=' + encodeURIComponent(JSON.stringify(window.location.href)) +
        '&type=pageview'+
        '&_ym_uid=' + encodeURIComponent(JSON.stringify(_ym_uid)) +
        '&my_metrika_id=' + NEIROS_METRIKA_ID +
        '&reload_page=' + reload_page +
        '&session_id=' + UNIQ_NEIROS_ID +
        '&_gid=' + encodeURIComponent(JSON.stringify(_gid)) +
        '&olev_phone_track=' + encodeURIComponent(olev_phone_track) +
        '&olev_phone_track2=' + encodeURIComponent(olev_phone_track2) +
        '&roistat_visit=' + roistat_visit +
        '&params=' + encodeURIComponent(JSON.stringify(params)) +
        '&current=' + encodeURIComponent(JSON.stringify(CURRENT)) +
        '&promo=' + encodeURIComponent(JSON.stringify(PROMO))+
        '&key=' + CBU_GLOBAL.config.widget.key;


    include('https://test.neiros.ru/api/counter.js?'+body_new)
  
}
function placeData(sb) {
      CURRENT=sb.current;
      PROMO=sb.promo.code;
    send_new_metrika(0)

    is_static = 0;

    if (CBU_GLOBAL.config.widget.tip_2 == 1) {

        /*phone_static = CBU_GLOBAL.config.widget.phone_static;*/
        default_scenarii = 0;
        phone_array = CBU_GLOBAL.config.widget.tip_2_routing;
        phone_array2 = [];
        phone_array3 = [];
        for (i = 0; i < phone_array.length; i++) {
            if (phone_array[i].is_default == 1) {
                default_scenarii = 1;
                phone_array3.push(phone_array[i]);

            } else {
                if (phone_array[i].class_replace != null) {
                    if (phone_array[i].class_replace != '') {
                        if (phone_array[i].class_replace != '.') {
                            if (document.querySelector(phone_array[i].class_replace)) {
                                phone_array2.push(phone_array[i]);
                            }
                        }
                    }
                }
            }
        }


        if (phone_array2.length > 0) {
            phone_array = phone_array2;

        } else {
            phone_array = phone_array3;
        }


        if (document.querySelector('.js-city-select')) {

            document.querySelector('.js-city-select').addEventListener('click', function () {

                setCookie("olev_phone_track", 1, {
                    expires: -1
                })
                setCookie("olev_phone_track2", 1, {
                    expires: -1
                })
            });

        }

        if (document.querySelector('.popup_city ul li')) {

            $('.popup_city ul li').on('click', function () {

                setCookie("olev_phone_track", 1, {
                    expires: -1
                })
                setCookie("olev_phone_track2", 1, {
                    expires: -1
                })
            });

        }


        if (phone_array.length > 0) {
            dinamic_phone_array = phone_array.filter(function (phone_array) {
                return phone_array.type == "1"
            });

            static_phone_array = phone_array.filter(function (phone_array) {
                return phone_array.type == "2"
            });

            function statick_podmena_nomera() {
                current_new = sb.current.src;
                if (current_new.indexOf('yandex') > -1) {

                    if (current_new.indexOf('yabs.yandex.ru') > -1 || current_new.indexOf('direct.yandex.ru') > -1) {
                        sb.current.src = 'yandex'
                        sb.current.typ = 'yandex_direct'
                        sb.current.mdm = 'yandex_direct'
                    } else {
                        if (sb.current.typ != 'utm') {
                            sb.current.src = 'yandex'
                            sb.current.typ = 'organic'
                            sb.current.mdm = 'organic'
                        }
                    }

                }
                /*Статичиская подмена*/
                show_phone_neiros = 0;
                static_phone_array2 = static_phone_array.filter(function (static_phone_array) {
                    return static_phone_array.canals.length == 0
                });
                if (static_phone_array2.length > 0) {
                    if (static_phone_array2[0].class_replace !== null) {
                        mass_podmena_dinamic = podmena_dinamic(static_phone_array2[0].phone, static_phone_array2[0].phone2)
                        show_phone_neiros = 1;
                        replacenumber(mass_podmena_dinamic.olev_phone_track2, mass_podmena_dinamic.olev_phone_track, static_phone_array2[0].class_replace)
                        olev_phone_track = mass_podmena_dinamic.olev_phone_track;
                        olev_phone_track2 = mass_podmena_dinamic.olev_phone_track2;


                    }


                } else {

                    static_phone_array3 = static_phone_array.filter(function (static_phone_array) {
                        return static_phone_array.canals.length == 2
                    });

                    if (static_phone_array3.length > 0) {


                        if (static_phone_array3[0].class_replace !== null) {

                            kanal1 = static_phone_array3[0].canals[0];
                            kanal2 = static_phone_array3[0].canals[1];


                            if (neiros_show == null||neiros_show=="null") {
                                neiros_show = '';
                            }


                            if (params_neiros['neiros'] === kanal1 || params_neiros['neiros'] === kanal2 || neiros_show.indexOf(kanal1) > 0 || neiros_show.indexOf(kanal2) > 0 || kanal1 === sb.current.typ + '1') {
                                mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone, static_phone_array3[0].phone2)
                                replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
                                olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
                                show_phone_neiros = 1;
                                if (neiros_show=='null'||neiros_show==null) {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal1 + ',' + kanal2;
                                    neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }
                            }
                        }

                    } else {

                        static_phone_array3 = static_phone_array.filter(function (static_phone_array) {
                            return static_phone_array.canals.length == 1
                        });

                        if (static_phone_array3.length === 1) {


                            if (static_phone_array3[0].class_replace !== null) {
                                kanal1 = static_phone_array3[0].canals[0];


                                if (kanal1 === sb.current.typ + '1') {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal1;
                                    neiros_show= all_canals
                                    setCookie('neiros_show', all_canals, dada_year)
                                }



                                if (neiros_show == null||neiros_show=="null") {
                                    neiros_show = '';
                                }


                                if (kanal1 === sb.current.typ + '1' || neiros_show === kanal1) {
                                    setCookie("olev_phone_track", static_phone_array3[0].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[0].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone, static_phone_array3[0].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;


                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal1;neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }
                                }

                            }


                        }

                        if (static_phone_array3.length === 2) {


                            if (static_phone_array3[0].class_replace !== null) {
                                kanal1 = static_phone_array3[0].canals[0];
                                kanal2 = static_phone_array3[1].canals[0]


                                kanal1_n = kanal1.replace('1', '');
                                kanal2_n = kanal2.replace('1', '');


                                if (params_neiros_search.indexOf(kanal1_n) > -1 || kanal1 === sb.current.typ + '1') {


                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal1
                                    setCookie('neiros_show', all_canals, dada_year)
                                }


                                if (params_neiros_search.indexOf(kanal2_n) > -1 || kanal2 === sb.current.typ + '1') {

                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal2;
                                    neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }



                                if (neiros_show == null||neiros_show=="null") {
                                    neiros_show = '';
                                }


                                if (params_neiros['neiros'] === kanal1 || neiros_show === kanal1) {
                                    setCookie("olev_phone_track", static_phone_array3[0].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[0].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone, static_phone_array3[0].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal1;
                                        neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }

                                }


                                if (kanal2 === sb.current.typ + '1' || neiros_show === kanal2) {
                                    setCookie("olev_phone_track", static_phone_array3[1].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[1].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[1].phone, static_phone_array3[1].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[1].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;


                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal2
                                        neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }
                                }

                            }


                        }

                        if (static_phone_array3.length === 3) {

                            if (static_phone_array3[0].class_replace !== null) {
                                kanal1 = static_phone_array3[0].canals[0];
                                kanal2 = static_phone_array3[1].canals[0]
                                kanal3 = static_phone_array3[2].canals[0]

                                if (params_neiros['neiros'] === kanal1) {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal1;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }

                                if (params_neiros['neiros'] === kanal2) {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal2;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }

                                if (kanal3 === sb.current.typ + '1') {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal3;
                                    neiros_show=all_canals;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }



                                if (neiros_show==null||neiros_show=='null') {
                                    neiros_show = '';
                                }


                                if (params_neiros['neiros'] === kanal1 || neiros_show === kanal1) {
                                    setCookie("olev_phone_track", static_phone_array3[0].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[0].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone, static_phone_array3[0].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal1
                                        neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }

                                }

                                if (params_neiros['neiros'] === kanal2 || neiros_show === kanal2) {
                                    setCookie("olev_phone_track", static_phone_array3[1].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[1].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[1].phone, static_phone_array3[1].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[1].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;


                                    show_phone_neiros = 1;
                                    if (neiros_show == null || neiros_show == 'null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal2
                                        neiros_show = all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }
                                }

                                if (kanal3 === sb.current.typ + '1' || neiros_show === kanal3) {
                                    setCookie("olev_phone_track", static_phone_array3[2].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[2].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[2].phone, static_phone_array3[2].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[2].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;


                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal3
                                        neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }
                                }

                            }


                        }

                        if (static_phone_array3.length === 4) {

                            if (static_phone_array3[0].class_replace !== null) {
                                kanal1 = static_phone_array3[0].canals[0];
                                kanal2 = static_phone_array3[1].canals[0]
                                kanal3 = static_phone_array3[2].canals[0]
                                kanal4 = static_phone_array3[3].canals[0]

                                if (params_neiros['neiros'] === kanal1) {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal1;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }

                                if (params_neiros['neiros'] === kanal2) {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal2;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }

                                if (kanal3 === sb.current.typ + '1') {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal3;
                                    neiros_show=all_canals;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }



                                if (neiros_show == null||neiros_show=="null") {
                                    neiros_show = '';
                                }


                                if (params_neiros['neiros'] === kanal1 || neiros_show === kanal1) {
                                    setCookie("olev_phone_track", static_phone_array3[0].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[0].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone, static_phone_array3[0].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal1;
                                        neiros_show=all_canals;neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }

                                }

                                if (params_neiros['neiros'] === kanal2 || neiros_show === kanal2) {
                                    setCookie("olev_phone_track", static_phone_array3[1].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[1].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[1].phone, static_phone_array3[1].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[1].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;


                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal2;
                                        ;neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }
                                }


                                if (kanal3 === sb.current.typ + '1' || neiros_show === kanal3) {
                                    setCookie("olev_phone_track", static_phone_array3[2].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[2].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[2].phone, static_phone_array3[2].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[2].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;


                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal3 ;neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }
                                }

                                if (kanal4 == 'facebook1') {
                                    kanal4 = 'fb1';
                                }

                                if (params_neiros['neiros'] === kanal4 || neiros_show === kanal4) {
                                    setCookie("olev_phone_track", static_phone_array3[3].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[3].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[3].phone, static_phone_array3[3].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[3].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;


                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal2 ;neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }
                                }


                            }


                        }

                        if (static_phone_array3.length === 2) {
                            if (static_phone_array3[0].class_replace !== null) {

                                kanal1 = static_phone_array3[0].canals[0];
                                kanal2 = static_phone_array3[1].canals[0]

                                if (params_neiros['neiros'] === kanal1) {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal1 ;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }

                                if (params_neiros['neiros'] === kanal2) {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal2 ;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }


                                if (neiros_show == null||neiros_show=="null") {
                                    neiros_show = '';
                                }


                                if (params_neiros['neiros'] === kanal1 || neiros_show === kanal1) {
                                    setCookie("olev_phone_track", static_phone_array3[0].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[0].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone, static_phone_array3[0].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal1 ;neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }

                                }

                                if (params_neiros['neiros'] === kanal2 || neiros_show === kanal2) {
                                    setCookie("olev_phone_track", static_phone_array3[1].phone, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    setCookie("olev_phone_track2", static_phone_array3[1].phone2, {
                                        expires: 900,
                                        path: '/'
                                    });
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[1].phone, static_phone_array3[1].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[1].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;


                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal2 ;neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }
                                }


                            }


                        }


                        if (static_phone_array3.length === 1) {

                            if (static_phone_array3[0].class_replace !== null) {
                                kanal1 = static_phone_array3[0].canals[0];



                                if (neiros_show == null||neiros_show=="null") {
                                    neiros_show = '';
                                }

                                if (params_neiros['neiros'] === kanal1 || neiros_show === kanal1) {
                                    mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone, static_phone_array3[0].phone2)
                                    replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
                                    olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                    olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;

                                    show_phone_neiros = 1;
                                    if (neiros_show==null||neiros_show=='null') {
                                        var date = new Date;
                                        date.setDate(date.getDate() + 1);
                                        dada_year = {
                                            'expires': date,
                                            'path': '/'

                                        }
                                        all_canals = kanal1 ;neiros_show=all_canals;
                                        setCookie('neiros_show', all_canals, dada_year)
                                    }
                                }


                            }


                        }


                    }


                }

            }


            if (dinamic_phone_array.length > 0) {
                all_canals = '';
                show_phone_neiros = 0;
                dinamic_phone_array2 = dinamic_phone_array.filter(function (dinamic_phone_array) {
                    return dinamic_phone_array.canals.length == 0
                });

                if (dinamic_phone_array2.length > 0) {
                    mass_podmena_dinamic = podmena_dinamic(dinamic_phone_array2[0].phone, dinamic_phone_array2[0].phone2)
                    show_phone_neiros = 1;
                    replacenumber(mass_podmena_dinamic.olev_phone_track2, mass_podmena_dinamic.olev_phone_track, dinamic_phone_array2[0].class_replace)
                    olev_phone_track = mass_podmena_dinamic.olev_phone_track;
                    olev_phone_track2 = mass_podmena_dinamic.olev_phone_track2;


                } else {
                    dinamic_phone_array3 = dinamic_phone_array.filter(function (dinamic_phone_array) {
                        return dinamic_phone_array.canals.length == 2
                    });
                    if (dinamic_phone_array3.length > 0) {
                        kanal1 = dinamic_phone_array3[0].canals[0];
                        kanal2 = dinamic_phone_array3[0].canals[1];


                        if (neiros_show == null||neiros_show=="null") {
                            neiros_show = '';
                        }
                        if (params_neiros_search.indexOf(kanal1) === 0 || params_neiros_search.indexOf(kanal2) === 0 || neiros_show.indexOf(kanal1) > 0 || neiros_show.indexOf(kanal2) > 0) {
                            mass_podmena_dinamic2 = podmena_dinamic(dinamic_phone_array3[0].phone, dinamic_phone_array3[0].phone2)
                            replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, dinamic_phone_array3[0].class_replace)
                            olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                            olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
                            show_phone_neiros = 1;
                            if (neiros_show==null||neiros_show=='null') {
                                var date = new Date;
                                date.setDate(date.getDate() + 1);
                                dada_year = {
                                    'expires': date,
                                    'path': '/'

                                }
                                all_canals = kanal1 + ',' + kanal2
                                ;neiros_show=all_canals;
                                setCookie('neiros_show', all_canals, dada_year)
                            }
                        }
                    } else {

                        dinamic_phone_array3 = dinamic_phone_array.filter(function (dinamic_phone_array) {
                            return dinamic_phone_array.canals.length == 1
                        });

                        if (dinamic_phone_array3.length == 2) {
                            kanal1 = dinamic_phone_array3[0].canals[0];
                            kanal2 = dinamic_phone_array3[1].canals[0];

                            if (neiros_show == null||neiros_show=="null") {
                                neiros_show = '';
                            }
                            if (params_neiros_search.indexOf(kanal1) === 0 || neiros_show.indexOf(kanal1) === 0) {
                                mass_podmena_dinamic2 = podmena_dinamic(dinamic_phone_array3[0].phone, dinamic_phone_array3[0].phone2)
                                replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, dinamic_phone_array3[0].class_replace)
                                olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
                                show_phone_neiros = 1;
                                if (neiros_show==null||neiros_show=='null') {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal1 ;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }
                            }

                            if (params_neiros_search.indexOf(kanal2) === 0 || neiros_show.indexOf(kanal2) === 0) {
                                mass_podmena_dinamic2 = podmena_dinamic(dinamic_phone_array3[1].phone, dinamic_phone_array3[1].phone2)
                                replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, dinamic_phone_array3[0].class_replace)
                                olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
                                show_phone_neiros = 1;
                                if (neiros_show==null||neiros_show=='null') {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal2 ;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }
                            }


                        }

                        if (dinamic_phone_array3.length == 1) {
                            kanal1 = dinamic_phone_array3[0].canals[0];

                            if (neiros_show == null||neiros_show=="null") {
                                neiros_show = '';
                            }
                            if (params_neiros_search.indexOf(kanal1) === 0 || neiros_show === kanal1) {
                                mass_podmena_dinamic2 = podmena_dinamic(dinamic_phone_array3[0].phone, dinamic_phone_array3[0].phone2)
                                replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, dinamic_phone_array3[0].class_replace)
                                olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
                                olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
                                show_phone_neiros = 1;
                                if (neiros_show==null||neiros_show=='null') {
                                    var date = new Date;
                                    date.setDate(date.getDate() + 1);
                                    dada_year = {
                                        'expires': date,
                                        'path': '/'

                                    }
                                    all_canals = kanal1 ;neiros_show=all_canals;
                                    setCookie('neiros_show', all_canals, dada_year)
                                }
                            }


                        }

                    }

                }


                if (all_canals === '')
                    statick_podmena_nomera();
            } else {

                statick_podmena_nomera();


            }

        }


    }



    inter = 1;
    document.onmouseover = document.onmouseout = handler;

    function handler(event) {

        function str(el) {
            if (!el) return "null"
            return el.className || el.tagName;
        }


        if (event.type == 'mouseover') {
            inter = 1;
            setCookie('neiros_dinmick', 1, {
                expires: 900,
                path: '/'

            });
        }
        if (event.type == 'mouseout') {
            inter = 1;
            setCookie('neiros_dinmick', 1, {
                expires: 900,
                path: '/'

            });
        }
    }


    setInterval(function () {
        setCookie('neiros_dinmick', inter++, {
            expires: 900,
            path: '/'

        });

        if (inter == 1800) {
            set_new_neorps_metrika();



        }


    }, 1000);


    window.addEventListener('beforeunload', function (e) {

    });








    send_2_metrika(sb, _ym_uid, _gid, olev_phone_track, olev_phone_track2, show_phone_neiros)
    all_widgets_go(sb, _ym_uid, _gid, olev_phone_track, olev_phone_track2)



}

function all_widgets_go(sb) {
    if (CBU_GLOBAL.config.widget.tip_0 == 1) {
        var newdocpromo = document.createElement("div");
        newdocpromo.className = "wrp_cbu", newdocpromo.innerHTML = '<div   class="wrp_cbu_w_tip_1" style="background: #' + CBU_GLOBAL.config.widget.tip_0_background + '; ' + CBU_GLOBAL.config.widget.tip_0_position_x + ': 0px;' + CBU_GLOBAL.config.widget.tip_0_position_y + ': 0px;">' +
            ' <div class=" " style="color: #' + CBU_GLOBAL.config.widget.tip_0_color + '">Промокод</div><div style="color: #' + CBU_GLOBAL.config.widget.tip_0_color + '">' + sb.promo.code + '</div> </div>', document.body.appendChild(newdocpromo)
    }

    if (CBU_GLOBAL.config.widget.tip_1 == 1) {


        if (CBU_GLOBAL.config.widget.tip_1_dop == 1) {

            include(CBU_GLOBAL.config.widget.tip_1_dop_url);

        }
        if (CBU_GLOBAL.config.widget.tip_1_osn == 1) {

            var widget_name = 'callback';
        }

    }

    if ((CBU_GLOBAL.config.widget.tip_12 == 1) || (CBU_GLOBAL.config.widget.tip_1_osn == 1)) {

        if ((CBU_GLOBAL.config.widget.tip_12 == 1) && (CBU_GLOBAL.config.widget.tip_1_osn == 1)) {
            var time_change = 5
        }


        if (CBU_GLOBAL.config.widget.tip_12 == 1) {
            var widget_name = 'widget';
        }


        include(CBU_GLOBAL.config.widget.tip_12_url)
    }
    if (CBU_GLOBAL.config.widget.tip_13 == 1) {

        include(CBU_GLOBAL.config.widget.tip_13_url)
    }
    if (CBU_GLOBAL.config.widget.tip_19_status == 1) {

        include(CBU_GLOBAL.config.widget.tip_19_url)
    }


    if (CBU_GLOBAL.config.widget.tip_9 == 1) {

        new_email = CBU_GLOBAL.config.widget.tip_email_1 + '+' + sb.promo.code + '@' + CBU_GLOBAL.config.widget.tip_email_2

        /*      window.onload = function () {*/

        /*start email*/


        if (CBU_GLOBAL.config.widget.tip_email_3 != null) {
            idelementemail = CBU_GLOBAL.config.widget.tip_email_3.split('#')[1];
            classelementemail = CBU_GLOBAL.config.widget.tip_email_3.split('.')[1];

            /*  console.log(classelementemail);*/
            a = document.getElementsByClassName(classelementemail);/*console.log(a);*/
            for (var i = 0; i < a.length; i++) {
                a[i].innerHTML = new_email;
                if (CBU_GLOBAL.config.widget.tip_email_4 == 0) {
                    a[i].innerHTML = new_email;
                } else {
                    a[i].innerHTML = '<a href="mailto:' + new_email + '">' + new_email + '</a>';
                }

            }

            bn = document.getElementById(idelementemail);
            if (bn != null) {

                if (CBU_GLOBAL.config.widget.tip_email_4 == 0) {
                    bn.innerHTML = new_email;
                } else {
                    bn.innerHTML = '<a href="mailto:' + new_email + '">' + new_email + '</a>';
                }

            }

            /*start email*/


            //  document.body.innerHTML = document.body.innerHTML.replace(CBU_GLOBAL.config.widget.tip_email, new_email);
            /*   }*/
        }
    }


}



function send_2_metrika(sb, _ym_uid, _gid, olev_phone_track, olev_phone_track2, show_phone_neiros) {


    var new_gid = encodeURIComponent(JSON.stringify(_gid));


    if (new_gid === 'null') {
        console.log(new_gid);
        var send_gid = 0;
        setInterval(function () {
            new_gid2 = encodeURIComponent(JSON.stringify( _ga));

            if (send_gid === 0) {

                if (new_gid2 !== 'null') {
                    new_gid2 = new_gid2.split('.');
                    new_gid2 = new_gid2[2] + '.' + new_gid2[3];
                    var body = 'neiros_visit=' + neiros_visit +
                        '&_gid=' + encodeURIComponent(JSON.stringify(new_gid2)) +
                        '&_ym_uid=' + encodeURIComponent(_ym_uid) +
                        '&roistat_visit=' + roistat_visit;
                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", CBU_GLOBAL.config.api_url + '/api/send_co_ga_ym', true);

                    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

                    xhr.send(body);
                    send_gid = 1;
                    console.log(send_gid);
                    console.log(new_gid2);
                }

            }


        }, 1000);

    }
    if (neiros_last_vst == null) {
        neiros_last_vst = 0;


    }
    url_neiros = '';
    if (params_neiros['neiros']) {
        url_neiros += '&neiros=' + encodeURIComponent(JSON.stringify(params_neiros['neiros']));
    }
    if (params_neiros['neiros_referrer']) {
        url_neiros += '&neiros_referrer=' + encodeURIComponent(JSON.stringify(params_neiros['neiros_referrer']));
    }
    if (params_neiros['neiros_position']) {
        url_neiros += '&neiros_position=' + encodeURIComponent(JSON.stringify(params_neiros['neiros_position']));
    }

    var reff = document.referrer;
    if (reff != '') {
        host = window.location.host
        referal_url = new URL(reff).hostname
        if (host === referal_url) {
            sb.current.rf = host;
            sb.current_add.rf = host;
        }

    }
    current_new = sb.current.src;
    if (current_new.indexOf('yandex') > -1) {

        if (current_new.indexOf('yabs.yandex.ru') > -1 || current_new.indexOf('direct.yandex.ru') > -1) {
            sb.current.src = 'yandex'
            sb.current.typ = 'yandex_direct'
            sb.current.mdm = 'yandex_direct'
        } else {

            if (sb.current.typ != 'utm') {
                sb.current.src = 'yandex'
                sb.current.typ = 'organic'
                sb.current.mdm = 'organic'
            }
        }

    }


    var body = 'neiros_visit=' + neiros_visit +
        '&first=' + encodeURIComponent(JSON.stringify(sb.first)) +
        '&neiros_last_vst=' + encodeURIComponent(neiros_last_vst) +
        '&url=' + encodeURIComponent(JSON.stringify(window.location.href)) +
        '&type=pageview&current=' + encodeURIComponent(JSON.stringify(sb.current)) +
        '&first_add=' + encodeURIComponent(JSON.stringify(sb.first_add)) +
        '&current_add=' + encodeURIComponent(JSON.stringify(sb.current_add)) +
        '&session=' + encodeURIComponent(JSON.stringify(sb.session)) +
        '&udata=' + encodeURIComponent(JSON.stringify(sb.udata)) +
        '&_ym_uid=' + encodeURIComponent(JSON.stringify(_ym_uid)) +
        '&my_metrika_id=' + NEIROS_METRIKA_ID +
        '&reload_page=' + reload_page +
        '&session_id=' + UNIQ_NEIROS_ID +
        '&is_first=' + is_first +
        '&_gid=' + encodeURIComponent(JSON.stringify(_gid)) +
        '&olev_phone_track=' + encodeURIComponent(olev_phone_track) +
        '&olev_phone_track2=' + encodeURIComponent(olev_phone_track2) +
        '&show_phone=' + encodeURIComponent(show_phone_neiros) +
        '&phone_status_dinamic=' + CBU_GLOBAL.config.widget.phone_status_dinamic +
        '&roistat_visit=' + roistat_visit +
        '&params=' + encodeURIComponent(JSON.stringify(params)) +
        '&promo=' + encodeURIComponent(JSON.stringify(sb.promo.code)) + url_neiros;





    neiros_last_vst = sb.udata.vst;
    setCookie('neiros_last_vst', sb.udata.vst, {
        expires: 900,
        path: '/'

    });

    setCookie("is_first", 1, {
        expires: -1,
        path: '/'
    });


    NeirosDatalayer.push({
        'neiros_visit': neiros_visit,

        'type': 'event',
        'name_event': 'neiros_form'
    })


    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            /* console.log(this.responseText);*/
            for_cookie = JSON.parse(this.responseText);

            NEIROS_METRIKA_ID=for_cookie['my_metrika_id'];
            setCookie("my_metrika_id",NEIROS_METRIKA_ID , {
                expires: 1800,
                path: '/'
            });


        }

    }

    xhr.open("POST", CBU_GLOBAL.config.api_url + '/v1/api/metrika/' + CBU_GLOBAL.config.widget.key, true);

    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

    xhr.send(body);


}


function NeirosEventSend(type_event, data) {

    if (data) {
        data.data.URL = window.location.href
        NeirosDatalayer[0].data_event = data
    }
    /*
	NeirosDatalayer[0].URL = window.location.href;*/
    NeirosDatalayer[0].name_event = type_event;
    NeirosDatalayer[0].my_metrika_id = NEIROS_METRIKA_ID;

    if (NeirosDatalayer[0].neiros_visit === null) {

        NeirosDatalayer[0].neiros_visit =neiros_visit;
    }

    body = "data=" + JSON.stringify(NeirosDatalayer[0]);
    var xhr = new XMLHttpRequest();

    xhr.open("POST", CBU_GLOBAL.config.api_url+'/api/ajax_form/' + CBU_GLOBAL.config.widget.key, true);

    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

    xhr.send(body);
}




function wistis_js_widget(order_id, phone, email, name) {

    var xhr = new XMLHttpRequest();

    var body = 'info=' + encodeURIComponent(order_id) + '&phone=' + phone + '&email=' + email + '&name=' + name + '&tip=3&hash=' + sbjs.get.first_add.hash;


    xhr.open("POST", CBU_GLOBAL.config.api_url+'/api/inputjs/' + CBU_GLOBAL.config.widget.key, true);
    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    inputjs
//    xhr.onreadystatechange = ...;

    xhr.send(body);

}

function include(url) {
    var script = document.createElement('script');
    script.src = url;
    document.getElementsByTagName('head')[0].appendChild(script);
}

 


